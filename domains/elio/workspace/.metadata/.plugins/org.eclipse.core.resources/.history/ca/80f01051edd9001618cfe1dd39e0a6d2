package edu.umich.eecs.soar.props.elio;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

import sml.Agent;
import sml.Agent.PrintEventInterface;
import sml.Kernel;
import sml.smlPrintEventId;
//import edu.umich.soar.debugger.SWTApplication;

public class SMLClient {
	
	public static final PrintEventInterface myPrinter =	new	PrintEventInterface() {
		public void	printEventHandler(int eventID, Object data,	Agent agent, String	message) {
			System.out.println("Soar said: <" + message	+ ">");
		}
	};
	
	public static void main(String[] args) {
		final boolean DEBUG = false;
		final int NUM_SAMPLES = 8;
		final String agentName = "ElioAgent";
		
		Kernel kernel = Kernel.CreateKernelInNewThread();
		kernel.SetAutoCommit(false);
		
		Agent agent = kernel.CreateAgent(agentName);
		
		//agent.RegisterForPrintEvent(smlPrintEventId.smlEVENT_PRINT, myPrinter, null);

		////System.out.println(agent.ExecuteCommandLine("print -a"));
		ElioWorld world = new ElioWorld(kernel, agent);
		
		agent.ExecuteCommandLine("watch 0");
		
		/*if (DEBUG) {
			world.initTask("procedure-a");
			//System.out.println("Spawn Debugger: " + agent.SpawnDebugger(kernel.GetListenerPort()));
			try {
				SWTApplication swtApp = new SWTApplication();
				swtApp.startApp(new String[]{"-remote"});
				agent.KillDebugger();
				System.exit(0); // is there a better way to get the Soar thread to stop? 
			}
			catch (Exception e) {
				e.printStackTrace();
			}
		}
		else */{
			//System.out.println(agent.ExecuteCommandLine("matches apply*elio*init"));
			//agent.RunSelf(3);

			//world.runDebug();
			//agent.ExecuteCommandLine("explain all on");
			//agent.ExecuteCommandLine("explain justifications on");
			world.runTest(-5);
			//agent.ExecuteCommandLine("watch 5");
			//agent.ExecuteCommandLine("watch --learn 2");
			//agent.ExecuteCommandLine("save agent "+ TEMP_AGENT_FILENAME + ".soar");

			//agent.ExecuteCommandLine("matches -w apply*elio*index1-div-marine*next");
			//agent.ExecuteCommandLine("p s1 -d 3");
			//agent.ExecuteCommandLine("e");
			//agent.ExecuteCommandLine("explain list");
			//agent.ExecuteCommandLine("explain 182");
			//agent.ExecuteCommandLine("explain id 42809");
			//agent.notify();
			//agent.ExecuteCommandLine("p @");
			//agent.ExecuteCommandLine("p -fc");
			
			/*world.clearOutputFile();
			for (int i=0; i<NUM_SAMPLES; ++i)
				world.doElio();
			 */
			
		}
		
		kernel.Shutdown();
	}

}
