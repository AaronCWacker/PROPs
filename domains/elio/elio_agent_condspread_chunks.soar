sp {chunk*elaborate*props*spread-result*onc*return*t47887-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-7)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-7 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-7)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 250)
    (link-stm-to-ltm <c1> 255)
}

sp {chunk*apply*props*spread-result*snc*t47843-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-7)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 271)
}

sp {chunk*apply*props*spread-result*snc*t47836-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-7)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 267)
}

sp {chunk*elaborate*props*spread-result*onc*return*t47441-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-6)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-6 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-6)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 275)
    (link-stm-to-ltm <c1> 278)
}

sp {chunk*apply*props*spread-result*snc*t47397-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-6)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 287)
}

sp {chunk*apply*props*spread-result*snc*t47390-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-6)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 285)
}

sp {chunk*elaborate*props*spread-result*onc*return*t46986-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-5)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-5 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-5)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 289)
    (link-stm-to-ltm <c1> 292)
}

sp {chunk*apply*props*spread-result*snc*t46942-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-5)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 297)
}

sp {chunk*apply*props*spread-result*snc*t46935-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-5)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 299)
}

sp {chunk*elaborate*props*spread-result*onc*return*t46432-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-4 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-4)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 301)
    (link-stm-to-ltm <c1> 304)
}

sp {chunk*apply*props*spread-result*snc*t46388-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-4)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 311)
}

sp {chunk*apply*props*spread-result*snc*t46381-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-4)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 309)
}

sp {chunk*elaborate*props*spread-result*onc*return*t45852-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 313)
    (link-stm-to-ltm <c1> 316)
}

sp {chunk*apply*props*spread-result*snc*t45808-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 322)
}

sp {chunk*apply*props*spread-result*snc*t45801-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-3)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 324)
}

sp {chunk*elaborate*props*spread-result*onc*return*t44627-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-2)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 326)
    (link-stm-to-ltm <c1> 329)
}

sp {chunk*apply*props*spread-result*snc*t44583-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 334)
}

sp {chunk*apply*props*spread-result*snc*t44576-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-2)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 336)
}

sp {chunk*elaborate*props*spread-result*onc*return*t43930-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 338)
    (link-stm-to-ltm <c1> 341)
}

sp {chunk*apply*props*spread-result*snc*t43886-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1> ^topstate <t1>)
    (<g1> ^Gtask procedure-d)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-d*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 349)
}

sp {chunk*apply*props*spread-result*snc*t43879-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^G <g1> ^topstate <t1>)
    (<g1> -^Gtop <g2>)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-d*start)
    (<c1> ^name |_P2|)
    (link-stm-to-ltm <c1> 353)
}

sp {chunk*elaborate*props*spread-result*onc*return*t32631-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-7)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-7 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-7)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 355)
    (link-stm-to-ltm <c1> 358)
}

sp {chunk*apply*props*spread-result*snc*t32587-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-7)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 366)
}

sp {chunk*apply*props*spread-result*snc*t32580-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-7)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 364)
}

sp {chunk*elaborate*props*spread-result*onc*return*t32185-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-6)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-6 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-6)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 368)
    (link-stm-to-ltm <c1> 371)
}

sp {chunk*apply*props*spread-result*snc*t32141-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-6)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 378)
}

sp {chunk*apply*props*spread-result*snc*t32134-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-6)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 376)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31656-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-5)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-5 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-5)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 380)
    (link-stm-to-ltm <c1> 383)
}

sp {chunk*apply*props*spread-result*snc*t31612-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-5)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 390)
}

sp {chunk*apply*props*spread-result*snc*t31605-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-5)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 388)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31542-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-div-lime-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-div-lime-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-div-lime*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 440)
    (link-stm-to-ltm <c1> 443)
}

sp {chunk*apply*props*spread-result*snc*t31498-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 452)
}

sp {chunk*apply*props*spread-result*snc*t31491-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 456)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31422-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-div-lime-div-lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-div-lime-div-lime1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-div-lime*div-lime1)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 458)
    (link-stm-to-ltm <c1> 461)
}

sp {chunk*apply*props*spread-result*snc*t31378-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*div-lime1)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 477)
}

sp {chunk*apply*props*spread-result*snc*t31371-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*div-lime1)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 473)
}

sp {chunk*apply*props*spread-result*snc*t31364-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*div-lime1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 469)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31293-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-div-lime-read-lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-div-lime-read-lime1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-div-lime*read-lime1)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 479)
    (link-stm-to-ltm <c1> 482)
}

sp {chunk*apply*props*spread-result*snc*t31249-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*read-lime1)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 491)
}

sp {chunk*apply*props*spread-result*snc*t31242-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*read-lime1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 489)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31195-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-div-lime-read-solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-div-lime-read-solid ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-div-lime*read-solid)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 493)
    (link-stm-to-ltm <c1> 496)
}

sp {chunk*apply*props*spread-result*snc*t31151-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^slot1 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*read-solid)
    (<c1> ^name _P17)
    (link-stm-to-ltm <c1> 505)
}

sp {chunk*apply*props*spread-result*snc*t31144-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*read-solid)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 501)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31064-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-4 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-4)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 392)
    (link-stm-to-ltm <c1> 395)
}

sp {chunk*apply*props*spread-result*snc*t31020-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-4)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 400)
}

sp {chunk*apply*props*spread-result*snc*t31013-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-4)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 402)
}

sp {chunk*elaborate*props*spread-result*onc*return*t30591-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 404)
    (link-stm-to-ltm <c1> 407)
}

sp {chunk*apply*props*spread-result*snc*t30547-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-3)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 414)
}

sp {chunk*apply*props*spread-result*snc*t30540-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 412)
}

sp {chunk*elaborate*props*spread-result*onc*return*t30463-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-greater-than-false)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-greater-than-false ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*greater-than-false)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 507)
    (link-stm-to-ltm <c1> 510)
}

sp {chunk*apply*props*spread-result*snc*t30419-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot4 false)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*greater-than-false)
    (<c1> ^name _P49)
    (link-stm-to-ltm <c1> 525)
}

sp {chunk*apply*props*spread-result*snc*t30412-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*greater-than-false)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 519)
}

sp {chunk*apply*props*spread-result*snc*t30405-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 greater-than)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*greater-than-false)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 521)
}

sp {chunk*elaborate*props*spread-result*onc*return*t30333-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-intermediate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-intermediate ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-intermediate)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 545)
    (link-stm-to-ltm <c1> 548)
}

sp {chunk*apply*props*spread-result*snc*t30289-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-intermediate)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 557)
}

sp {chunk*apply*props*spread-result*snc*t30282-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 intermediate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-intermediate)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 559)
}

sp {chunk*elaborate*props*spread-result*onc*return*t30226-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-toxin3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*toxin3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 561)
    (link-stm-to-ltm <c1> 564)
}

sp {chunk*apply*props*spread-result*snc*t30182-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*toxin3)
    (<c1> ^name _P28)
    (link-stm-to-ltm <c1> 578)
}

sp {chunk*apply*props*spread-result*snc*t30175-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*toxin3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 572)
}

sp {chunk*apply*props*spread-result*snc*t30168-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*toxin3)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 574)
}

sp {chunk*elaborate*props*spread-result*onc*return*t30099-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-add-toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-add-toxin3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*add-toxin3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 580)
    (link-stm-to-ltm <c1> 583)
}

sp {chunk*apply*props*spread-result*snc*t30055-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-toxin3)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 590)
}

sp {chunk*apply*props*spread-result*snc*t30048-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-toxin3)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 592)
}

sp {chunk*apply*props*spread-result*snc*t30041-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-toxin3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 588)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29970-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-toxin3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-toxin3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 594)
    (link-stm-to-ltm <c1> 597)
}

sp {chunk*apply*props*spread-result*snc*t29926-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-toxin3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 602)
}

sp {chunk*apply*props*spread-result*snc*t29919-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-toxin3)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 604)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29839-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-algae ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-algae)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 606)
    (link-stm-to-ltm <c1> 609)
}

sp {chunk*apply*props*spread-result*snc*t29795-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-algae)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 616)
}

sp {chunk*apply*props*spread-result*snc*t29788-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-algae)
    (<c1> ^name _P28)
    (link-stm-to-ltm <c1> 620)
}

sp {chunk*apply*props*spread-result*snc*t29781-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-algae)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 618)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29705-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-add-lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-add-lime1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*add-lime1)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 622)
    (link-stm-to-ltm <c1> 625)
}

sp {chunk*apply*props*spread-result*snc*t29661-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-lime1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 630)
}

sp {chunk*apply*props*spread-result*snc*t29654-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-lime1)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 634)
}

sp {chunk*apply*props*spread-result*snc*t29647-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-lime1)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 632)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29590-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-lime1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-lime1)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 636)
    (link-stm-to-ltm <c1> 639)
}

sp {chunk*apply*props*spread-result*snc*t29546-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-lime1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 644)
}

sp {chunk*apply*props*spread-result*snc*t29539-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-lime1)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 646)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29478-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-solid ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-solid)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 648)
    (link-stm-to-ltm <c1> 651)
}

sp {chunk*apply*props*spread-result*snc*t29434-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-solid)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 656)
}

sp {chunk*apply*props*spread-result*snc*t29427-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^slot1 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-solid)
    (<c1> ^name _P17)
    (link-stm-to-ltm <c1> 658)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29347-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-2)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 416)
    (link-stm-to-ltm <c1> 419)
}

sp {chunk*apply*props*spread-result*snc*t29303-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-2)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 426)
}

sp {chunk*apply*props*spread-result*snc*t29296-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 424)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29219-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 660)
    (link-stm-to-ltm <c1> 663)
}

sp {chunk*apply*props*spread-result*snc*t29175-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 669)
}

sp {chunk*apply*props*spread-result*snc*t29168-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 671)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29099-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-add ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*add)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 673)
    (link-stm-to-ltm <c1> 676)
}

sp {chunk*apply*props*spread-result*snc*t29055-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*add)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 683)
}

sp {chunk*apply*props*spread-result*snc*t29048-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*add)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 681)
}

sp {chunk*apply*props*spread-result*snc*t29041-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*add)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 685)
}

sp {chunk*elaborate*props*spread-result*onc*return*t28970-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-read)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-read ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*read)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 687)
    (link-stm-to-ltm <c1> 690)
}

sp {chunk*apply*props*spread-result*snc*t28926-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 limemin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*read)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 701)
}

sp {chunk*apply*props*spread-result*snc*t28919-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot4 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*read)
    (<c1> ^name _P35)
    (link-stm-to-ltm <c1> 699)
}

sp {chunk*apply*props*spread-result*snc*t28912-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*read)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 695)
}

sp {chunk*elaborate*props*spread-result*onc*return*t28839-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-mult ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*mult)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 703)
    (link-stm-to-ltm <c1> 706)
}

sp {chunk*apply*props*spread-result*snc*t28795-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*mult)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 715)
}

sp {chunk*apply*props*spread-result*snc*t28788-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*mult)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 713)
}

sp {chunk*apply*props*spread-result*snc*t28781-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 limemin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*mult)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 717)
}

sp {chunk*elaborate*props*spread-result*onc*return*t28734-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 719)
    (link-stm-to-ltm <c1> 722)
}

sp {chunk*apply*props*spread-result*snc*t28690-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 727)
}

sp {chunk*apply*props*spread-result*snc*t28683-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^slot1 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*start)
    (<c1> ^name _P17)
    (link-stm-to-ltm <c1> 729)
}

sp {chunk*elaborate*props*spread-result*onc*return*t28623-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 428)
    (link-stm-to-ltm <c1> 431)
}

sp {chunk*apply*props*spread-result*snc*t28579-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1> ^topstate <t1>)
    (<g1> ^Gtask procedure-c)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-c*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 436)
}

sp {chunk*apply*props*spread-result*snc*t28572-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^G <g1> ^topstate <t1>)
    (<g1> -^Gtop <g2>)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-c*start)
    (<c1> ^name |_P2|)
    (link-stm-to-ltm <c1> 438)
}

sp {chunk*elaborate*props*spread-result*onc*return*t18323-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 731)
    (link-stm-to-ltm <c1> 734)
}

sp {chunk*apply*props*spread-result*snc*t18279-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 740)
}

sp {chunk*apply*props*spread-result*snc*t18272-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*finish)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 742)
}

sp {chunk*elaborate*props*spread-result*onc*return*t18202-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-plus-index2-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-plus-index2-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-plus-index2*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 816)
    (link-stm-to-ltm <c1> 819)
}

sp {chunk*apply*props*spread-result*snc*t18158-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 825)
}

sp {chunk*apply*props*spread-result*snc*t18151-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 827)
}

sp {chunk*elaborate*props*spread-result*onc*return*t18089-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-plus-index2-add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-plus-index2-add ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-plus-index2*add)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 829)
    (link-stm-to-ltm <c1> 832)
}

sp {chunk*apply*props*spread-result*snc*t18045-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*add)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 837)
}

sp {chunk*apply*props*spread-result*snc*t18038-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*add)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 839)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17999-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-plus-index2-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-plus-index2-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-plus-index2*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 841)
    (link-stm-to-ltm <c1> 844)
}

sp {chunk*apply*props*spread-result*snc*t17955-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*start)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 852)
}

sp {chunk*apply*props*spread-result*snc*t17948-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 850)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17877-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-6)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-6 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-6)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 744)
    (link-stm-to-ltm <c1> 747)
}

sp {chunk*apply*props*spread-result*snc*t17833-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-6)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 754)
}

sp {chunk*apply*props*spread-result*snc*t17826-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-6)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 752)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17763-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-mult-index1-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-mult-index1-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-mult-index1*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 854)
    (link-stm-to-ltm <c1> 857)
}

sp {chunk*apply*props*spread-result*snc*t17719-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 863)
}

sp {chunk*apply*props*spread-result*snc*t17712-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 865)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17627-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-mult-index1-mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-mult-index1-mult ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-mult-index1*mult)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 867)
    (link-stm-to-ltm <c1> 870)
}

sp {chunk*apply*props*spread-result*snc*t17583-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 particulate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*mult)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 882)
}

sp {chunk*apply*props*spread-result*snc*t17576-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*mult)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 880)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17530-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-mult-index1-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-mult-index1-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-mult-index1*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 884)
    (link-stm-to-ltm <c1> 887)
}

sp {chunk*apply*props*spread-result*snc*t17486-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*start)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 894)
}

sp {chunk*apply*props*spread-result*snc*t17479-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 892)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17401-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-5)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-5 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-5)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 756)
    (link-stm-to-ltm <c1> 759)
}

sp {chunk*apply*props*spread-result*snc*t17357-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-5)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 766)
}

sp {chunk*apply*props*spread-result*snc*t17350-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-5)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 764)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17287-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mineral-div-marine-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mineral-div-marine-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mineral-div-marine*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 896)
    (link-stm-to-ltm <c1> 899)
}

sp {chunk*apply*props*spread-result*snc*t17243-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 907)
}

sp {chunk*apply*props*spread-result*snc*t17236-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 905)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17174-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mineral-div-marine-divide)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mineral-div-marine-divide ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mineral-div-marine*divide)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 909)
    (link-stm-to-ltm <c1> 912)
}

sp {chunk*apply*props*spread-result*snc*t17130-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*divide)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 917)
}

sp {chunk*apply*props*spread-result*snc*t17123-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*divide)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 919)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17066-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mineral-div-marine-skip)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mineral-div-marine-skip ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mineral-div-marine*skip)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 921)
    (link-stm-to-ltm <c1> 924)
}

sp {chunk*apply*props*spread-result*snc*t17022-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*skip)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 936)
}

sp {chunk*apply*props*spread-result*snc*t17015-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 particulate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*skip)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 938)
}

sp {chunk*elaborate*props*spread-result*onc*return*t16976-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mineral-div-marine-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mineral-div-marine-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mineral-div-marine*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 940)
    (link-stm-to-ltm <c1> 943)
}

sp {chunk*apply*props*spread-result*snc*t16932-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*start)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 950)
}

sp {chunk*apply*props*spread-result*snc*t16925-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 948)
}

sp {chunk*elaborate*props*spread-result*onc*return*t16847-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-4 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-4)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 768)
    (link-stm-to-ltm <c1> 771)
}

sp {chunk*apply*props*spread-result*snc*t16803-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-4)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 776)
}

sp {chunk*apply*props*spread-result*snc*t16796-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-4)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 778)
}

sp {chunk*elaborate*props*spread-result*onc*return*t16006-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 780)
    (link-stm-to-ltm <c1> 783)
}

sp {chunk*apply*props*spread-result*snc*t15962-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 788)
}

sp {chunk*apply*props*spread-result*snc*t15955-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-3)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 790)
}

sp {chunk*elaborate*props*spread-result*onc*return*t15269-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-2)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 792)
    (link-stm-to-ltm <c1> 795)
}

sp {chunk*apply*props*spread-result*snc*t15225-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-2)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 802)
}

sp {chunk*apply*props*spread-result*snc*t15218-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 800)
}

sp {chunk*elaborate*props*spread-result*onc*return*t14608-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 804)
    (link-stm-to-ltm <c1> 807)
}

sp {chunk*apply*props*spread-result*snc*t14564-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1> ^topstate <t1>)
    (<g1> ^Gtask procedure-b)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-b*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 812)
}

sp {chunk*apply*props*spread-result*snc*t14557-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^G <g1> ^topstate <t1>)
    (<g1> -^Gtop <g2>)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-b*start)
    (<c1> ^name |_P2|)
    (link-stm-to-ltm <c1> 814)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3801-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-7)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-7 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-7)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1345)
    (link-stm-to-ltm <c1> 1348)
}

sp {chunk*apply*props*spread-result*snc*t3757-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-7)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1355)
}

sp {chunk*apply*props*spread-result*snc*t3750-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-7)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 1357)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3687-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index2-min-mineral-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index2-min-mineral-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index2-min-mineral*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 952)
    (link-stm-to-ltm <c1> 955)
}

sp {chunk*apply*props*spread-result*snc*t3643-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 subtract)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 963)
}

sp {chunk*apply*props*spread-result*snc*t3636-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 961)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3574-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index2-min-mineral-subtract)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index2-min-mineral-subtract ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index2-min-mineral*subtract)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 965)
    (link-stm-to-ltm <c1> 968)
}

sp {chunk*apply*props*spread-result*snc*t3530-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*subtract)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 976)
}

sp {chunk*apply*props*spread-result*snc*t3523-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*subtract)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 978)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3477-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index2-min-mineral-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index2-min-mineral-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index2-min-mineral*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 980)
    (link-stm-to-ltm <c1> 983)
}

sp {chunk*apply*props*spread-result*snc*t3433-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 988)
}

sp {chunk*apply*props*spread-result*snc*t3426-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*start)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 990)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3348-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-6)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-6 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-6)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1359)
    (link-stm-to-ltm <c1> 1362)
}

sp {chunk*apply*props*spread-result*snc*t3304-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-6)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 1369)
}

sp {chunk*apply*props*spread-result*snc*t3297-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-6)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1367)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3227-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-div-marine-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-div-marine-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-div-marine*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 992)
    (link-stm-to-ltm <c1> 995)
}

sp {chunk*apply*props*spread-result*snc*t3183-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1001)
}

sp {chunk*apply*props*spread-result*snc*t3176-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1003)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3114-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-div-marine-divide)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-div-marine-divide ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-div-marine*divide)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1005)
    (link-stm-to-ltm <c1> 1008)
}

sp {chunk*apply*props*spread-result*snc*t3070-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*divide)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1015)
}

sp {chunk*apply*props*spread-result*snc*t3063-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*divide)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1013)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3017-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-div-marine-next)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-div-marine-next ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-div-marine*next)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1017)
    (link-stm-to-ltm <c1> 1020)
}

sp {chunk*apply*props*spread-result*snc*t2973-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*next)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1030)
}

sp {chunk*apply*props*spread-result*snc*t2966-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*next)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1028)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2920-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-div-marine-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-div-marine-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-div-marine*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1032)
    (link-stm-to-ltm <c1> 1035)
}

sp {chunk*apply*props*spread-result*snc*t2876-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*start)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 1042)
}

sp {chunk*apply*props*spread-result*snc*t2869-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1040)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2798-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-5)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-5 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-5)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1371)
    (link-stm-to-ltm <c1> 1374)
}

sp {chunk*apply*props*spread-result*snc*t2754-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-5)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1379)
}

sp {chunk*apply*props*spread-result*snc*t2747-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-5)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 1381)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2670-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1044)
    (link-stm-to-ltm <c1> 1047)
}

sp {chunk*apply*props*spread-result*snc*t2626-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1055)
}

sp {chunk*apply*props*spread-result*snc*t2619-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1053)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2553-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-divide)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-divide ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*divide)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1057)
    (link-stm-to-ltm <c1> 1060)
}

sp {chunk*apply*props*spread-result*snc*t2509-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*divide)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1071)
}

sp {chunk*apply*props*spread-result*snc*t2502-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*divide)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1069)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2433-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-add ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*add)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1073)
    (link-stm-to-ltm <c1> 1076)
}

sp {chunk*apply*props*spread-result*snc*t2389-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*add)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 1083)
}

sp {chunk*apply*props*spread-result*snc*t2382-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*add)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1081)
}

sp {chunk*apply*props*spread-result*snc*t2375-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 toxinmin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*add)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1085)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2318-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-toxinmin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-toxinmin ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*toxinmin)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1087)
    (link-stm-to-ltm <c1> 1090)
}

sp {chunk*apply*props*spread-result*snc*t2274-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*toxinmin)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1095)
}

sp {chunk*apply*props*spread-result*snc*t2267-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 toxinmax)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*toxinmin)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1097)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2220-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-start ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1099)
    (link-stm-to-ltm <c1> 1102)
}

sp {chunk*apply*props*spread-result*snc*t2176-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1107)
}

sp {chunk*apply*props*spread-result*snc*t2169-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^slot1 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*start)
    (<c1> ^name _P17)
    (link-stm-to-ltm <c1> 1109)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2089-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-4 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-4)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1383)
    (link-stm-to-ltm <c1> 1386)
}

sp {chunk*apply*props*spread-result*snc*t2045-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-4)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1391)
}

sp {chunk*apply*props*spread-result*snc*t2038-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-4)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 1393)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1962-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-plus-mineral-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-plus-mineral-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-plus-mineral*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1111)
    (link-stm-to-ltm <c1> 1114)
}

sp {chunk*apply*props*spread-result*snc*t1918-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1129)
}

sp {chunk*apply*props*spread-result*snc*t1911-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1127)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1842-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-plus-mineral-add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-plus-mineral-add ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-plus-mineral*add)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1131)
    (link-stm-to-ltm <c1> 1134)
}

sp {chunk*apply*props*spread-result*snc*t1798-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 particulate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*add)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1147)
}

sp {chunk*apply*props*spread-result*snc*t1791-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*add)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1145)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1745-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-plus-mineral-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-plus-mineral-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-plus-mineral*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1149)
    (link-stm-to-ltm <c1> 1152)
}

sp {chunk*apply*props*spread-result*snc*t1701-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1159)
}

sp {chunk*apply*props*spread-result*snc*t1694-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*start)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 1161)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1623-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1395)
    (link-stm-to-ltm <c1> 1398)
}

sp {chunk*apply*props*spread-result*snc*t1579-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1403)
}

sp {chunk*apply*props*spread-result*snc*t1572-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-3)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 1405)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1495-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1163)
    (link-stm-to-ltm <c1> 1166)
}

sp {chunk*apply*props*spread-result*snc*t1451-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1172)
}

sp {chunk*apply*props*spread-result*snc*t1444-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 greater-of)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1174)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1382-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-greater)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-greater ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*greater)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1176)
    (link-stm-to-ltm <c1> 1179)
}

sp {chunk*apply*props*spread-result*snc*t1338-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*greater)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1187)
}

sp {chunk*apply*props*spread-result*snc*t1331-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*greater)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1185)
}

sp {chunk*apply*props*spread-result*snc*t1324-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*greater)
    (<c1> ^name _P28)
    (link-stm-to-ltm <c1> 1189)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1251-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-div-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-div-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*div-3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1191)
    (link-stm-to-ltm <c1> 1194)
}

sp {chunk*apply*props*spread-result*snc*t1207-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1199)
}

sp {chunk*apply*props*spread-result*snc*t1200-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-3)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1203)
}

sp {chunk*apply*props*spread-result*snc*t1193-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-3)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 1201)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1122-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-read-solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-read-solid ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*read-solid)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1205)
    (link-stm-to-ltm <c1> 1208)
}

sp {chunk*apply*props*spread-result*snc*t1078-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot4 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*read-solid)
    (<c1> ^name _P35)
    (link-stm-to-ltm <c1> 1215)
}

sp {chunk*apply*props*spread-result*snc*t1071-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*read-solid)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1218)
}

sp {chunk*apply*props*spread-result*snc*t1064-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*read-solid)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1213)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1005-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-div-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-div-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*div-2)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1220)
    (link-stm-to-ltm <c1> 1223)
}

sp {chunk*apply*props*spread-result*snc*t961-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-2)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1234)
}

sp {chunk*apply*props*spread-result*snc*t954-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1230)
}

sp {chunk*apply*props*spread-result*snc*t947-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-2)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 1232)
}

sp {chunk*elaborate*props*spread-result*onc*return*t900-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1236)
    (link-stm-to-ltm <c1> 1239)
}

sp {chunk*apply*props*spread-result*snc*t856-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^slot1 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*start)
    (<c1> ^name _P17)
    (link-stm-to-ltm <c1> 1246)
}

sp {chunk*apply*props*spread-result*snc*t849-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1244)
}

sp {chunk*elaborate*props*spread-result*onc*return*t769-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-2)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1407)
    (link-stm-to-ltm <c1> 1410)
}

sp {chunk*apply*props*spread-result*snc*t725-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1424)
}

sp {chunk*apply*props*spread-result*snc*t718-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-2)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 1426)
}

sp {chunk*elaborate*props*spread-result*onc*return*t655-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1248)
    (link-stm-to-ltm <c1> 1251)
}

sp {chunk*apply*props*spread-result*snc*t611-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1264)
}

sp {chunk*apply*props*spread-result*snc*t604-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1262)
}

sp {chunk*elaborate*props*spread-result*onc*return*t535-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-mult ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*mult)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1266)
    (link-stm-to-ltm <c1> 1269)
}

sp {chunk*apply*props*spread-result*snc*t491-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 subtract)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*mult)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1282)
}

sp {chunk*apply*props*spread-result*snc*t484-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*mult)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1280)
}

sp {chunk*apply*props*spread-result*snc*t477-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*mult)
    (<c1> ^name _P28)
    (link-stm-to-ltm <c1> 1285)
}

sp {chunk*elaborate*props*spread-result*onc*return*t390-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-diff ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*diff)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1288)
    (link-stm-to-ltm <c1> 1291)
}

sp {chunk*apply*props*spread-result*snc*t346-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*diff)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 1310)
}

sp {chunk*apply*props*spread-result*snc*t339-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*diff)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1308)
}

sp {chunk*apply*props*spread-result*snc*t332-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 lime2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*diff)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1313)
}

sp {chunk*elaborate*props*spread-result*onc*return*t275-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*step-2)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1315)
    (link-stm-to-ltm <c1> 1318)
}

sp {chunk*apply*props*spread-result*snc*t231-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1325)
}

sp {chunk*apply*props*spread-result*snc*t224-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 lime4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*step-2)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1327)
}

sp {chunk*elaborate*props*spread-result*onc*return*t177-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-step-1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-step-1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*step-1)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1330)
    (link-stm-to-ltm <c1> 1333)
}

sp {chunk*apply*props*spread-result*snc*t133-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^slot1 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*step-1)
    (<c1> ^name _P17)
    (link-stm-to-ltm <c1> 1342)
}

sp {chunk*apply*props*spread-result*snc*t126-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*step-1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1340)
}

sp {chunk*elaborate*props*spread-result*onc*return*t51-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-1)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1429)
    (link-stm-to-ltm <c1> 1432)
}

sp {chunk*apply*props*spread-result*snc*t21-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^G <g1> ^topstate <t1>)
    (<g1> -^Gtop <g2>)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-a*step-1)
    (<c1> ^name |_P2|)
    (link-stm-to-ltm <c1> 1446)
}

sp {chunk*apply*props*spread-result*snc*t14-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1> ^topstate <t1>)
    (<g1> ^Gtask procedure-a)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-a*step-1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1443)
}


