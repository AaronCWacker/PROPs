sp {chunk*elaborate*props*spread-result*onc*return*t47610-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-7)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-7 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-7)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 1)
    (link-stm-to-ltm <c1> 5)
}

sp {chunk*apply*props*spread-result*snc*t47571-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-7)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 15)
}

sp {chunk*apply*props*spread-result*snc*t47564-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-7)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 18)
}

sp {chunk*elaborate*props*spread-result*onc*return*t47176-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-6)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-6 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-6)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 21)
    (link-stm-to-ltm <c1> 24)
}

sp {chunk*apply*props*spread-result*snc*t47137-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-6)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 33)
}

sp {chunk*apply*props*spread-result*snc*t47130-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-6)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 31)
}

sp {chunk*elaborate*props*spread-result*onc*return*t46733-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-5)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-5 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-5)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 35)
    (link-stm-to-ltm <c1> 38)
}

sp {chunk*apply*props*spread-result*snc*t46694-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-5)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 43)
}

sp {chunk*apply*props*spread-result*snc*t46687-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-5)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 45)
}

sp {chunk*elaborate*props*spread-result*onc*return*t46204-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-4 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-4)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 47)
    (link-stm-to-ltm <c1> 50)
}

sp {chunk*apply*props*spread-result*snc*t46165-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-4)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 57)
}

sp {chunk*apply*props*spread-result*snc*t46158-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-4)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 55)
}

sp {chunk*elaborate*props*spread-result*onc*return*t45632-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-3)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 59)
    (link-stm-to-ltm <c1> 62)
}

sp {chunk*apply*props*spread-result*snc*t45593-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 68)
}

sp {chunk*apply*props*spread-result*snc*t45586-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-3)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 70)
}

sp {chunk*elaborate*props*spread-result*onc*return*t44444-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-2)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 72)
    (link-stm-to-ltm <c1> 75)
}

sp {chunk*apply*props*spread-result*snc*t44405-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-2)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 82)
}

sp {chunk*apply*props*spread-result*snc*t44398-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 80)
}

sp {chunk*elaborate*props*spread-result*onc*return*t43771-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*start)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 84)
    (link-stm-to-ltm <c1> 87)
}

sp {chunk*apply*props*spread-result*snc*t43732-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^G <g1> ^topstate <t1>)
    (<g1> -^Gtop <g2>)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-d*start)
    (<c1> ^name |_P2|)
    (link-stm-to-ltm <c1> 98)
}

sp {chunk*apply*props*spread-result*snc*t43725-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1> ^topstate <t1>)
    (<g1> ^Gtask procedure-d)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-d*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 95)
}

sp {chunk*elaborate*props*spread-result*onc*return*t32453-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-7)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-7 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-7)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 100)
    (link-stm-to-ltm <c1> 103)
}

sp {chunk*apply*props*spread-result*snc*t32414-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-7)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 108)
}

sp {chunk*apply*props*spread-result*snc*t32407-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-7)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 110)
}

sp {chunk*elaborate*props*spread-result*onc*return*t32019-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-6)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-6 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-6)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 112)
    (link-stm-to-ltm <c1> 115)
}

sp {chunk*apply*props*spread-result*snc*t31980-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-6)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 122)
}

sp {chunk*apply*props*spread-result*snc*t31973-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-6)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 120)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31491-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-5)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-5 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-5)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 124)
    (link-stm-to-ltm <c1> 127)
}

sp {chunk*apply*props*spread-result*snc*t31452-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-5)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 132)
}

sp {chunk*apply*props*spread-result*snc*t31445-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-5)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 134)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31380-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-div-lime-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-div-lime-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-div-lime*finish)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 184)
    (link-stm-to-ltm <c1> 187)
}

sp {chunk*apply*props*spread-result*snc*t31341-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 195)
}

sp {chunk*apply*props*spread-result*snc*t31334-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*finish)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 198)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31263-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-div-lime-div-lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-div-lime-div-lime1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-div-lime*div-lime1)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 200)
    (link-stm-to-ltm <c1> 203)
}

sp {chunk*apply*props*spread-result*snc*t31224-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*div-lime1)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 214)
}

sp {chunk*apply*props*spread-result*snc*t31217-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*div-lime1)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 217)
}

sp {chunk*apply*props*spread-result*snc*t31210-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*div-lime1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 211)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31151-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-div-lime-read-lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-div-lime-read-lime1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-div-lime*read-lime1)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 219)
    (link-stm-to-ltm <c1> 222)
}

sp {chunk*apply*props*spread-result*snc*t31112-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*read-lime1)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 231)
}

sp {chunk*apply*props*spread-result*snc*t31105-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*read-lime1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 229)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31056-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-div-lime-read-solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-div-lime-read-solid ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-div-lime*read-solid)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 233)
    (link-stm-to-ltm <c1> 236)
}

sp {chunk*apply*props*spread-result*snc*t31017-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*read-solid)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 241)
}

sp {chunk*apply*props*spread-result*snc*t31010-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^in1 <i1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i2> ^condition <c1>)
    (<i2> ^name propose*elio*solid-div-lime*read-solid)
    (<c1> ^name _P16)
    (link-stm-to-ltm <c1> 244)
}

sp {chunk*elaborate*props*spread-result*onc*return*t30928-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-4 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-4)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 136)
    (link-stm-to-ltm <c1> 139)
}

sp {chunk*apply*props*spread-result*snc*t30889-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-4)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 144)
}

sp {chunk*apply*props*spread-result*snc*t30882-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-4)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 146)
}

sp {chunk*elaborate*props*spread-result*onc*return*t30467-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-3)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 148)
    (link-stm-to-ltm <c1> 151)
}

sp {chunk*apply*props*spread-result*snc*t30428-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 156)
}

sp {chunk*apply*props*spread-result*snc*t30421-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-3)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 158)
}

sp {chunk*elaborate*props*spread-result*onc*return*t30356-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-greater-than-false)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-greater-than-false ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*greater-than-false)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 246)
    (link-stm-to-ltm <c1> 249)
}

sp {chunk*apply*props*spread-result*snc*t30317-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 greater-than)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*greater-than-false)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 259)
}

sp {chunk*apply*props*spread-result*snc*t30310-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*greater-than-false)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 257)
}

sp {chunk*apply*props*spread-result*snc*t30303-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot4 false)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*greater-than-false)
    (<c1> ^name _P48)
    (link-stm-to-ltm <c1> 262)
}

sp {chunk*elaborate*props*spread-result*onc*return*t30215-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-intermediate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-intermediate ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-intermediate)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 282)
    (link-stm-to-ltm <c1> 285)
}

sp {chunk*apply*props*spread-result*snc*t30176-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-intermediate)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 294)
}

sp {chunk*apply*props*spread-result*snc*t30169-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 intermediate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-intermediate)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 296)
}

sp {chunk*elaborate*props*spread-result*onc*return*t30111-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-toxin3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*toxin3)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 298)
    (link-stm-to-ltm <c1> 301)
}

sp {chunk*apply*props*spread-result*snc*t30072-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*toxin3)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 314)
}

sp {chunk*apply*props*spread-result*snc*t30065-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*toxin3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 309)
}

sp {chunk*apply*props*spread-result*snc*t30058-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*toxin3)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 311)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29980-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-add-toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-add-toxin3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*add-toxin3)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 316)
    (link-stm-to-ltm <c1> 319)
}

sp {chunk*apply*props*spread-result*snc*t29941-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-toxin3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 324)
}

sp {chunk*apply*props*spread-result*snc*t29934-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-toxin3)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 328)
}

sp {chunk*apply*props*spread-result*snc*t29927-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-toxin3)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 326)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29868-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-toxin3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-toxin3)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 330)
    (link-stm-to-ltm <c1> 333)
}

sp {chunk*apply*props*spread-result*snc*t29829-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-toxin3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 338)
}

sp {chunk*apply*props*spread-result*snc*t29822-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-toxin3)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 340)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29740-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-algae ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-algae)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 342)
    (link-stm-to-ltm <c1> 345)
}

sp {chunk*apply*props*spread-result*snc*t29701-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-algae)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 356)
}

sp {chunk*apply*props*spread-result*snc*t29694-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-algae)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 352)
}

sp {chunk*apply*props*spread-result*snc*t29687-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-algae)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 354)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29609-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-add-lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-add-lime1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*add-lime1)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 358)
    (link-stm-to-ltm <c1> 361)
}

sp {chunk*apply*props*spread-result*snc*t29570-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-lime1)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 368)
}

sp {chunk*apply*props*spread-result*snc*t29563-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-lime1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 366)
}

sp {chunk*apply*props*spread-result*snc*t29556-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-lime1)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 370)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29497-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-lime1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-lime1)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 372)
    (link-stm-to-ltm <c1> 375)
}

sp {chunk*apply*props*spread-result*snc*t29458-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-lime1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 380)
}

sp {chunk*apply*props*spread-result*snc*t29451-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-lime1)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 382)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29402-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-solid ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-solid)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 384)
    (link-stm-to-ltm <c1> 387)
}

sp {chunk*apply*props*spread-result*snc*t29363-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^in1 <i1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i2> ^condition <c1>)
    (<i2> ^name propose*elio*lesser-evil*read-solid)
    (<c1> ^name _P16)
    (link-stm-to-ltm <c1> 394)
}

sp {chunk*apply*props*spread-result*snc*t29356-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-solid)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 392)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29274-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-2)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 160)
    (link-stm-to-ltm <c1> 163)
}

sp {chunk*apply*props*spread-result*snc*t29235-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-2)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 170)
}

sp {chunk*apply*props*spread-result*snc*t29228-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 168)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29163-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*finish)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 396)
    (link-stm-to-ltm <c1> 399)
}

sp {chunk*apply*props*spread-result*snc*t29124-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 404)
}

sp {chunk*apply*props*spread-result*snc*t29117-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*finish)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 406)
}

sp {chunk*elaborate*props*spread-result*onc*return*t29053-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-add ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*add)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 408)
    (link-stm-to-ltm <c1> 411)
}

sp {chunk*apply*props*spread-result*snc*t29014-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*add)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 418)
}

sp {chunk*apply*props*spread-result*snc*t29007-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*add)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 416)
}

sp {chunk*apply*props*spread-result*snc*t29000-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*add)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 420)
}

sp {chunk*elaborate*props*spread-result*onc*return*t28927-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-read)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-read ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*read)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 422)
    (link-stm-to-ltm <c1> 425)
}

sp {chunk*apply*props*spread-result*snc*t28888-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot4 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*read)
    (<c1> ^name _P34)
    (link-stm-to-ltm <c1> 433)
}

sp {chunk*apply*props*spread-result*snc*t28881-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 limemin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*read)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 435)
}

sp {chunk*apply*props*spread-result*snc*t28874-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*read)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 430)
}

sp {chunk*elaborate*props*spread-result*onc*return*t28806-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-mult ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*mult)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 437)
    (link-stm-to-ltm <c1> 440)
}

sp {chunk*apply*props*spread-result*snc*t28767-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 limemin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*mult)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 451)
}

sp {chunk*apply*props*spread-result*snc*t28760-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*mult)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 447)
}

sp {chunk*apply*props*spread-result*snc*t28753-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*mult)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 449)
}

sp {chunk*elaborate*props*spread-result*onc*return*t28704-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*start)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 453)
    (link-stm-to-ltm <c1> 456)
}

sp {chunk*apply*props*spread-result*snc*t28665-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^in1 <i1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i2> ^condition <c1>)
    (<i2> ^name propose*elio*triple-lime*start)
    (<c1> ^name _P16)
    (link-stm-to-ltm <c1> 463)
}

sp {chunk*apply*props*spread-result*snc*t28658-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 461)
}

sp {chunk*elaborate*props*spread-result*onc*return*t28596-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*start)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 172)
    (link-stm-to-ltm <c1> 175)
}

sp {chunk*apply*props*spread-result*snc*t28557-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1> ^topstate <t1>)
    (<g1> ^Gtask procedure-c)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-c*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 180)
}

sp {chunk*apply*props*spread-result*snc*t28550-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^G <g1> ^topstate <t1>)
    (<g1> -^Gtop <g2>)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-c*start)
    (<c1> ^name |_P2|)
    (link-stm-to-ltm <c1> 182)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17707-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*finish)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 465)
    (link-stm-to-ltm <c1> 468)
}

sp {chunk*apply*props*spread-result*snc*t17668-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*finish)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 475)
}

sp {chunk*apply*props*spread-result*snc*t17661-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 473)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17589-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-plus-index2-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-plus-index2-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-plus-index2*finish)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 549)
    (link-stm-to-ltm <c1> 552)
}

sp {chunk*apply*props*spread-result*snc*t17550-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 557)
}

sp {chunk*apply*props*spread-result*snc*t17543-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*finish)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 559)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17472-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-plus-index2-add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-plus-index2-add ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-plus-index2*add)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 561)
    (link-stm-to-ltm <c1> 564)
}

sp {chunk*apply*props*spread-result*snc*t17433-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*add)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 569)
}

sp {chunk*apply*props*spread-result*snc*t17426-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*add)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 571)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17385-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-plus-index2-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-plus-index2-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-plus-index2*start)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 573)
    (link-stm-to-ltm <c1> 576)
}

sp {chunk*apply*props*spread-result*snc*t17346-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*start)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 584)
}

sp {chunk*apply*props*spread-result*snc*t17339-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 582)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17266-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-6)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-6 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-6)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 477)
    (link-stm-to-ltm <c1> 480)
}

sp {chunk*apply*props*spread-result*snc*t17227-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-6)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 485)
}

sp {chunk*apply*props*spread-result*snc*t17220-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-6)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 487)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17162-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-mult-index1-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-mult-index1-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-mult-index1*finish)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 586)
    (link-stm-to-ltm <c1> 589)
}

sp {chunk*apply*props*spread-result*snc*t17123-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*finish)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 596)
}

sp {chunk*apply*props*spread-result*snc*t17116-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 594)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17036-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-mult-index1-mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-mult-index1-mult ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-mult-index1*mult)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 598)
    (link-stm-to-ltm <c1> 601)
}

sp {chunk*apply*props*spread-result*snc*t16997-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*mult)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 611)
}

sp {chunk*apply*props*spread-result*snc*t16990-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 particulate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*mult)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 613)
}

sp {chunk*elaborate*props*spread-result*onc*return*t16942-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-mult-index1-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-mult-index1-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-mult-index1*start)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 615)
    (link-stm-to-ltm <c1> 618)
}

sp {chunk*apply*props*spread-result*snc*t16903-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 623)
}

sp {chunk*apply*props*spread-result*snc*t16896-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*start)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 625)
}

sp {chunk*elaborate*props*spread-result*onc*return*t16823-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-5)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-5 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-5)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 489)
    (link-stm-to-ltm <c1> 492)
}

sp {chunk*apply*props*spread-result*snc*t16784-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-5)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 497)
}

sp {chunk*apply*props*spread-result*snc*t16777-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-5)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 499)
}

sp {chunk*elaborate*props*spread-result*onc*return*t16712-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mineral-div-marine-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mineral-div-marine-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mineral-div-marine*finish)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 627)
    (link-stm-to-ltm <c1> 630)
}

sp {chunk*apply*props*spread-result*snc*t16673-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*finish)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 637)
}

sp {chunk*apply*props*spread-result*snc*t16666-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 635)
}

sp {chunk*elaborate*props*spread-result*onc*return*t16595-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mineral-div-marine-divide)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mineral-div-marine-divide ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mineral-div-marine*divide)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 639)
    (link-stm-to-ltm <c1> 642)
}

sp {chunk*apply*props*spread-result*snc*t16556-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*divide)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 649)
}

sp {chunk*apply*props*spread-result*snc*t16549-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*divide)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 647)
}

sp {chunk*elaborate*props*spread-result*onc*return*t16500-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mineral-div-marine-skip)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mineral-div-marine-skip ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mineral-div-marine*skip)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 651)
    (link-stm-to-ltm <c1> 654)
}

sp {chunk*apply*props*spread-result*snc*t16461-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 particulate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*skip)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 667)
}

sp {chunk*apply*props*spread-result*snc*t16454-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*skip)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 665)
}

sp {chunk*elaborate*props*spread-result*onc*return*t16413-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mineral-div-marine-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mineral-div-marine-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mineral-div-marine*start)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 669)
    (link-stm-to-ltm <c1> 672)
}

sp {chunk*apply*props*spread-result*snc*t16374-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 677)
}

sp {chunk*apply*props*spread-result*snc*t16367-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*start)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 679)
}

sp {chunk*elaborate*props*spread-result*onc*return*t16294-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-4 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-4)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 501)
    (link-stm-to-ltm <c1> 504)
}

sp {chunk*apply*props*spread-result*snc*t16255-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-4)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 511)
}

sp {chunk*apply*props*spread-result*snc*t16248-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-4)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 509)
}

sp {chunk*elaborate*props*spread-result*onc*return*t15494-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-3)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 513)
    (link-stm-to-ltm <c1> 516)
}

sp {chunk*apply*props*spread-result*snc*t15455-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 521)
}

sp {chunk*apply*props*spread-result*snc*t15448-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-3)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 523)
}

sp {chunk*elaborate*props*spread-result*onc*return*t14775-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-2)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 525)
    (link-stm-to-ltm <c1> 528)
}

sp {chunk*apply*props*spread-result*snc*t14736-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-2)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 535)
}

sp {chunk*apply*props*spread-result*snc*t14729-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 533)
}

sp {chunk*elaborate*props*spread-result*onc*return*t14123-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*start)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 537)
    (link-stm-to-ltm <c1> 540)
}

sp {chunk*apply*props*spread-result*snc*t14084-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1> ^topstate <t1>)
    (<g1> ^Gtask procedure-b)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-b*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 545)
}

sp {chunk*apply*props*spread-result*snc*t14077-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^G <g1> ^topstate <t1>)
    (<g1> -^Gtop <g2>)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-b*start)
    (<c1> ^name |_P2|)
    (link-stm-to-ltm <c1> 547)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3711-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-7)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-7 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-7)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 1068)
    (link-stm-to-ltm <c1> 1071)
}

sp {chunk*apply*props*spread-result*snc*t3672-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-7)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 1079)
}

sp {chunk*apply*props*spread-result*snc*t3665-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-7)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1077)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3600-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index2-min-mineral-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index2-min-mineral-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index2-min-mineral*finish)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 681)
    (link-stm-to-ltm <c1> 684)
}

sp {chunk*apply*props*spread-result*snc*t3561-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 subtract)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*finish)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 691)
}

sp {chunk*apply*props*spread-result*snc*t3554-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 689)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3483-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index2-min-mineral-subtract)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index2-min-mineral-subtract ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index2-min-mineral*subtract)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 693)
    (link-stm-to-ltm <c1> 696)
}

sp {chunk*apply*props*spread-result*snc*t3444-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*subtract)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 706)
}

sp {chunk*apply*props*spread-result*snc*t3437-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*subtract)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 704)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3389-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index2-min-mineral-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index2-min-mineral-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index2-min-mineral*start)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 708)
    (link-stm-to-ltm <c1> 711)
}

sp {chunk*apply*props*spread-result*snc*t3350-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 716)
}

sp {chunk*apply*props*spread-result*snc*t3343-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*start)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 718)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3263-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-6)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-6 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-6)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 1081)
    (link-stm-to-ltm <c1> 1084)
}

sp {chunk*apply*props*spread-result*snc*t3224-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-6)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1089)
}

sp {chunk*apply*props*spread-result*snc*t3217-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-6)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 1091)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3152-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-div-marine-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-div-marine-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-div-marine*finish)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 720)
    (link-stm-to-ltm <c1> 723)
}

sp {chunk*apply*props*spread-result*snc*t3113-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*finish)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 730)
}

sp {chunk*apply*props*spread-result*snc*t3106-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 728)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3042-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-div-marine-divide)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-div-marine-divide ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-div-marine*divide)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 732)
    (link-stm-to-ltm <c1> 735)
}

sp {chunk*apply*props*spread-result*snc*t3003-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*divide)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 742)
}

sp {chunk*apply*props*spread-result*snc*t2996-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*divide)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 740)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2955-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-div-marine-next)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-div-marine-next ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-div-marine*next)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 744)
    (link-stm-to-ltm <c1> 747)
}

sp {chunk*apply*props*spread-result*snc*t2916-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*next)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 755)
}

sp {chunk*apply*props*spread-result*snc*t2909-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*next)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 757)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2868-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-div-marine-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-div-marine-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-div-marine*start)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 759)
    (link-stm-to-ltm <c1> 762)
}

sp {chunk*apply*props*spread-result*snc*t2829-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 767)
}

sp {chunk*apply*props*spread-result*snc*t2822-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*start)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 769)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2749-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-5)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-5 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-5)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 1093)
    (link-stm-to-ltm <c1> 1096)
}

sp {chunk*apply*props*spread-result*snc*t2710-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-5)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1101)
}

sp {chunk*apply*props*spread-result*snc*t2703-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-5)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 1103)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2624-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*finish)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 771)
    (link-stm-to-ltm <c1> 774)
}

sp {chunk*apply*props*spread-result*snc*t2585-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*finish)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 781)
}

sp {chunk*apply*props*spread-result*snc*t2578-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 779)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2517-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-divide)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-divide ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*divide)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 783)
    (link-stm-to-ltm <c1> 786)
}

sp {chunk*apply*props*spread-result*snc*t2478-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*divide)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 797)
}

sp {chunk*apply*props*spread-result*snc*t2471-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*divide)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 795)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2393-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-add ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*add)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 799)
    (link-stm-to-ltm <c1> 802)
}

sp {chunk*apply*props*spread-result*snc*t2354-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*add)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 809)
}

sp {chunk*apply*props*spread-result*snc*t2347-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*add)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 807)
}

sp {chunk*apply*props*spread-result*snc*t2340-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 toxinmin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*add)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 811)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2274-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-toxinmin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-toxinmin ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*toxinmin)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 813)
    (link-stm-to-ltm <c1> 816)
}

sp {chunk*apply*props*spread-result*snc*t2235-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*toxinmin)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 821)
}

sp {chunk*apply*props*spread-result*snc*t2228-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 toxinmax)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*toxinmin)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 823)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2172-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-start ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*start)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 825)
    (link-stm-to-ltm <c1> 828)
}

sp {chunk*apply*props*spread-result*snc*t2133-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 833)
}

sp {chunk*apply*props*spread-result*snc*t2126-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^in1 <i1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i2> ^condition <c1>)
    (<i2> ^name propose*elio*mean-toxin*start)
    (<c1> ^name _P16)
    (link-stm-to-ltm <c1> 835)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2037-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-4 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-4)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 1105)
    (link-stm-to-ltm <c1> 1108)
}

sp {chunk*apply*props*spread-result*snc*t1998-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-4)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1113)
}

sp {chunk*apply*props*spread-result*snc*t1991-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-4)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 1115)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1913-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-plus-mineral-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-plus-mineral-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-plus-mineral*finish)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 837)
    (link-stm-to-ltm <c1> 840)
}

sp {chunk*apply*props*spread-result*snc*t1874-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*finish)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 854)
}

sp {chunk*apply*props*spread-result*snc*t1867-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 852)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1789-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-plus-mineral-add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-plus-mineral-add ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-plus-mineral*add)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 856)
    (link-stm-to-ltm <c1> 859)
}

sp {chunk*apply*props*spread-result*snc*t1750-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*add)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 870)
}

sp {chunk*apply*props*spread-result*snc*t1743-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 particulate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*add)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 872)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1702-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-plus-mineral-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-plus-mineral-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-plus-mineral*start)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 874)
    (link-stm-to-ltm <c1> 877)
}

sp {chunk*apply*props*spread-result*snc*t1663-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 884)
}

sp {chunk*apply*props*spread-result*snc*t1656-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*start)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 886)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1583-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-3)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 1117)
    (link-stm-to-ltm <c1> 1120)
}

sp {chunk*apply*props*spread-result*snc*t1544-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1125)
}

sp {chunk*apply*props*spread-result*snc*t1537-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-3)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 1127)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1458-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*finish)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 888)
    (link-stm-to-ltm <c1> 891)
}

sp {chunk*apply*props*spread-result*snc*t1419-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 greater-of)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*finish)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 898)
}

sp {chunk*apply*props*spread-result*snc*t1412-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 896)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1341-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-greater)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-greater ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*greater)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 900)
    (link-stm-to-ltm <c1> 903)
}

sp {chunk*apply*props*spread-result*snc*t1302-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*greater)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 911)
}

sp {chunk*apply*props*spread-result*snc*t1295-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*greater)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 909)
}

sp {chunk*apply*props*spread-result*snc*t1288-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*greater)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 913)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1227-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-div-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-div-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*div-3)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 915)
    (link-stm-to-ltm <c1> 918)
}

sp {chunk*apply*props*spread-result*snc*t1188-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-3)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 925)
}

sp {chunk*apply*props*spread-result*snc*t1181-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 923)
}

sp {chunk*apply*props*spread-result*snc*t1174-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-3)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 927)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1108-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-read-solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-read-solid ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*read-solid)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 929)
    (link-stm-to-ltm <c1> 932)
}

sp {chunk*apply*props*spread-result*snc*t1069-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*read-solid)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 937)
}

sp {chunk*apply*props*spread-result*snc*t1062-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot4 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*read-solid)
    (<c1> ^name _P34)
    (link-stm-to-ltm <c1> 939)
}

sp {chunk*apply*props*spread-result*snc*t1055-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*read-solid)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 942)
}

sp {chunk*elaborate*props*spread-result*onc*return*t980-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-div-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-div-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*div-2)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 944)
    (link-stm-to-ltm <c1> 947)
}

sp {chunk*apply*props*spread-result*snc*t941-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 954)
}

sp {chunk*apply*props*spread-result*snc*t934-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-2)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 958)
}

sp {chunk*apply*props*spread-result*snc*t927-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-2)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 956)
}

sp {chunk*elaborate*props*spread-result*onc*return*t878-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*start)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 960)
    (link-stm-to-ltm <c1> 963)
}

sp {chunk*apply*props*spread-result*snc*t839-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 968)
}

sp {chunk*apply*props*spread-result*snc*t832-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^in1 <i1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i2> ^condition <c1>)
    (<i2> ^name propose*elio*greater-algae*start)
    (<c1> ^name _P16)
    (link-stm-to-ltm <c1> 970)
}

sp {chunk*elaborate*props*spread-result*onc*return*t750-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-2)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 1129)
    (link-stm-to-ltm <c1> 1132)
}

sp {chunk*apply*props*spread-result*snc*t711-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1146)
}

sp {chunk*apply*props*spread-result*snc*t704-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-2)
    (<c1> ^name |_P9|)
    (link-stm-to-ltm <c1> 1148)
}

sp {chunk*elaborate*props*spread-result*onc*return*t639-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*finish)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 972)
    (link-stm-to-ltm <c1> 975)
}

sp {chunk*apply*props*spread-result*snc*t600-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*finish)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 987)
}

sp {chunk*apply*props*spread-result*snc*t593-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 985)
}

sp {chunk*elaborate*props*spread-result*onc*return*t522-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-mult ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*mult)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 989)
    (link-stm-to-ltm <c1> 992)
}

sp {chunk*apply*props*spread-result*snc*t483-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*mult)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1003)
}

sp {chunk*apply*props*spread-result*snc*t476-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*mult)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1008)
}

sp {chunk*apply*props*spread-result*snc*t469-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 subtract)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*mult)
    (<c1> ^name _P26)
    (link-stm-to-ltm <c1> 1005)
}

sp {chunk*elaborate*props*spread-result*onc*return*t387-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-diff ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*diff)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 1011)
    (link-stm-to-ltm <c1> 1014)
}

sp {chunk*apply*props*spread-result*snc*t348-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 lime2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*diff)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 1036)
}

sp {chunk*apply*props*spread-result*snc*t341-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*diff)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1031)
}

sp {chunk*apply*props*spread-result*snc*t334-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*diff)
    (<c1> ^name _P20)
    (link-stm-to-ltm <c1> 1033)
}

sp {chunk*elaborate*props*spread-result*onc*return*t275-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*step-2)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 1038)
    (link-stm-to-ltm <c1> 1041)
}

sp {chunk*apply*props*spread-result*snc*t236-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1048)
}

sp {chunk*apply*props*spread-result*snc*t229-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^in1 lime4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*step-2)
    (<c1> ^name _P18)
    (link-stm-to-ltm <c1> 1050)
}

sp {chunk*elaborate*props*spread-result*onc*return*t173-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-step-1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-step-1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*step-1)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 1053)
    (link-stm-to-ltm <c1> 1056)
}

sp {chunk*apply*props*spread-result*snc*t134-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^in1 <i1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i2> ^condition <c1>)
    (<i2> ^name propose*elio*solid-lime-diff*step-1)
    (<c1> ^name _P16)
    (link-stm-to-ltm <c1> 1065)
}

sp {chunk*apply*props*spread-result*snc*t127-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*step-1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1063)
}

sp {chunk*elaborate*props*spread-result*onc*return*t46-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-1)
    (<c1> ^name |_P4|)
    (link-stm-to-ltm <i1> 1151)
    (link-stm-to-ltm <c1> 1154)
}

sp {chunk*apply*props*spread-result*snc*t22-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1> ^topstate <t1>)
    (<g1> ^Gtask procedure-a)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-a*step-1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1165)
}

sp {chunk*apply*props*spread-result*snc*t15-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^G <g1> ^topstate <t1>)
    (<g1> -^Gtop <g2>)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-a*step-1)
    (<c1> ^name |_P2|)
    (link-stm-to-ltm <c1> 1168)
}


