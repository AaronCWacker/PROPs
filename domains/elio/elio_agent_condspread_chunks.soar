sp {chunk*elaborate*props*spread-result*onc*return*t52766-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-7)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-7 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-7)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1)
    (link-stm-to-ltm <c1> 9)
}

sp {chunk*apply*props*spread-result*snc*t52712-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-7)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 26)
}

sp {chunk*apply*props*spread-result*snc*t52705-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-7)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 22)
}

sp {chunk*elaborate*props*spread-result*onc*return*t52283-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-6)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-6 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-6)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 30)
    (link-stm-to-ltm <c1> 35)
}

sp {chunk*apply*props*spread-result*snc*t52229-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-6)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 44)
}

sp {chunk*apply*props*spread-result*snc*t52222-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-6)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 46)
}

sp {chunk*elaborate*props*spread-result*onc*return*t51791-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-5)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-5 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-5)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 48)
    (link-stm-to-ltm <c1> 53)
}

sp {chunk*apply*props*spread-result*snc*t51737-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-5)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 62)
}

sp {chunk*apply*props*spread-result*snc*t51730-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-5)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 60)
}

sp {chunk*elaborate*props*spread-result*onc*return*t51187-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-4 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-4)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 64)
    (link-stm-to-ltm <c1> 69)
}

sp {chunk*apply*props*spread-result*snc*t51133-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-4)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 78)
}

sp {chunk*apply*props*spread-result*snc*t51126-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-4)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 76)
}

sp {chunk*elaborate*props*spread-result*onc*return*t50496-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 80)
    (link-stm-to-ltm <c1> 85)
}

sp {chunk*apply*props*spread-result*snc*t50442-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 93)
}

sp {chunk*apply*props*spread-result*snc*t50435-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-3)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 95)
}

sp {chunk*elaborate*props*spread-result*onc*return*t49151-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*step-2)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 97)
    (link-stm-to-ltm <c1> 102)
}

sp {chunk*apply*props*spread-result*snc*t49097-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-2)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 111)
}

sp {chunk*apply*props*spread-result*snc*t49090-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-d*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 109)
}

sp {chunk*elaborate*props*spread-result*onc*return*t48392-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-d-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-d-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-d*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 113)
    (link-stm-to-ltm <c1> 118)
}

sp {chunk*apply*props*spread-result*snc*t48338-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1> ^topstate <t1>)
    (<g1> ^Gtask procedure-d)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-d*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 128)
}

sp {chunk*apply*props*spread-result*snc*t48331-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^G <g1> ^topstate <t1>)
    (<g1> -^Gtop <g2>)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-d)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-d*start)
    (<c1> ^name |_P2|)
    (link-stm-to-ltm <c1> 132)
}

sp {chunk*elaborate*props*spread-result*onc*return*t36291-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-7)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-7 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-7)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 134)
    (link-stm-to-ltm <c1> 140)
}

sp {chunk*apply*props*spread-result*snc*t36237-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-7)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 147)
}

sp {chunk*apply*props*spread-result*snc*t36230-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-7)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 149)
}

sp {chunk*elaborate*props*spread-result*onc*return*t35808-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-6)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-6 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-6)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 151)
    (link-stm-to-ltm <c1> 156)
}

sp {chunk*apply*props*spread-result*snc*t35754-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-6)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 163)
}

sp {chunk*apply*props*spread-result*snc*t35747-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-6)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 165)
}

sp {chunk*elaborate*props*spread-result*onc*return*t35222-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-5)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-5 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-5)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 167)
    (link-stm-to-ltm <c1> 172)
}

sp {chunk*apply*props*spread-result*snc*t35168-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-5)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 181)
}

sp {chunk*apply*props*spread-result*snc*t35161-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-5)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 179)
}

sp {chunk*elaborate*props*spread-result*onc*return*t35082-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-div-lime-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-div-lime-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-div-lime*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 247)
    (link-stm-to-ltm <c1> 253)
}

sp {chunk*apply*props*spread-result*snc*t35028-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 267)
}

sp {chunk*apply*props*spread-result*snc*t35021-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 263)
}

sp {chunk*elaborate*props*spread-result*onc*return*t34943-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-div-lime-div-lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-div-lime-div-lime1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-div-lime*div-lime1)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 269)
    (link-stm-to-ltm <c1> 274)
}

sp {chunk*apply*props*spread-result*snc*t34889-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*div-lime1)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 288)
}

sp {chunk*apply*props*spread-result*snc*t34882-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*div-lime1)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 292)
}

sp {chunk*apply*props*spread-result*snc*t34875-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*div-lime1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 284)
}

sp {chunk*elaborate*props*spread-result*onc*return*t34802-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-div-lime-read-lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-div-lime-read-lime1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-div-lime*read-lime1)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 294)
    (link-stm-to-ltm <c1> 299)
}

sp {chunk*apply*props*spread-result*snc*t34748-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*read-lime1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 308)
}

sp {chunk*apply*props*spread-result*snc*t34741-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*read-lime1)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 310)
}

sp {chunk*elaborate*props*spread-result*onc*return*t34664-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-div-lime-read-solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-div-lime-read-solid ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-div-lime*read-solid)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 312)
    (link-stm-to-ltm <c1> 317)
}

sp {chunk*apply*props*spread-result*snc*t34610-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-div-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*read-solid)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 324)
}

sp {chunk*apply*props*spread-result*snc*t34603-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^slot1 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-div-lime*read-solid)
    (<c1> ^name _P17)
    (link-stm-to-ltm <c1> 328)
}

sp {chunk*elaborate*props*spread-result*onc*return*t34500-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-4 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-4)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 183)
    (link-stm-to-ltm <c1> 188)
}

sp {chunk*apply*props*spread-result*snc*t34446-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-4)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 197)
}

sp {chunk*apply*props*spread-result*snc*t34439-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-4)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 195)
}

sp {chunk*elaborate*props*spread-result*onc*return*t33997-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 199)
    (link-stm-to-ltm <c1> 204)
}

sp {chunk*apply*props*spread-result*snc*t33943-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-3)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 213)
}

sp {chunk*apply*props*spread-result*snc*t33936-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 211)
}

sp {chunk*elaborate*props*spread-result*onc*return*t33843-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-greater-than-false)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-greater-than-false ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*greater-than-false)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 330)
    (link-stm-to-ltm <c1> 336)
}

sp {chunk*apply*props*spread-result*snc*t33789-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*greater-than-false)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 346)
}

sp {chunk*apply*props*spread-result*snc*t33782-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot4 false)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*greater-than-false)
    (<c1> ^name _P49)
    (link-stm-to-ltm <c1> 352)
}

sp {chunk*apply*props*spread-result*snc*t33775-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 greater-than)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*greater-than-false)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 348)
}

sp {chunk*elaborate*props*spread-result*onc*return*t33680-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-intermediate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-intermediate ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-intermediate)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 376)
    (link-stm-to-ltm <c1> 381)
}

sp {chunk*apply*props*spread-result*snc*t33626-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 intermediate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-intermediate)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 394)
}

sp {chunk*apply*props*spread-result*snc*t33619-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-intermediate)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 392)
}

sp {chunk*elaborate*props*spread-result*onc*return*t33547-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-toxin3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*toxin3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 396)
    (link-stm-to-ltm <c1> 401)
}

sp {chunk*apply*props*spread-result*snc*t33493-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*toxin3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 411)
}

sp {chunk*apply*props*spread-result*snc*t33486-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*toxin3)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 413)
}

sp {chunk*apply*props*spread-result*snc*t33479-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*toxin3)
    (<c1> ^name _P28)
    (link-stm-to-ltm <c1> 417)
}

sp {chunk*elaborate*props*spread-result*onc*return*t33401-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-add-toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-add-toxin3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*add-toxin3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 419)
    (link-stm-to-ltm <c1> 424)
}

sp {chunk*apply*props*spread-result*snc*t33347-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-toxin3)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 433)
}

sp {chunk*apply*props*spread-result*snc*t33340-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-toxin3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 431)
}

sp {chunk*apply*props*spread-result*snc*t33333-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-toxin3)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 435)
}

sp {chunk*elaborate*props*spread-result*onc*return*t33246-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-toxin3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-toxin3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-toxin3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 437)
    (link-stm-to-ltm <c1> 442)
}

sp {chunk*apply*props*spread-result*snc*t33192-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-toxin3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 449)
}

sp {chunk*apply*props*spread-result*snc*t33185-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-toxin3)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 451)
}

sp {chunk*elaborate*props*spread-result*onc*return*t33075-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-algae ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-algae)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 453)
    (link-stm-to-ltm <c1> 458)
}

sp {chunk*apply*props*spread-result*snc*t33021-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-algae)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 467)
}

sp {chunk*apply*props*spread-result*snc*t33014-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-algae)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 469)
}

sp {chunk*apply*props*spread-result*snc*t33007-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-algae)
    (<c1> ^name _P28)
    (link-stm-to-ltm <c1> 471)
}

sp {chunk*elaborate*props*spread-result*onc*return*t32922-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-add-lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-add-lime1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*add-lime1)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 473)
    (link-stm-to-ltm <c1> 478)
}

sp {chunk*apply*props*spread-result*snc*t32868-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-lime1)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 489)
}

sp {chunk*apply*props*spread-result*snc*t32861-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-lime1)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 487)
}

sp {chunk*apply*props*spread-result*snc*t32854-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*add-lime1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 485)
}

sp {chunk*elaborate*props*spread-result*onc*return*t32781-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-lime1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-lime1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-lime1)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 491)
    (link-stm-to-ltm <c1> 496)
}

sp {chunk*apply*props*spread-result*snc*t32727-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-lime1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 503)
}

sp {chunk*apply*props*spread-result*snc*t32720-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-lime1)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 505)
}

sp {chunk*elaborate*props*spread-result*onc*return*t32650-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-lesser-evil-read-solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-lesser-evil-read-solid ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*lesser-evil*read-solid)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 507)
    (link-stm-to-ltm <c1> 512)
}

sp {chunk*apply*props*spread-result*snc*t32596-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask lesser-evil)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-solid)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 519)
}

sp {chunk*apply*props*spread-result*snc*t32589-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^slot1 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*lesser-evil*read-solid)
    (<c1> ^name _P17)
    (link-stm-to-ltm <c1> 521)
}

sp {chunk*elaborate*props*spread-result*onc*return*t32493-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*step-2)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 215)
    (link-stm-to-ltm <c1> 220)
}

sp {chunk*apply*props*spread-result*snc*t32439-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 227)
}

sp {chunk*apply*props*spread-result*snc*t32432-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-c*step-2)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 229)
}

sp {chunk*elaborate*props*spread-result*onc*return*t32339-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 523)
    (link-stm-to-ltm <c1> 529)
}

sp {chunk*apply*props*spread-result*snc*t32285-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 536)
}

sp {chunk*apply*props*spread-result*snc*t32278-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 538)
}

sp {chunk*elaborate*props*spread-result*onc*return*t32186-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-add ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*add)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 540)
    (link-stm-to-ltm <c1> 545)
}

sp {chunk*apply*props*spread-result*snc*t32132-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*add)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 556)
}

sp {chunk*apply*props*spread-result*snc*t32125-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*add)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 554)
}

sp {chunk*apply*props*spread-result*snc*t32118-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*add)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 552)
}

sp {chunk*elaborate*props*spread-result*onc*return*t32031-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-read)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-read ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*read)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 558)
    (link-stm-to-ltm <c1> 563)
}

sp {chunk*apply*props*spread-result*snc*t31977-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 limemin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*read)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 576)
}

sp {chunk*apply*props*spread-result*snc*t31970-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot4 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*read)
    (<c1> ^name _P35)
    (link-stm-to-ltm <c1> 574)
}

sp {chunk*apply*props*spread-result*snc*t31963-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*read)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 570)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31888-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-mult ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*mult)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 578)
    (link-stm-to-ltm <c1> 583)
}

sp {chunk*apply*props*spread-result*snc*t31834-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 limemin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*mult)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 596)
}

sp {chunk*apply*props*spread-result*snc*t31827-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*mult)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 592)
}

sp {chunk*apply*props*spread-result*snc*t31820-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*mult)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 594)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31757-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-triple-lime-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-triple-lime-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*triple-lime*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 598)
    (link-stm-to-ltm <c1> 603)
}

sp {chunk*apply*props*spread-result*snc*t31703-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask triple-lime)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 610)
}

sp {chunk*apply*props*spread-result*snc*t31696-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^slot1 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*triple-lime*start)
    (<c1> ^name _P17)
    (link-stm-to-ltm <c1> 612)
}

sp {chunk*elaborate*props*spread-result*onc*return*t31620-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-c-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-c-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-c*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 231)
    (link-stm-to-ltm <c1> 236)
}

sp {chunk*apply*props*spread-result*snc*t31566-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^G <g1> ^topstate <t1>)
    (<g1> -^Gtop <g2>)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-c*start)
    (<c1> ^name |_P2|)
    (link-stm-to-ltm <c1> 245)
}

sp {chunk*apply*props*spread-result*snc*t31559-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1> ^topstate <t1>)
    (<g1> ^Gtask procedure-c)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-c)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-c*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 243)
}

sp {chunk*elaborate*props*spread-result*onc*return*t20654-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 614)
    (link-stm-to-ltm <c1> 620)
}

sp {chunk*apply*props*spread-result*snc*t20600-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 627)
}

sp {chunk*apply*props*spread-result*snc*t20593-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*finish)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 629)
}

sp {chunk*elaborate*props*spread-result*onc*return*t20507-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-plus-index2-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-plus-index2-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-plus-index2*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 727)
    (link-stm-to-ltm <c1> 733)
}

sp {chunk*apply*props*spread-result*snc*t20453-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 742)
}

sp {chunk*apply*props*spread-result*snc*t20446-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 740)
}

sp {chunk*elaborate*props*spread-result*onc*return*t20361-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-plus-index2-add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-plus-index2-add ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-plus-index2*add)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 744)
    (link-stm-to-ltm <c1> 749)
}

sp {chunk*apply*props*spread-result*snc*t20307-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*add)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 758)
}

sp {chunk*apply*props*spread-result*snc*t20300-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*add)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 756)
}

sp {chunk*elaborate*props*spread-result*onc*return*t20245-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-plus-index2-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-plus-index2-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-plus-index2*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 760)
    (link-stm-to-ltm <c1> 765)
}

sp {chunk*apply*props*spread-result*snc*t20191-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*start)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 775)
}

sp {chunk*apply*props*spread-result*snc*t20184-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-plus-index2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-plus-index2*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 773)
}

sp {chunk*elaborate*props*spread-result*onc*return*t20097-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-6)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-6 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-6)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 631)
    (link-stm-to-ltm <c1> 636)
}

sp {chunk*apply*props*spread-result*snc*t20043-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-6)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 645)
}

sp {chunk*apply*props*spread-result*snc*t20036-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-6)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 643)
}

sp {chunk*elaborate*props*spread-result*onc*return*t19957-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-mult-index1-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-mult-index1-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-mult-index1*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 777)
    (link-stm-to-ltm <c1> 783)
}

sp {chunk*apply*props*spread-result*snc*t19903-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 792)
}

sp {chunk*apply*props*spread-result*snc*t19896-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 790)
}

sp {chunk*elaborate*props*spread-result*onc*return*t19795-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-mult-index1-mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-mult-index1-mult ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-mult-index1*mult)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 794)
    (link-stm-to-ltm <c1> 799)
}

sp {chunk*apply*props*spread-result*snc*t19741-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*mult)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 811)
}

sp {chunk*apply*props*spread-result*snc*t19734-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 particulate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*mult)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 813)
}

sp {chunk*elaborate*props*spread-result*onc*return*t19679-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-mult-index1-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-mult-index1-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-mult-index1*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 815)
    (link-stm-to-ltm <c1> 820)
}

sp {chunk*apply*props*spread-result*snc*t19625-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*start)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 829)
}

sp {chunk*apply*props*spread-result*snc*t19618-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-mult-index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-mult-index1*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 827)
}

sp {chunk*elaborate*props*spread-result*onc*return*t19531-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-5)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-5 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-5)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 647)
    (link-stm-to-ltm <c1> 652)
}

sp {chunk*apply*props*spread-result*snc*t19477-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-5)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 659)
}

sp {chunk*apply*props*spread-result*snc*t19470-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-5)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 661)
}

sp {chunk*elaborate*props*spread-result*onc*return*t19384-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mineral-div-marine-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mineral-div-marine-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mineral-div-marine*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 831)
    (link-stm-to-ltm <c1> 837)
}

sp {chunk*apply*props*spread-result*snc*t19330-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 846)
}

sp {chunk*apply*props*spread-result*snc*t19323-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 844)
}

sp {chunk*elaborate*props*spread-result*onc*return*t19238-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mineral-div-marine-divide)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mineral-div-marine-divide ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mineral-div-marine*divide)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 848)
    (link-stm-to-ltm <c1> 853)
}

sp {chunk*apply*props*spread-result*snc*t19184-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*divide)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 860)
}

sp {chunk*apply*props*spread-result*snc*t19177-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*divide)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 862)
}

sp {chunk*elaborate*props*spread-result*onc*return*t19104-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mineral-div-marine-skip)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mineral-div-marine-skip ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mineral-div-marine*skip)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 864)
    (link-stm-to-ltm <c1> 869)
}

sp {chunk*apply*props*spread-result*snc*t19050-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*skip)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 883)
}

sp {chunk*apply*props*spread-result*snc*t19043-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 particulate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*skip)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 885)
}

sp {chunk*elaborate*props*spread-result*onc*return*t18981-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mineral-div-marine-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mineral-div-marine-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mineral-div-marine*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 887)
    (link-stm-to-ltm <c1> 892)
}

sp {chunk*apply*props*spread-result*snc*t18927-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mineral-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 899)
}

sp {chunk*apply*props*spread-result*snc*t18920-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mineral-div-marine*start)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 901)
}

sp {chunk*elaborate*props*spread-result*onc*return*t18826-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-4 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-4)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 663)
    (link-stm-to-ltm <c1> 668)
}

sp {chunk*apply*props*spread-result*snc*t18772-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-4)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 677)
}

sp {chunk*apply*props*spread-result*snc*t18765-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-4)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 675)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17889-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 679)
    (link-stm-to-ltm <c1> 684)
}

sp {chunk*apply*props*spread-result*snc*t17835-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-3)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 693)
}

sp {chunk*apply*props*spread-result*snc*t17828-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 691)
}

sp {chunk*elaborate*props*spread-result*onc*return*t17040-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*step-2)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 695)
    (link-stm-to-ltm <c1> 700)
}

sp {chunk*apply*props*spread-result*snc*t16986-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-2)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 709)
}

sp {chunk*apply*props*spread-result*snc*t16979-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-b*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 707)
}

sp {chunk*elaborate*props*spread-result*onc*return*t16239-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-b-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-b-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-b*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 711)
    (link-stm-to-ltm <c1> 716)
}

sp {chunk*apply*props*spread-result*snc*t16185-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1> ^topstate <t1>)
    (<g1> ^Gtask procedure-b)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-b*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 723)
}

sp {chunk*apply*props*spread-result*snc*t16178-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^G <g1> ^topstate <t1>)
    (<g1> -^Gtop <g2>)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-b)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-b*start)
    (<c1> ^name |_P2|)
    (link-stm-to-ltm <c1> 725)
}

sp {chunk*elaborate*props*spread-result*onc*return*t4636-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-7)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-7 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-7)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1400)
    (link-stm-to-ltm <c1> 1406)
}

sp {chunk*apply*props*spread-result*snc*t4582-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-7)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 1416)
}

sp {chunk*apply*props*spread-result*snc*t4575-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-7)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1414)
}

sp {chunk*elaborate*props*spread-result*onc*return*t4496-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index2-min-mineral-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index2-min-mineral-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index2-min-mineral*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 903)
    (link-stm-to-ltm <c1> 909)
}

sp {chunk*apply*props*spread-result*snc*t4442-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 916)
}

sp {chunk*apply*props*spread-result*snc*t4435-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 subtract)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 918)
}

sp {chunk*elaborate*props*spread-result*onc*return*t4350-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index2-min-mineral-subtract)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index2-min-mineral-subtract ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index2-min-mineral*subtract)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 920)
    (link-stm-to-ltm <c1> 925)
}

sp {chunk*apply*props*spread-result*snc*t4296-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*subtract)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 935)
}

sp {chunk*apply*props*spread-result*snc*t4289-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*subtract)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 937)
}

sp {chunk*elaborate*props*spread-result*onc*return*t4234-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index2-min-mineral-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index2-min-mineral-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index2-min-mineral*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 939)
    (link-stm-to-ltm <c1> 944)
}

sp {chunk*apply*props*spread-result*snc*t4180-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index2-min-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 951)
}

sp {chunk*apply*props*spread-result*snc*t4173-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index2-min-mineral*start)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 953)
}

sp {chunk*elaborate*props*spread-result*onc*return*t4079-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-6)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-6 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-6)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1418)
    (link-stm-to-ltm <c1> 1423)
}

sp {chunk*apply*props*spread-result*snc*t4025-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-6)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1430)
}

sp {chunk*apply*props*spread-result*snc*t4018-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-6)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 1432)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3932-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-div-marine-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-div-marine-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-div-marine*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 955)
    (link-stm-to-ltm <c1> 961)
}

sp {chunk*apply*props*spread-result*snc*t3878-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 968)
}

sp {chunk*apply*props*spread-result*snc*t3871-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 970)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3793-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-div-marine-divide)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-div-marine-divide ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-div-marine*divide)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 972)
    (link-stm-to-ltm <c1> 977)
}

sp {chunk*apply*props*spread-result*snc*t3739-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 index1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*divide)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 986)
}

sp {chunk*apply*props*spread-result*snc*t3732-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*divide)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 984)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3670-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-div-marine-next)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-div-marine-next ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-div-marine*next)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 988)
    (link-stm-to-ltm <c1> 993)
}

sp {chunk*apply*props*spread-result*snc*t3616-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*next)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1005)
}

sp {chunk*apply*props*spread-result*snc*t3609-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*next)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1003)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3547-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-index1-div-marine-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-index1-div-marine-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*index1-div-marine*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1007)
    (link-stm-to-ltm <c1> 1012)
}

sp {chunk*apply*props*spread-result*snc*t3493-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask index1-div-marine)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1019)
}

sp {chunk*apply*props*spread-result*snc*t3486-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*index1-div-marine*start)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 1021)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3399-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-5)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-5 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-5)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1434)
    (link-stm-to-ltm <c1> 1439)
}

sp {chunk*apply*props*spread-result*snc*t3345-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-5)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1446)
}

sp {chunk*apply*props*spread-result*snc*t3338-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-5)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 1448)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3259-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1023)
    (link-stm-to-ltm <c1> 1029)
}

sp {chunk*apply*props*spread-result*snc*t3205-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1036)
}

sp {chunk*apply*props*spread-result*snc*t3198-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1038)
}

sp {chunk*elaborate*props*spread-result*onc*return*t3109-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-divide)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-divide ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*divide)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1040)
    (link-stm-to-ltm <c1> 1045)
}

sp {chunk*apply*props*spread-result*snc*t3055-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*divide)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1056)
}

sp {chunk*apply*props*spread-result*snc*t3048-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*divide)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1058)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2956-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-add ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*add)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1060)
    (link-stm-to-ltm <c1> 1065)
}

sp {chunk*apply*props*spread-result*snc*t2902-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 toxinmin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*add)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1076)
}

sp {chunk*apply*props*spread-result*snc*t2895-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*add)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 1074)
}

sp {chunk*apply*props*spread-result*snc*t2888-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*add)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1072)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2815-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-toxinmin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-toxinmin ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*toxinmin)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1078)
    (link-stm-to-ltm <c1> 1083)
}

sp {chunk*apply*props*spread-result*snc*t2761-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*toxinmin)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1090)
}

sp {chunk*apply*props*spread-result*snc*t2754-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 toxinmax)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*toxinmin)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1092)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2691-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-mean-toxin-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-mean-toxin-start ^status success ^instruction <i1>
           ^condition <c1>)
    (<i1> ^name apply*elio*mean-toxin*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1094)
    (link-stm-to-ltm <c1> 1099)
}

sp {chunk*apply*props*spread-result*snc*t2637-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^slot1 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*start)
    (<c1> ^name _P17)
    (link-stm-to-ltm <c1> 1108)
}

sp {chunk*apply*props*spread-result*snc*t2630-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask mean-toxin)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*mean-toxin*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1106)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2527-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-4 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-4)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1450)
    (link-stm-to-ltm <c1> 1455)
}

sp {chunk*apply*props*spread-result*snc*t2473-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-4)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1462)
}

sp {chunk*apply*props*spread-result*snc*t2466-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-4)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 1464)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2374-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-plus-mineral-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-plus-mineral-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-plus-mineral*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1110)
    (link-stm-to-ltm <c1> 1116)
}

sp {chunk*apply*props*spread-result*snc*t2320-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1132)
}

sp {chunk*apply*props*spread-result*snc*t2313-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1130)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2221-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-plus-mineral-add)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-plus-mineral-add ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-plus-mineral*add)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1134)
    (link-stm-to-ltm <c1> 1139)
}

sp {chunk*apply*props*spread-result*snc*t2167-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*add)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1152)
}

sp {chunk*apply*props*spread-result*snc*t2160-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 particulate)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*add)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1154)
}

sp {chunk*elaborate*props*spread-result*onc*return*t2098-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-part-plus-mineral-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-part-plus-mineral-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*part-plus-mineral*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1156)
    (link-stm-to-ltm <c1> 1161)
}

sp {chunk*apply*props*spread-result*snc*t2044-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask part-plus-mineral)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1170)
}

sp {chunk*apply*props*spread-result*snc*t2037-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*part-plus-mineral*start)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 1172)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1950-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1466)
    (link-stm-to-ltm <c1> 1471)
}

sp {chunk*apply*props*spread-result*snc*t1896-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1478)
}

sp {chunk*apply*props*spread-result*snc*t1889-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-3)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 1480)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1803-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1174)
    (link-stm-to-ltm <c1> 1180)
}

sp {chunk*apply*props*spread-result*snc*t1749-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1187)
}

sp {chunk*apply*props*spread-result*snc*t1742-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 greater-of)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1189)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1664-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-greater)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-greater ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*greater)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1191)
    (link-stm-to-ltm <c1> 1196)
}

sp {chunk*apply*props*spread-result*snc*t1610-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 div)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*greater)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1206)
}

sp {chunk*apply*props*spread-result*snc*t1603-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*greater)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1204)
}

sp {chunk*apply*props*spread-result*snc*t1596-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*greater)
    (<c1> ^name _P28)
    (link-stm-to-ltm <c1> 1208)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1507-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-div-3)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-div-3 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*div-3)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1210)
    (link-stm-to-ltm <c1> 1215)
}

sp {chunk*apply*props*spread-result*snc*t1453-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-3)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1226)
}

sp {chunk*apply*props*spread-result*snc*t1446-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-3)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 1224)
}

sp {chunk*apply*props*spread-result*snc*t1439-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-3)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1222)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1352-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-read-solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-read-solid ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*read-solid)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1228)
    (link-stm-to-ltm <c1> 1233)
}

sp {chunk*apply*props*spread-result*snc*t1298-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot4 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*read-solid)
    (<c1> ^name _P35)
    (link-stm-to-ltm <c1> 1242)
}

sp {chunk*apply*props*spread-result*snc*t1291-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*read-solid)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1240)
}

sp {chunk*apply*props*spread-result*snc*t1284-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*read-solid)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1245)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1209-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-div-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-div-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*div-2)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1247)
    (link-stm-to-ltm <c1> 1252)
}

sp {chunk*apply*props*spread-result*snc*t1155-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-2)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 1263)
}

sp {chunk*apply*props*spread-result*snc*t1148-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-2)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1265)
}

sp {chunk*apply*props*spread-result*snc*t1141-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*div-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1261)
}

sp {chunk*elaborate*props*spread-result*onc*return*t1071-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-greater-algae-start)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-greater-algae-start ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*greater-algae*start)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1267)
    (link-stm-to-ltm <c1> 1272)
}

sp {chunk*apply*props*spread-result*snc*t1017-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^slot1 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*start)
    (<c1> ^name _P17)
    (link-stm-to-ltm <c1> 1281)
}

sp {chunk*apply*props*spread-result*snc*t1010-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask greater-algae)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*greater-algae*start)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1279)
}

sp {chunk*elaborate*props*spread-result*onc*return*t914-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-2)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1482)
    (link-stm-to-ltm <c1> 1487)
}

sp {chunk*apply*props*spread-result*snc*t860-1
    :chunk
    (state <s1> ^WM <w1> -^props-agnostic-add <p1>)
    (<w1> ^slot1 solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-2)
    (<c1> ^name _P10)
    (link-stm-to-ltm <c1> 1505)
}

sp {chunk*apply*props*spread-result*snc*t853-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*procedure-a*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1503)
}

sp {chunk*elaborate*props*spread-result*onc*return*t767-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-finish)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-finish ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*finish)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1283)
    (link-stm-to-ltm <c1> 1289)
}

sp {chunk*apply*props*spread-result*snc*t713-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*finish)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1301)
}

sp {chunk*apply*props*spread-result*snc*t706-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*finish)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1303)
}

sp {chunk*elaborate*props*spread-result*onc*return*t628-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-mult)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-mult ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*mult)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1305)
    (link-stm-to-ltm <c1> 1310)
}

sp {chunk*apply*props*spread-result*snc*t574-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*mult)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1323)
}

sp {chunk*apply*props*spread-result*snc*t567-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 solid)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*mult)
    (<c1> ^name _P28)
    (link-stm-to-ltm <c1> 1328)
}

sp {chunk*apply*props*spread-result*snc*t560-1
    :chunk
    (state <s1> ^RT <r1> -^props-agnostic-add <p1>)
    (<r1> ^slot1 subtract)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*mult)
    (<c1> ^name _P27)
    (link-stm-to-ltm <c1> 1325)
}

sp {chunk*elaborate*props*spread-result*onc*return*t464-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-diff ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*diff)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1331)
    (link-stm-to-ltm <c1> 1336)
}

sp {chunk*apply*props*spread-result*snc*t410-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^smem <s2>)
    (<s2> -^rt-result <r1>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*diff)
    (<c1> ^name _P21)
    (link-stm-to-ltm <c1> 1357)
}

sp {chunk*apply*props*spread-result*snc*t403-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*diff)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1355)
}

sp {chunk*apply*props*spread-result*snc*t396-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 lime2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*diff)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1360)
}

sp {chunk*elaborate*props*spread-result*onc*return*t316-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-step-2)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-step-2 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*step-2)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1362)
    (link-stm-to-ltm <c1> 1367)
}

sp {chunk*apply*props*spread-result*snc*t262-1
    :chunk
    (state <s1> ^V <v1> -^props-agnostic-add <p1>)
    (<v1> ^slot1 lime4)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*step-2)
    (<c1> ^name _P19)
    (link-stm-to-ltm <c1> 1378)
}

sp {chunk*apply*props*spread-result*snc*t255-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*step-2)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1376)
}

sp {chunk*elaborate*props*spread-result*onc*return*t192-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-solid-lime-diff-step-1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-solid-lime-diff-step-1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*solid-lime-diff*step-1)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1381)
    (link-stm-to-ltm <c1> 1386)
}

sp {chunk*apply*props*spread-result*snc*t138-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1>)
    (<g1> ^Gtask solid-lime-diff)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*step-1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1395)
}

sp {chunk*apply*props*spread-result*snc*t131-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^V <v1>)
    (<v1> -^slot1 <s2>)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i1> ^condition <c1>)
    (<i1> ^name propose*elio*solid-lime-diff*step-1)
    (<c1> ^name _P17)
    (link-stm-to-ltm <c1> 1397)
}

sp {chunk*elaborate*props*spread-result*onc*return*t51-1
    :chunk
    (state <s1> ^operator <o1> -^props-agnostic-add <p1>)
    (<o1> ^name elio-procedure-a-step-1)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^o-supported elio-procedure-a-step-1 ^status success
           ^instruction <i1> ^condition <c1>)
    (<i1> ^name apply*elio*procedure-a*step-1)
    (<c1> ^name |_P5|)
    (link-stm-to-ltm <i1> 1508)
    (link-stm-to-ltm <c1> 1513)
}

sp {chunk*apply*props*spread-result*snc*t21-1
    :chunk
    (state <s1> ^type state -^props-agnostic-add <p1> ^G <g1> ^topstate <t1>)
    (<g1> -^Gtop <g2>)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-a*step-1)
    (<c1> ^name |_P2|)
    (link-stm-to-ltm <c1> 1529)
}

sp {chunk*apply*props*spread-result*snc*t14-1
    :chunk
    (state <s1> ^G <g1> -^props-agnostic-add <p1> ^topstate <t1>)
    (<g1> ^Gtask procedure-a)
    (<t1> ^io <i1>)
    (<i1> ^input-link <i2>)
    (<i2> ^task-sequence-name procedure-a)
    -->
    (<s1> ^prop-condition-xp <p2>)
    (<p2> ^status success ^instruction <i3> ^condition <c1>)
    (<i3> ^name propose*elio*procedure-a*step-1)
    (<c1> ^name |_P1|)
    (link-stm-to-ltm <c1> 1526)
}


