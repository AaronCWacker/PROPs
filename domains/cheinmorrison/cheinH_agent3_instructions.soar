#####
# THIS FILE TRANSLATES THE PROPS INSTRUCTIONS
# FROM 'cheinH_agent3.prop' INTO SMEM INSTRUCTIONS USABLE
# BY A PROPS SOAR AGENT.
#####

# BEGIN INSTRUCTIONS

smem --add {
(<delta_PA10_PA11> ^prop-apply true
	^op-name |_PA10_PA11|
	^item-name |_PA10|
	^item-name |_PA11|)
(<cbset_PA10_PA11> ^props-cbset-name |_PA10_PA11|
	 ^delta <delta_PA10>
	 ^delta <delta_PA11>)
(<delta_PA11_PA15> ^prop-apply true
	^op-name |_PA11_PA15|
	^item-name |_PA11|
	^item-name |_PA15|)
(<cbset_PA11_PA15> ^props-cbset-name |_PA11_PA15|
	 ^delta <delta_PA11>
	 ^delta <delta_PA15>)
(<delta_PA11_PA42> ^prop-apply true
	^op-name |_PA11_PA42|
	^item-name |_PA11|
	^item-name |_PA42|)
(<cbset_PA11_PA42> ^props-cbset-name |_PA11_PA42|
	 ^delta <delta_PA11>
	 ^delta <delta_PA42>)
(<delta_PA14_PA15> ^prop-apply true
	^op-name |_PA14_PA15|
	^item-name |_PA14|
	^item-name |_PA15|)
(<cbset_PA14_PA15> ^props-cbset-name |_PA14_PA15|
	 ^delta <delta_PA14>
	 ^delta <delta_PA15>)
(<delta_PA15_PA23> ^prop-apply true
	^op-name |_PA15_PA23|
	^item-name |_PA15|
	^item-name |_PA23|)
(<cbset_PA15_PA23> ^props-cbset-name |_PA15_PA23|
	 ^delta <delta_PA15>
	 ^delta <delta_PA23>)
(<delta_PA17_PA18> ^prop-apply true
	^op-name |_PA17_PA18|
	^item-name |_PA17|
	^item-name |_PA18|)
(<cbset_PA17_PA18> ^props-cbset-name |_PA17_PA18|
	 ^delta <delta_PA17>
	 ^delta <delta_PA18>)
(<delta_PA20_PA21> ^prop-apply true
	^op-name |_PA20_PA21|
	^item-name |_PA20|
	^item-name |_PA21|)
(<cbset_PA20_PA21> ^props-cbset-name |_PA20_PA21|
	 ^delta <delta_PA20>
	 ^delta <delta_PA21>)
(<delta_PA23_PA24> ^prop-apply true
	^op-name |_PA23_PA24|
	^item-name |_PA23|
	^item-name |_PA24|)
(<cbset_PA23_PA24> ^props-cbset-name |_PA23_PA24|
	 ^delta <delta_PA23>
	 ^delta <delta_PA24>)
(<delta_PA25_PA26> ^prop-apply true
	^op-name |_PA25_PA26|
	^item-name |_PA25|
	^item-name |_PA26|)
(<cbset_PA25_PA26> ^props-cbset-name |_PA25_PA26|
	 ^delta <delta_PA25>
	 ^delta <delta_PA26>)
(<delta_PA35_PA36> ^prop-apply true
	^op-name |_PA35_PA36|
	^item-name |_PA35|
	^item-name |_PA36|)
(<cbset_PA35_PA36> ^props-cbset-name |_PA35_PA36|
	 ^delta <delta_PA35>
	 ^delta <delta_PA36>)
(<delta_PA8_PA9> ^prop-apply true
	^op-name |_PA8_PA9|
	^item-name |_PA8|
	^item-name |_PA9|)
(<cbset_PA8_PA9> ^props-cbset-name |_PA8_PA9|
	 ^delta <delta_PA8>
	 ^delta <delta_PA9>)
(<delta_PA10_PA11_PA8_PA9> ^prop-apply true
	^op-name |_PA10_PA11_PA8_PA9|
	^item-name |_PA10|
	^item-name |_PA11|
	^item-name |_PA8|
	^item-name |_PA9|)
(<cbset_PA10_PA11_PA8_PA9> ^props-cbset-name |_PA10_PA11_PA8_PA9|
	 ^delta <delta_PA10_PA11>
	 ^delta <delta_PA8_PA9>)
(<delta_PA11_PA15_PA37> ^prop-apply true
	^op-name |_PA11_PA15_PA37|
	^item-name |_PA11|
	^item-name |_PA15|
	^item-name |_PA37|)
(<cbset_PA11_PA15_PA37> ^props-cbset-name |_PA11_PA15_PA37|
	 ^delta <delta_PA11_PA15>
	 ^delta <delta_PA37>)
(<delta_PA11_PA15_PA41> ^prop-apply true
	^op-name |_PA11_PA15_PA41|
	^item-name |_PA11|
	^item-name |_PA15|
	^item-name |_PA41|)
(<cbset_PA11_PA15_PA41> ^props-cbset-name |_PA11_PA15_PA41|
	 ^delta <delta_PA11_PA15>
	 ^delta <delta_PA41>)
(<delta_PA15_PA17_PA18> ^prop-apply true
	^op-name |_PA15_PA17_PA18|
	^item-name |_PA15|
	^item-name |_PA17|
	^item-name |_PA18|)
(<cbset_PA15_PA17_PA18> ^props-cbset-name |_PA15_PA17_PA18|
	 ^delta <delta_PA15>
	 ^delta <delta_PA17_PA18>)
(<delta_PA15_PA23_PA35_PA36> ^prop-apply true
	^op-name |_PA15_PA23_PA35_PA36|
	^item-name |_PA15|
	^item-name |_PA23|
	^item-name |_PA35|
	^item-name |_PA36|)
(<cbset_PA15_PA23_PA35_PA36> ^props-cbset-name |_PA15_PA23_PA35_PA36|
	 ^delta <delta_PA15_PA23>
	 ^delta <delta_PA35_PA36>)
(<delta_PA20_PA21_PA33> ^prop-apply true
	^op-name |_PA20_PA21_PA33|
	^item-name |_PA20|
	^item-name |_PA21|
	^item-name |_PA33|)
(<cbset_PA20_PA21_PA33> ^props-cbset-name |_PA20_PA21_PA33|
	 ^delta <delta_PA20_PA21>
	 ^delta <delta_PA33>)
(<delta_PA25_PA26_PA27> ^prop-apply true
	^op-name |_PA25_PA26_PA27|
	^item-name |_PA25|
	^item-name |_PA26|
	^item-name |_PA27|)
(<cbset_PA25_PA26_PA27> ^props-cbset-name |_PA25_PA26_PA27|
	 ^delta <delta_PA25_PA26>
	 ^delta <delta_PA27>)
(<delta_PA25_PA26_PA30> ^prop-apply true
	^op-name |_PA25_PA26_PA30|
	^item-name |_PA25|
	^item-name |_PA26|
	^item-name |_PA30|)
(<cbset_PA25_PA26_PA30> ^props-cbset-name |_PA25_PA26_PA30|
	 ^delta <delta_PA25_PA26>
	 ^delta <delta_PA30>)

(<Q44>  ^1 cheinH-stroop-answer-retrieve-color ^2 s-mapping ^3 query)
(<pre-cbset-rule44> ^props-epset-name cheinH-stroop-answer-retrieve-color
	^const <Q44>
	^delta <delta_PA25_PA26_PA27>)

(<Q43>  ^1 cheinH-stroop-answer-retrieve-color)
(<epset-task-stroop-answer> ^delta <delta-rule43>)
(<delta-rule43> ^op-name cheinH-stroop-answer-retrieve-color
	^const <Q43>)
(<delta-rule43> ^prop <prop-C44>)
(<prop-C44> ^name |_PC44|
	^prop-type existence
	^attr1 slot2
	^address1 V)


(<epset-task-stroop-answer> ^props-epset-name stroop-answer)
(<Q42>  ^1 idle ^2 yes)
(<epset-task-stroop-answer> ^delta <delta-rule42>)
(<delta-rule42> ^op-name idle
	^const <Q42>)
(<delta-rule42> ^prop <prop-C43>)
(<prop-C43> ^name |_PC43|
	^prop-type inequality
	^attr1 slot1
	^attr2 2
	^address1 V
	^address2 props$const)


(<epset-task-stroop-recog> ^props-epset-name stroop-recog)
(<Q41>  ^1 stroop-answer ^2 stroop)
(<epset-task-stroop-recog> ^delta <delta-rule41>)
(<delta-rule41> ^op-name stroop-answer
	^const <Q41>)
(<delta-rule41> ^prop <prop-C28>)
(<delta-rule41> ^prop <prop-C31>)

(<Q40>  ^1 cheinH-stroop-finish ^2 finish)
(<delta_PA42> ^prop-apply true
	^item-name |_PA42|
	^op-name |_PA42|)
(<cbset_PA42> ^props-cbset-name |_PA42|
	^delta <delta-null_PA42>)
(<delta-null_PA42> ^prop-apply true
	^prop <prop-A42>)
(<prop-A42> ^name |_PA42|
	^prop-type add
	^attr1 Gtask
	^attr2 2
	^address1 G
	^address2 props$const)
(<pre-cbset-rule40> ^props-epset-name cheinH-stroop-finish
	^const <Q40>
	^delta <delta_PA11_PA42>)

(<Q39>  ^1 cheinH-stroop-finish ^2 last)
(<epset-task-stroop> ^delta <delta-rule39>)
(<delta-rule39> ^op-name cheinH-stroop-finish
	^const <Q39>)
(<delta-rule39> ^prop <prop-C3>)

(<Q38>  ^1 cheinH-stroop-say-correct ^2 say)
(<delta_PA41> ^prop-apply true
	^item-name |_PA41|
	^op-name |_PA41|)
(<cbset_PA41> ^props-cbset-name |_PA41|
	^delta <delta-null_PA41>)
(<delta-null_PA41> ^prop-apply true
	^prop <prop-A41>)
(<prop-A41> ^name |_PA41|
	^prop-type add
	^attr1 slot2
	^attr2 slot3
	^address1 AC
	^address2 RT)
(<pre-cbset-rule38> ^props-epset-name cheinH-stroop-say-correct
	^const <Q38>
	^delta <delta_PA11_PA15_PA41>)

(<Q37>  ^1 cheinH-stroop-say-correct)
(<epset-task-stroop> ^delta <delta-rule37>)
(<delta-rule37> ^op-name cheinH-stroop-say-correct
	^const <Q37>)
(<delta-rule37> ^prop <prop-C40>)
(<prop-C40> ^name |_PC40|
	^prop-type equality
	^attr1 slot3
	^attr2 slot2
	^address1 RT
	^address2 V)


(<Q36>  ^1 idle ^2 last)
(<epset-task-stroop> ^delta <delta-rule36>)
(<delta-rule36> ^op-name idle
	^const <Q36>)
(<delta-rule36> ^prop <prop-C38>)
(<delta-rule36> ^prop <prop-C39>)

(<epset-task-stroop> ^props-epset-name stroop)
(<Q35>  ^1 prepare ^2 last)
(<epset-task-stroop> ^delta <delta-rule35>)
(<delta-rule35> ^op-name prepare
	^const <Q35>)
(<delta-rule35> ^prop <prop-C38>)
(<prop-C38> ^name |_PC38|
	^prop-type inexistence
	^attr1 slot1
	^attr2 2
	^address1 V
	^address2 props$const)

(<delta-rule35> ^prop <prop-C39>)
(<prop-C39> ^name |_PC39|
	^prop-type inexistence
	^attr1 slot3
	^attr2 slot2
	^address1 RT
	^address2 V)


(<Q34>  ^1 cheinH-VCWM-report-finish ^2 enter ^3 finish)
(<delta_PA37> ^prop-apply true
	^item-name |_PA37|
	^op-name |_PA37|)
(<cbset_PA37> ^props-cbset-name |_PA37|
	^delta <delta-null_PA37>)
(<delta-null_PA37> ^prop-apply true
	^prop <prop-A37>)
(<prop-A37> ^name |_PA37|
	^prop-type add
	^attr1 Gtask
	^attr2 3
	^address1 G
	^address2 props$const)
(<pre-cbset-rule34> ^props-epset-name cheinH-VCWM-report-finish
	^const <Q34>
	^delta <delta_PA11_PA15_PA37>)

(<Q33>  ^1 cheinH-VCWM-report-finish ^2 error ^3 report)
(<epset-task-VCWM-report> ^delta <delta-rule33>)
(<delta-rule33> ^op-name cheinH-VCWM-report-finish
	^const <Q33>)
(<delta-rule33> ^prop <prop-C12>)
(<delta-rule33> ^prop <prop-C34>)

(<Q32>  ^1 cheinH-VCWM-report-report ^2 type ^3 wm-query)
(<delta_PA35> ^prop-apply true
	^item-name |_PA35|
	^op-name |_PA35|)
(<cbset_PA35> ^props-cbset-name |_PA35|
	^delta <delta-null_PA35>)
(<delta-null_PA35> ^prop-apply true
	^prop <prop-A35>)
(<prop-A35> ^name |_PA35|
	^prop-type add
	^attr1 slot2
	^attr2 slot1
	^address1 AC
	^address2 RT)
(<delta_PA36> ^prop-apply true
	^item-name |_PA36|
	^op-name |_PA36|)
(<cbset_PA36> ^props-cbset-name |_PA36|
	^delta <delta-null_PA36>)
(<delta-null_PA36> ^prop-apply true
	^prop <prop-A36>)
(<prop-A36> ^name |_PA36|
	^prop-type add
	^attr1 q-type
	^attr2 3
	^address1 Q
	^address2 props$const)
(<pre-cbset-rule32> ^props-epset-name cheinH-VCWM-report-report
	^const <Q32>
	^delta <delta_PA15_PA23_PA35_PA36>)

(<Q31>  ^1 cheinH-VCWM-report-report ^2 error ^3 report)
(<epset-task-VCWM-report> ^delta <delta-rule31>)
(<delta-rule31> ^op-name cheinH-VCWM-report-report
	^const <Q31>)
(<delta-rule31> ^prop <prop-C22>)
(<delta-rule31> ^prop <prop-C34>)
(<prop-C34> ^name |_PC34|
	^prop-type equality
	^attr1 slot3
	^attr2 3
	^address1 WM
	^address2 props$const)


(<Q30>  ^1 cheinH-VCWM-report-start ^2 retrieve ^3 report)
(<delta_PA33> ^prop-apply true
	^item-name |_PA33|
	^op-name |_PA33|)
(<cbset_PA33> ^props-cbset-name |_PA33|
	^delta <delta-null_PA33>)
(<delta-null_PA33> ^prop-apply true
	^prop <prop-A33>)
(<prop-A33> ^name |_PA33|
	^prop-type add
	^attr1 slot3
	^attr2 3
	^address1 WM
	^address2 props$const)
(<pre-cbset-rule30> ^props-epset-name cheinH-VCWM-report-start
	^const <Q30>
	^delta <delta_PA20_PA21_PA33>)

(<epset-task-VCWM-report> ^props-epset-name VCWM-report)
(<Q29>  ^1 cheinH-VCWM-report-start ^2 report)
(<epset-task-VCWM-report> ^delta <delta-rule29>)
(<delta-rule29> ^op-name cheinH-VCWM-report-start
	^const <Q29>)
(<delta-rule29> ^prop <prop-C32>)
(<prop-C32> ^name |_PC32|
	^prop-type inexistence
	^attr1 slot3
	^attr2 2
	^address1 WM
	^address2 props$const)


(<Q28>  ^1 stroop-recog ^2 stroop)
(<epset-task-idle> ^delta <delta-rule28>)
(<delta-rule28> ^op-name stroop-recog
	^const <Q28>)
(<delta-rule28> ^prop <prop-C28>)
(<delta-rule28> ^prop <prop-C31>)
(<prop-C31> ^name |_PC31|
	^prop-type inequality
	^attr1 slot3
	^attr2 slot2
	^address1 V
	^address2 V)


(<Q27>  ^1 cheinH-idle-retrieve-text ^2 s-mapping ^3 query)
(<delta_PA30> ^prop-apply true
	^item-name |_PA30|
	^op-name |_PA30|)
(<cbset_PA30> ^props-cbset-name |_PA30|
	^delta <delta-null_PA30>)
(<delta-null_PA30> ^prop-apply true
	^prop <prop-A30>)
(<prop-A30> ^name |_PA30|
	^prop-type add
	^attr1 slot2
	^attr2 slot3
	^address1 Q
	^address2 V)
(<pre-cbset-rule27> ^props-epset-name cheinH-idle-retrieve-text
	^const <Q27>
	^delta <delta_PA25_PA26_PA30>)

(<Q26>  ^1 cheinH-idle-retrieve-text ^2 stroop)
(<epset-task-idle> ^delta <delta-rule26>)
(<delta-rule26> ^op-name cheinH-idle-retrieve-text
	^const <Q26>)
(<delta-rule26> ^prop <prop-C28>)
(<delta-rule26> ^prop <prop-C29>)
(<prop-C29> ^name |_PC29|
	^prop-type equality
	^attr1 slot3
	^attr2 slot2
	^address1 V
	^address2 V)


(<Q25>  ^1 cheinH-idle-wait ^2 wait)
(<pre-cbset-rule25> ^props-epset-name cheinH-idle-wait
	^const <Q25>
	^delta <delta_PA15>)

(<epset-task-idle> ^props-epset-name idle)
(<Q24>  ^1 cheinH-idle-wait ^2 pending)
(<epset-task-idle> ^delta <delta-rule24>)
(<delta-rule24> ^op-name cheinH-idle-wait
	^const <Q24>)
(<delta-rule24> ^prop <prop-C3>)

(<Q23>  ^1 stroop-answer ^2 stroop)
(<epset-task-prepare> ^delta <delta-rule23>)
(<delta-rule23> ^op-name stroop-answer
	^const <Q23>)
(<delta-rule23> ^prop <prop-C28>)

(<epset-task-prepare> ^props-epset-name prepare)
(<Q22>  ^1 VCWM-rehearse ^2 verbal-CWM)
(<epset-task-prepare> ^delta <delta-rule22>)
(<delta-rule22> ^op-name VCWM-rehearse
	^const <Q22>)
(<delta-rule22> ^prop <prop-C28>)
(<prop-C28> ^name |_PC28|
	^prop-type equality
	^attr1 task
	^attr2 2
	^address1 V
	^address2 props$const)


(<Q21>  ^1 cheinH-VCWM-lexdec-retrieve ^2 is-word ^3 query)
(<delta_PA25> ^prop-apply true
	^item-name |_PA25|
	^op-name |_PA25|)
(<cbset_PA25> ^props-cbset-name |_PA25|
	^delta <delta-null_PA25>)
(<delta-null_PA25> ^prop-apply true
	^prop <prop-A25>)
(<prop-A25> ^name |_PA25|
	^prop-type add
	^attr1 q-type
	^attr2 3
	^address1 Q
	^address2 props$const)
(<delta_PA26> ^prop-apply true
	^item-name |_PA26|
	^op-name |_PA26|)
(<cbset_PA26> ^props-cbset-name |_PA26|
	^delta <delta-null_PA26>)
(<delta-null_PA26> ^prop-apply true
	^prop <prop-A26>)
(<prop-A26> ^name |_PA26|
	^prop-type add
	^attr1 slot1
	^attr2 2
	^address1 Q
	^address2 props$const)
(<delta_PA27> ^prop-apply true
	^item-name |_PA27|
	^op-name |_PA27|)
(<cbset_PA27> ^props-cbset-name |_PA27|
	^delta <delta-null_PA27>)
(<delta-null_PA27> ^prop-apply true
	^prop <prop-A27>)
(<prop-A27> ^name |_PA27|
	^prop-type add
	^attr1 slot2
	^attr2 slot2
	^address1 Q
	^address2 V)
(<pre-cbset-rule21> ^props-epset-name cheinH-VCWM-lexdec-retrieve
	^const <Q21>
	^delta <delta_PA25_PA26_PA27>)

(<epset-task-VCWM-lexdec> ^props-epset-name VCWM-lexdec)
(<Q20>  ^1 cheinH-VCWM-lexdec-retrieve ^2 word)
(<epset-task-VCWM-lexdec> ^delta <delta-rule20>)
(<delta-rule20> ^op-name cheinH-VCWM-lexdec-retrieve
	^const <Q20>)
(<delta-rule20> ^prop <prop-C3>)

(<Q19>  ^1 cheinH-VCWM-rehearse-restart ^2 retrieve)
(<pre-cbset-rule19> ^props-epset-name cheinH-VCWM-rehearse-restart
	^const <Q19>
	^delta <delta_PA20_PA21>)

(<Q18>  ^1 cheinH-VCWM-rehearse-restart ^2 error)
(<epset-task-VCWM-rehearse> ^delta <delta-rule18>)
(<delta-rule18> ^op-name cheinH-VCWM-rehearse-restart
	^const <Q18>)
(<delta-rule18> ^prop <prop-C12>)

(<Q17>  ^1 cheinH-VCWM-rehearse-next ^2 wm-query)
(<delta_PA23> ^prop-apply true
	^item-name |_PA23|
	^op-name |_PA23|)
(<cbset_PA23> ^props-cbset-name |_PA23|
	^delta <delta-null_PA23>)
(<delta-null_PA23> ^prop-apply true
	^prop <prop-A23>)
(<prop-A23> ^name |_PA23|
	^prop-type add
	^attr1 root
	^attr2 RTid
	^address1 Q
	^address2 RT)
(<delta_PA24> ^prop-apply true
	^item-name |_PA24|
	^op-name |_PA24|)
(<cbset_PA24> ^props-cbset-name |_PA24|
	^delta <delta-null_PA24>)
(<delta-null_PA24> ^prop-apply true
	^prop <prop-A24>)
(<prop-A24> ^name |_PA24|
	^prop-type add
	^attr1 q-type
	^attr2 2
	^address1 Q
	^address2 props$const)
(<pre-cbset-rule17> ^props-epset-name cheinH-VCWM-rehearse-next
	^const <Q17>
	^delta <delta_PA23_PA24>)

(<Q16>  ^1 cheinH-VCWM-rehearse-next ^2 error)
(<epset-task-VCWM-rehearse> ^delta <delta-rule16>)
(<delta-rule16> ^op-name cheinH-VCWM-rehearse-next
	^const <Q16>)
(<delta-rule16> ^prop <prop-C22>)
(<prop-C22> ^name |_PC22|
	^prop-type inequality
	^attr1 rt-result
	^attr2 2
	^address1 smem
	^address2 props$const)


(<Q15>  ^1 cheinH-VCWM-rehearse-start ^2 retrieve)
(<delta_PA20> ^prop-apply true
	^item-name |_PA20|
	^op-name |_PA20|)
(<cbset_PA20> ^props-cbset-name |_PA20|
	^delta <delta-null_PA20>)
(<delta-null_PA20> ^prop-apply true
	^prop <prop-A20>)
(<prop-A20> ^name |_PA20|
	^prop-type add
	^attr1 q-type
	^attr2 2
	^address1 Q
	^address2 props$const)
(<delta_PA21> ^prop-apply true
	^item-name |_PA21|
	^op-name |_PA21|)
(<cbset_PA21> ^props-cbset-name |_PA21|
	^delta <delta-null_PA21>)
(<delta-null_PA21> ^prop-apply true
	^prop <prop-A21>)
(<prop-A21> ^name |_PA21|
	^prop-type add
	^attr1 retrieve
	^attr2 Gtop
	^address1 Q
	^address2 G)
(<pre-cbset-rule15> ^props-epset-name cheinH-VCWM-rehearse-start
	^const <Q15>
	^delta <delta_PA20_PA21>)

(<epset-task-VCWM-rehearse> ^props-epset-name VCWM-rehearse)
(<Q14>  ^1 cheinH-VCWM-rehearse-start)
(<epset-task-VCWM-rehearse> ^delta <delta-rule14>)
(<delta-rule14> ^op-name cheinH-VCWM-rehearse-start
	^const <Q14>)
(<delta-rule14> ^prop <prop-C19>)
(<prop-C19> ^name |_PC19|
	^prop-type negation
	^attr1 rt-result
	^address1 smem)


(<Q13>  ^1 VCWM-report ^2 report)
(<epset-task-verbal-CWM> ^delta <delta-rule13>)
(<delta-rule13> ^op-name VCWM-report
	^const <Q13>)
(<delta-rule13> ^prop <prop-C3>)

(<Q12>  ^1 prepare ^2 pending)
(<epset-task-verbal-CWM> ^delta <delta-rule12>)
(<delta-rule12> ^op-name prepare
	^const <Q12>)
(<delta-rule12> ^prop <prop-C3>)
(<delta-rule12> ^prop <prop-C16>)

(<Q11>  ^1 cheinH-verbal-CWM-store-dm ^2 wait)
(<delta_PA17> ^prop-apply true
	^item-name |_PA17|
	^op-name |_PA17|)
(<cbset_PA17> ^props-cbset-name |_PA17|
	^delta <delta-null_PA17>)
(<delta-null_PA17> ^prop-apply true
	^prop <prop-A17>)
(<prop-A17> ^name |_PA17|
	^prop-type add
	^attr1 slot1
	^attr2 slot2
	^address1 NW
	^address2 V)
(<delta_PA18> ^prop-apply true
	^item-name |_PA18|
	^op-name |_PA18|)
(<cbset_PA18> ^props-cbset-name |_PA18|
	^delta <delta-null_PA18>)
(<delta-null_PA18> ^prop-apply true
	^prop <prop-A18>)
(<prop-A18> ^name |_PA18|
	^prop-type add
	^attr1 WMprev
	^attr2 WM
	^address1 NW
	^address2 props$rootstate)
(<pre-cbset-rule11> ^props-epset-name cheinH-verbal-CWM-store-dm
	^const <Q11>
	^delta <delta_PA15_PA17_PA18>)

(<Q10>  ^1 cheinH-verbal-CWM-store-dm ^2 letter)
(<epset-task-verbal-CWM> ^delta <delta-rule10>)
(<delta-rule10> ^op-name cheinH-verbal-CWM-store-dm
	^const <Q10>)
(<delta-rule10> ^prop <prop-C3>)
(<delta-rule10> ^prop <prop-C16>)
(<prop-C16> ^name |_PC16|
	^prop-type existence
	^attr1 slot1
	^address1 WM)


(<Q9>  ^1 cheinH-verbal-CWM-store-wm ^2 wait)
(<delta_PA14> ^prop-apply true
	^item-name |_PA14|
	^op-name |_PA14|)
(<cbset_PA14> ^props-cbset-name |_PA14|
	^delta <delta-null_PA14>)
(<delta-null_PA14> ^prop-apply true
	^prop <prop-A14>)
(<prop-A14> ^name |_PA14|
	^prop-type add
	^attr1 slot1
	^attr2 slot2
	^address1 WM
	^address2 V)
(<delta_PA15> ^prop-apply true
	^item-name |_PA15|
	^op-name |_PA15|)
(<cbset_PA15> ^props-cbset-name |_PA15|
	^delta <delta-null_PA15>)
(<delta-null_PA15> ^prop-apply true
	^prop <prop-A15>)
(<prop-A15> ^name |_PA15|
	^prop-type add
	^attr1 slot1
	^attr2 2
	^address1 AC
	^address2 props$const)
(<pre-cbset-rule9> ^props-epset-name cheinH-verbal-CWM-store-wm
	^const <Q9>
	^delta <delta_PA14_PA15>)

(<Q8>  ^1 cheinH-verbal-CWM-store-wm ^2 letter)
(<epset-task-verbal-CWM> ^delta <delta-rule8>)
(<delta-rule8> ^op-name cheinH-verbal-CWM-store-wm
	^const <Q8>)
(<delta-rule8> ^prop <prop-C3>)
(<delta-rule8> ^prop <prop-C13>)
(<prop-C13> ^name |_PC13|
	^prop-type negation
	^attr1 slot1
	^address1 WM)


(<Q7>  ^1 cheinH-verbal-CWM-fail ^2 nil ^3 type ^4 N)
(<pre-cbset-rule7> ^props-epset-name cheinH-verbal-CWM-fail
	^const <Q7>
	^delta <delta_PA10_PA11_PA8_PA9>)

(<Q6>  ^1 cheinH-verbal-CWM-fail ^2 error)
(<epset-task-verbal-CWM> ^delta <delta-rule6>)
(<delta-rule6> ^op-name cheinH-verbal-CWM-fail
	^const <Q6>)
(<delta-rule6> ^prop <prop-C12>)
(<prop-C12> ^name |_PC12|
	^prop-type equality
	^attr1 rt-result
	^attr2 2
	^address1 smem
	^address2 props$const)


(<Q5>  ^1 cheinH-verbal-CWM-success ^2 nil ^3 type ^4 Y)
(<delta_PA8> ^prop-apply true
	^item-name |_PA8|
	^op-name |_PA8|)
(<cbset_PA8> ^props-cbset-name |_PA8|
	^delta <delta-null_PA8>)
(<delta-null_PA8> ^prop-apply true
	^prop <prop-A8>)
(<prop-A8> ^name |_PA8|
	^prop-type add
	^attr1 Gcontrol
	^attr2 2
	^address1 G
	^address2 props$const)
(<delta_PA9> ^prop-apply true
	^item-name |_PA9|
	^op-name |_PA9|)
(<cbset_PA9> ^props-cbset-name |_PA9|
	^delta <delta-null_PA9>)
(<delta-null_PA9> ^prop-apply true
	^prop <prop-A9>)
(<prop-A9> ^name |_PA9|
	^prop-type add
	^attr1 slot1
	^attr2 3
	^address1 AC
	^address2 props$const)
(<delta_PA10> ^prop-apply true
	^item-name |_PA10|
	^op-name |_PA10|)
(<cbset_PA10> ^props-cbset-name |_PA10|
	^delta <delta-null_PA10>)
(<delta-null_PA10> ^prop-apply true
	^prop <prop-A10>)
(<prop-A10> ^name |_PA10|
	^prop-type add
	^attr1 slot2
	^attr2 4
	^address1 AC
	^address2 props$const)
(<delta_PA11> ^prop-apply true
	^item-name |_PA11|
	^op-name |_PA11|)
(<cbset_PA11> ^props-cbset-name |_PA11|
	^delta <delta-null_PA11>)
(<delta-null_PA11> ^prop-apply true
	^prop <prop-A11>)
(<prop-A11> ^name |_PA11|
	^prop-type add
	^attr1 clear-rt
	^attr2 1
	^address1 flags
	^address2 props$const)
(<pre-cbset-rule5> ^props-epset-name cheinH-verbal-CWM-success
	^const <Q5>
	^delta <delta_PA10_PA11_PA8_PA9>)

(<Q4>  ^1 cheinH-verbal-CWM-success ^2 yes ^3 is-word)
(<epset-task-verbal-CWM> ^delta <delta-rule4>)
(<delta-rule4> ^op-name cheinH-verbal-CWM-success
	^const <Q4>)
(<delta-rule4> ^prop <prop-C6>)
(<prop-C6> ^name |_PC6|
	^prop-type equality
	^attr1 slot3
	^attr2 2
	^address1 RT
	^address2 props$const)

(<delta-rule4> ^prop <prop-C7>)
(<prop-C7> ^name |_PC7|
	^prop-type equality
	^attr1 slot1
	^attr2 3
	^address1 RT
	^address2 props$const)


(<Q3>  ^1 VCWM-lexdec ^2 word ^3 is-word ^4 error)
(<epset-task-verbal-CWM> ^delta <delta-rule3>)
(<delta-rule3> ^op-name VCWM-lexdec
	^const <Q3>)
(<delta-rule3> ^prop <prop-C3>)
(<prop-C3> ^name |_PC3|
	^prop-type equality
	^attr1 slot1
	^attr2 2
	^address1 V
	^address2 props$const)

(<delta-rule3> ^prop <prop-C4>)
(<prop-C4> ^name |_PC4|
	^prop-type inexistence
	^attr1 slot1
	^attr2 3
	^address1 RT
	^address2 props$const)

(<delta-rule3> ^prop <prop-C5>)
(<prop-C5> ^name |_PC5|
	^prop-type inexistence
	^attr1 rt-result
	^attr2 4
	^address1 smem
	^address2 props$const)


(<Q2>  ^1 cheinH-verbal-CWM-init)
(<delta_PA2> ^prop-apply true
	^item-name |_PA2|
	^op-name |_PA2|)
(<cbset_PA2> ^props-cbset-name |_PA2|
	^delta <delta-null_PA2>)
(<delta-null_PA2> ^prop-apply true
	^prop <prop-A2>)
(<prop-A2> ^name |_PA2|
	^prop-type add
	^attr1 Gtop
	^attr2 WM
	^address1 G
	^address2 props$rootstate)
(<pre-cbset-rule2> ^props-epset-name cheinH-verbal-CWM-init
	^const <Q2>
	^delta <delta_PA2>)

(<epset-task-verbal-CWM> ^props-epset-name verbal-CWM)
(<Q1>  ^1 cheinH-verbal-CWM-init)
(<epset-task-verbal-CWM> ^delta <delta-rule1>)
(<delta-rule1> ^op-name cheinH-verbal-CWM-init
	^const <Q1>)
(<delta-rule1> ^prop <prop-C1>)
(<prop-C1> ^name |_PC1|
	^prop-type negation
	^attr1 Gtop
	^address1 G)


}
