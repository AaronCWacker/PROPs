#####
# THIS FILE TRANSLATES THE PROPS INSTRUCTIONS
# FROM 'chein_agent3.prop' INTO SMEM INSTRUCTIONS USABLE
# BY A PROPS SOAR AGENT.
#####

# BEGIN INSTRUCTIONS

smem --add {
(<delta_PA10_PA15> ^prop-apply true
	^op-name |_PA10_PA15|
	^item-name |_PA10|
	^item-name |_PA15|)
(<epset_PA10_PA15> ^props-epset-name |_PA10_PA15|
	 ^delta <delta_PA10>
	 ^delta <delta_PA15>)
(<delta_PA10_PA4> ^prop-apply true
	^op-name |_PA10_PA4|
	^item-name |_PA10|
	^item-name |_PA4|)
(<epset_PA10_PA4> ^props-epset-name |_PA10_PA4|
	 ^delta <delta_PA10>
	 ^delta <delta_PA4>)
(<delta_PA10_PA42> ^prop-apply true
	^op-name |_PA10_PA42|
	^item-name |_PA10|
	^item-name |_PA42|)
(<epset_PA10_PA42> ^props-epset-name |_PA10_PA42|
	 ^delta <delta_PA10>
	 ^delta <delta_PA42>)
(<delta_PA12_PA13> ^prop-apply true
	^op-name |_PA12_PA13|
	^item-name |_PA12|
	^item-name |_PA13|)
(<epset_PA12_PA13> ^props-epset-name |_PA12_PA13|
	 ^delta <delta_PA12>
	 ^delta <delta_PA13>)
(<delta_PA15_PA16> ^prop-apply true
	^op-name |_PA15_PA16|
	^item-name |_PA15|
	^item-name |_PA16|)
(<epset_PA15_PA16> ^props-epset-name |_PA15_PA16|
	 ^delta <delta_PA15>
	 ^delta <delta_PA16>)
(<delta_PA15_PA19> ^prop-apply true
	^op-name |_PA15_PA19|
	^item-name |_PA15|
	^item-name |_PA19|)
(<epset_PA15_PA19> ^props-epset-name |_PA15_PA19|
	 ^delta <delta_PA15>
	 ^delta <delta_PA19>)
(<delta_PA15_PA34> ^prop-apply true
	^op-name |_PA15_PA34|
	^item-name |_PA15|
	^item-name |_PA34|)
(<epset_PA15_PA34> ^props-epset-name |_PA15_PA34|
	 ^delta <delta_PA15>
	 ^delta <delta_PA34>)
(<delta_PA21_PA22> ^prop-apply true
	^op-name |_PA21_PA22|
	^item-name |_PA21|
	^item-name |_PA22|)
(<epset_PA21_PA22> ^props-epset-name |_PA21_PA22|
	 ^delta <delta_PA21>
	 ^delta <delta_PA22>)
(<delta_PA23_PA4> ^prop-apply true
	^op-name |_PA23_PA4|
	^item-name |_PA23|
	^item-name |_PA4|)
(<epset_PA23_PA4> ^props-epset-name |_PA23_PA4|
	 ^delta <delta_PA23>
	 ^delta <delta_PA4>)
(<delta_PA24_PA25> ^prop-apply true
	^op-name |_PA24_PA25|
	^item-name |_PA24|
	^item-name |_PA25|)
(<epset_PA24_PA25> ^props-epset-name |_PA24_PA25|
	 ^delta <delta_PA24>
	 ^delta <delta_PA25>)
(<delta_PA28_PA29> ^prop-apply true
	^op-name |_PA28_PA29|
	^item-name |_PA28|
	^item-name |_PA29|)
(<epset_PA28_PA29> ^props-epset-name |_PA28_PA29|
	 ^delta <delta_PA28>
	 ^delta <delta_PA29>)
(<delta_PA28_PA33> ^prop-apply true
	^op-name |_PA28_PA33|
	^item-name |_PA28|
	^item-name |_PA33|)
(<epset_PA28_PA33> ^props-epset-name |_PA28_PA33|
	 ^delta <delta_PA28>
	 ^delta <delta_PA33>)
(<delta_PA31_PA41> ^prop-apply true
	^op-name |_PA31_PA41|
	^item-name |_PA31|
	^item-name |_PA41|)
(<epset_PA31_PA41> ^props-epset-name |_PA31_PA41|
	 ^delta <delta_PA31>
	 ^delta <delta_PA41>)
(<delta_PA4_PA5> ^prop-apply true
	^op-name |_PA4_PA5|
	^item-name |_PA4|
	^item-name |_PA5|)
(<epset_PA4_PA5> ^props-epset-name |_PA4_PA5|
	 ^delta <delta_PA4>
	 ^delta <delta_PA5>)
(<delta_PA10_PA15_PA16> ^prop-apply true
	^op-name |_PA10_PA15_PA16|
	^item-name |_PA10|
	^item-name |_PA15|
	^item-name |_PA16|)
(<epset_PA10_PA15_PA16> ^props-epset-name |_PA10_PA15_PA16|
	 ^delta <delta_PA10_PA15>
	 ^delta <delta_PA16>)
(<delta_PA10_PA15_PA31_PA41> ^prop-apply true
	^op-name |_PA10_PA15_PA31_PA41|
	^item-name |_PA10|
	^item-name |_PA15|
	^item-name |_PA31|
	^item-name |_PA41|)
(<epset_PA10_PA15_PA31_PA41> ^props-epset-name |_PA10_PA15_PA31_PA41|
	 ^delta <delta_PA10_PA15>
	 ^delta <delta_PA31_PA41>)
(<delta_PA10_PA15_PA35> ^prop-apply true
	^op-name |_PA10_PA15_PA35|
	^item-name |_PA10|
	^item-name |_PA15|
	^item-name |_PA35|)
(<epset_PA10_PA15_PA35> ^props-epset-name |_PA10_PA15_PA35|
	 ^delta <delta_PA10_PA15>
	 ^delta <delta_PA35>)
(<delta_PA11_PA12_PA13> ^prop-apply true
	^op-name |_PA11_PA12_PA13|
	^item-name |_PA11|
	^item-name |_PA12|
	^item-name |_PA13|)
(<epset_PA11_PA12_PA13> ^props-epset-name |_PA11_PA12_PA13|
	 ^delta <delta_PA11>
	 ^delta <delta_PA12_PA13>)
(<delta_PA15_PA28_PA33_PA34> ^prop-apply true
	^op-name |_PA15_PA28_PA33_PA34|
	^item-name |_PA15|
	^item-name |_PA34|
	^item-name |_PA28|
	^item-name |_PA33|)
(<epset_PA15_PA28_PA33_PA34> ^props-epset-name |_PA15_PA28_PA33_PA34|
	 ^delta <delta_PA15_PA34>
	 ^delta <delta_PA28_PA33>)
(<delta_PA21_PA22_PA23_PA4> ^prop-apply true
	^op-name |_PA21_PA22_PA23_PA4|
	^item-name |_PA21|
	^item-name |_PA22|
	^item-name |_PA23|
	^item-name |_PA4|)
(<epset_PA21_PA22_PA23_PA4> ^props-epset-name |_PA21_PA22_PA23_PA4|
	 ^delta <delta_PA21_PA22>
	 ^delta <delta_PA23_PA4>)
(<delta_PA24_PA25_PA31> ^prop-apply true
	^op-name |_PA24_PA25_PA31|
	^item-name |_PA24|
	^item-name |_PA25|
	^item-name |_PA31|)
(<epset_PA24_PA25_PA31> ^props-epset-name |_PA24_PA25_PA31|
	 ^delta <delta_PA24_PA25>
	 ^delta <delta_PA31>)

(<Q46>  ^1 chein-stroop-finish ^2 finish)
(<delta_PA42> ^prop-apply true
	^item-name |_PA42|
	^op-name |_PA42|)
(<cbset_PA42> ^props-epset-name |_PA42|
	^delta <delta-null_PA42>)
(<delta-null_PA42> ^prop-apply true
	^prop <prop-A42>)
(<prop-A42> ^name |_PA42|
	^prop-type add
	^attr1 Gtask
	^attr2 2
	^address1 G
	^address2 props$const)
(<pre-cbset-rule46> ^props-epset-name chein-stroop-finish
	^const <Q46>
	^delta <delta_PA10_PA42>)

(<Q45>  ^1 chein-stroop-finish ^2 stroop ^3 last)
(<epset-task-stroop> ^delta <delta-rule45>)
(<delta-rule45> ^op-name chein-stroop-finish
	^const <Q45>)
(<delta-rule45> ^prop <prop-C1>)
(<delta-rule45> ^prop <prop-C6>)

(<Q44>  ^1 chein-stroop-idle-no-focus ^2 noprepare ^3 wait)
(<pre-cbset-rule44> ^props-epset-name chein-stroop-idle-no-focus
	^const <Q44>
	^delta <delta_PA23_PA4>)

(<Q43>  ^1 chein-stroop-idle-no-focus ^2 stroop ^3 pending ^4 neutral)
(<epset-task-stroop> ^delta <delta-rule43>)
(<delta-rule43> ^op-name chein-stroop-idle-no-focus
	^const <Q43>)
(<delta-rule43> ^prop <prop-C1>)
(<delta-rule43> ^prop <prop-C6>)
(<delta-rule43> ^prop <prop-C7>)

(<Q42>  ^1 chein-stroop-idle-focus ^2 prepare ^3 wait)
(<pre-cbset-rule42> ^props-epset-name chein-stroop-idle-focus
	^const <Q42>
	^delta <delta_PA23_PA4>)

(<Q41>  ^1 chein-stroop-idle-focus ^2 stroop ^3 pending ^4 neutral)
(<epset-task-stroop> ^delta <delta-rule41>)
(<delta-rule41> ^op-name chein-stroop-idle-focus
	^const <Q41>)
(<delta-rule41> ^prop <prop-C1>)
(<delta-rule41> ^prop <prop-C6>)
(<delta-rule41> ^prop <prop-C7>)

(<Q40>  ^1 chein-stroop-report-say ^2 say ^3 neutral)
(<delta_PA41> ^prop-apply true
	^item-name |_PA41|
	^op-name |_PA41|)
(<cbset_PA41> ^props-epset-name |_PA41|
	^delta <delta-null_PA41>)
(<delta-null_PA41> ^prop-apply true
	^prop <prop-A41>)
(<prop-A41> ^name |_PA41|
	^prop-type add
	^attr1 slot2
	^attr2 slot3
	^address1 AC
	^address2 RT)
(<pre-cbset-rule40> ^props-epset-name chein-stroop-report-say
	^const <Q40>
	^delta <delta_PA10_PA15_PA31_PA41>)

(<Q39>  ^1 chein-stroop-report-say ^2 stroop)
(<epset-task-stroop> ^delta <delta-rule39>)
(<delta-rule39> ^op-name chein-stroop-report-say
	^const <Q39>)
(<delta-rule39> ^prop <prop-C1>)
(<delta-rule39> ^prop <prop-C37>)
(<delta-rule39> ^prop <prop-C40>)
(<prop-C40> ^name |_PA40|
	^prop-type existence
	^attr1 slot3
	^address1 RT)


(<Q38>  ^1 chein-stroop-report-retrieve ^2 s-mapping ^3 query)
(<pre-cbset-rule38> ^props-epset-name chein-stroop-report-retrieve
	^const <Q38>
	^delta <delta_PA11_PA12_PA13>)

(<Q37>  ^1 chein-stroop-report-retrieve ^2 stroop)
(<epset-task-stroop> ^delta <delta-rule37>)
(<delta-rule37> ^op-name chein-stroop-report-retrieve
	^const <Q37>)
(<delta-rule37> ^prop <prop-C1>)
(<delta-rule37> ^prop <prop-C37>)
(<delta-rule37> ^prop <prop-C38>)
(<prop-C38> ^name |_PA38|
	^prop-type existence
	^attr1 slot2
	^address1 V)

(<delta-rule37> ^prop <prop-C39>)
(<prop-C39> ^name |_PA39|
	^prop-type negation
	^attr1 slot3
	^address1 RT)


(<Q36>  ^1 chein-stroop-object-seen-focus-all ^2 get-property ^3 both)
(<pre-cbset-rule36> ^props-epset-name chein-stroop-object-seen-focus-all
	^const <Q36>
	^delta <delta_PA15_PA16>)

(<Q35>  ^1 chein-stroop-object-seen-focus-all ^2 stroop ^3 yes ^4 prepare)
(<epset-task-stroop> ^delta <delta-rule35>)
(<delta-rule35> ^op-name chein-stroop-object-seen-focus-all
	^const <Q35>)
(<delta-rule35> ^prop <prop-C1>)
(<delta-rule35> ^prop <prop-C6>)
(<delta-rule35> ^prop <prop-C36>)
(<prop-C36> ^name |_PA36|
	^prop-type inequality
	^attr1 Gcontrol
	^attr2 4
	^address1 G
	^address2 props$const)

(<delta-rule35> ^prop <prop-C37>)
(<prop-C37> ^name |_PA37|
	^prop-type existence
	^attr1 Gcontrol
	^address1 G)


(<Q34>  ^1 chein-stroop-object-seen-focus-color ^2 get-property ^3 color-property)
(<pre-cbset-rule34> ^props-epset-name chein-stroop-object-seen-focus-color
	^const <Q34>
	^delta <delta_PA15_PA16>)

(<Q33>  ^1 chein-stroop-object-seen-focus-color ^2 stroop ^3 yes ^4 prepare)
(<epset-task-stroop> ^delta <delta-rule33>)
(<delta-rule33> ^op-name chein-stroop-object-seen-focus-color
	^const <Q33>)
(<delta-rule33> ^prop <prop-C1>)
(<delta-rule33> ^prop <prop-C6>)
(<delta-rule33> ^prop <prop-C7>)

(<Q32>  ^1 chein-stroop-init ^2 prepare ^3 wait)
(<pre-cbset-rule32> ^props-epset-name chein-stroop-init
	^const <Q32>
	^delta <delta_PA23_PA4>)

(<epset-task-stroop> ^props-epset-name stroop)
(<Q31>  ^1 chein-stroop-init ^2 stroop)
(<epset-task-stroop> ^delta <delta-rule31>)
(<delta-rule31> ^op-name chein-stroop-init
	^const <Q31>)
(<delta-rule31> ^prop <prop-C1>)
(<delta-rule31> ^prop <prop-C3>)

(<Q30>  ^1 chein-verbal-CWM-report-finish ^2 enter ^3 finish)
(<delta_PA35> ^prop-apply true
	^item-name |_PA35|
	^op-name |_PA35|)
(<cbset_PA35> ^props-epset-name |_PA35|
	^delta <delta-null_PA35>)
(<delta-null_PA35> ^prop-apply true
	^prop <prop-A35>)
(<prop-A35> ^name |_PA35|
	^prop-type add
	^attr1 Gtask
	^attr2 3
	^address1 G
	^address2 props$const)
(<pre-cbset-rule30> ^props-epset-name chein-verbal-CWM-report-finish
	^const <Q30>
	^delta <delta_PA10_PA15_PA35>)

(<Q29>  ^1 chein-verbal-CWM-report-finish ^2 verbal-CWM ^3 report ^4 error)
(<epset-task-verbal-CWM> ^delta <delta-rule29>)
(<delta-rule29> ^op-name chein-verbal-CWM-report-finish
	^const <Q29>)
(<delta-rule29> ^prop <prop-C1>)
(<delta-rule29> ^prop <prop-C6>)
(<delta-rule29> ^prop <prop-C30>)
(<delta-rule29> ^prop <prop-C32>)

(<Q28>  ^1 chein-verbal-CWM-report-report ^2 type ^3 wm-query)
(<delta_PA33> ^prop-apply true
	^item-name |_PA33|
	^op-name |_PA33|)
(<cbset_PA33> ^props-epset-name |_PA33|
	^delta <delta-null_PA33>)
(<delta-null_PA33> ^prop-apply true
	^prop <prop-A33>)
(<prop-A33> ^name |_PA33|
	^prop-type add
	^attr1 slot2
	^attr2 slot1
	^address1 AC
	^address2 RT)
(<delta_PA34> ^prop-apply true
	^item-name |_PA34|
	^op-name |_PA34|)
(<cbset_PA34> ^props-epset-name |_PA34|
	^delta <delta-null_PA34>)
(<delta-null_PA34> ^prop-apply true
	^prop <prop-A34>)
(<prop-A34> ^name |_PA34|
	^prop-type add
	^attr1 q-type
	^attr2 3
	^address1 Q
	^address2 props$const)
(<pre-cbset-rule28> ^props-epset-name chein-verbal-CWM-report-report
	^const <Q28>
	^delta <delta_PA15_PA28_PA33_PA34>)

(<Q27>  ^1 chein-verbal-CWM-report-report ^2 verbal-CWM ^3 report ^4 error)
(<epset-task-verbal-CWM> ^delta <delta-rule27>)
(<delta-rule27> ^op-name chein-verbal-CWM-report-report
	^const <Q27>)
(<delta-rule27> ^prop <prop-C1>)
(<delta-rule27> ^prop <prop-C6>)
(<delta-rule27> ^prop <prop-C26>)
(<delta-rule27> ^prop <prop-C32>)
(<prop-C32> ^name |_PA32|
	^prop-type equality
	^attr1 Gcontrol
	^attr2 3
	^address1 G
	^address2 props$const)


(<Q26>  ^1 chein-verbal-CWM-report-start-from-lexical ^2 retrieve ^3 report)
(<pre-cbset-rule26> ^props-epset-name chein-verbal-CWM-report-start-from-lexical
	^const <Q26>
	^delta <delta_PA24_PA25_PA31>)

(<Q25>  ^1 chein-verbal-CWM-report-start-from-lexical ^2 verbal-CWM ^3 report ^4 lexdec)
(<epset-task-verbal-CWM> ^delta <delta-rule25>)
(<delta-rule25> ^op-name chein-verbal-CWM-report-start-from-lexical
	^const <Q25>)
(<delta-rule25> ^prop <prop-C1>)
(<delta-rule25> ^prop <prop-C6>)
(<delta-rule25> ^prop <prop-C7>)

(<Q24>  ^1 chein-verbal-CWM-report-start-from-rehearse ^2 retrieve ^3 report)
(<delta_PA31> ^prop-apply true
	^item-name |_PA31|
	^op-name |_PA31|)
(<cbset_PA31> ^props-epset-name |_PA31|
	^delta <delta-null_PA31>)
(<delta-null_PA31> ^prop-apply true
	^prop <prop-A31>)
(<prop-A31> ^name |_PA31|
	^prop-type add
	^attr1 Gcontrol
	^attr2 3
	^address1 G
	^address2 props$const)
(<pre-cbset-rule24> ^props-epset-name chein-verbal-CWM-report-start-from-rehearse
	^const <Q24>
	^delta <delta_PA24_PA25_PA31>)

(<Q23>  ^1 chein-verbal-CWM-report-start-from-rehearse ^2 verbal-CWM ^3 report ^4 rehearse)
(<epset-task-verbal-CWM> ^delta <delta-rule23>)
(<delta-rule23> ^op-name chein-verbal-CWM-report-start-from-rehearse
	^const <Q23>)
(<delta-rule23> ^prop <prop-C1>)
(<delta-rule23> ^prop <prop-C6>)
(<delta-rule23> ^prop <prop-C7>)

(<Q22>  ^1 chein-verbal-CWM-rehearse-restart ^2 retrieve)
(<pre-cbset-rule22> ^props-epset-name chein-verbal-CWM-rehearse-restart
	^const <Q22>
	^delta <delta_PA24_PA25>)

(<Q21>  ^1 chein-verbal-CWM-rehearse-restart ^2 verbal-CWM ^3 pending ^4 error ^5 rehearse)
(<epset-task-verbal-CWM> ^delta <delta-rule21>)
(<delta-rule21> ^op-name chein-verbal-CWM-rehearse-restart
	^const <Q21>)
(<delta-rule21> ^prop <prop-C1>)
(<delta-rule21> ^prop <prop-C6>)
(<delta-rule21> ^prop <prop-C30>)
(<prop-C30> ^name |_PA30|
	^prop-type equality
	^attr1 rt-result
	^attr2 4
	^address1 smem
	^address2 props$const)

(<delta-rule21> ^prop <prop-C27>)

(<Q20>  ^1 chein-verbal-CWM-rehearse-next ^2 wm-query)
(<delta_PA28> ^prop-apply true
	^item-name |_PA28|
	^op-name |_PA28|)
(<cbset_PA28> ^props-epset-name |_PA28|
	^delta <delta-null_PA28>)
(<delta-null_PA28> ^prop-apply true
	^prop <prop-A28>)
(<prop-A28> ^name |_PA28|
	^prop-type add
	^attr1 root
	^attr2 RTid
	^address1 Q
	^address2 RT)
(<delta_PA29> ^prop-apply true
	^item-name |_PA29|
	^op-name |_PA29|)
(<cbset_PA29> ^props-epset-name |_PA29|
	^delta <delta-null_PA29>)
(<delta-null_PA29> ^prop-apply true
	^prop <prop-A29>)
(<prop-A29> ^name |_PA29|
	^prop-type add
	^attr1 q-type
	^attr2 2
	^address1 Q
	^address2 props$const)
(<pre-cbset-rule20> ^props-epset-name chein-verbal-CWM-rehearse-next
	^const <Q20>
	^delta <delta_PA28_PA29>)

(<Q19>  ^1 chein-verbal-CWM-rehearse-next ^2 verbal-CWM ^3 pending ^4 error ^5 rehearse)
(<epset-task-verbal-CWM> ^delta <delta-rule19>)
(<delta-rule19> ^op-name chein-verbal-CWM-rehearse-next
	^const <Q19>)
(<delta-rule19> ^prop <prop-C1>)
(<delta-rule19> ^prop <prop-C6>)
(<delta-rule19> ^prop <prop-C26>)
(<prop-C26> ^name |_PA26|
	^prop-type inequality
	^attr1 rt-result
	^attr2 4
	^address1 smem
	^address2 props$const)

(<delta-rule19> ^prop <prop-C27>)
(<prop-C27> ^name |_PA27|
	^prop-type equality
	^attr1 Gcontrol
	^attr2 5
	^address1 G
	^address2 props$const)


(<Q18>  ^1 chein-verbal-CWM-rehearse-start ^2 retrieve)
(<delta_PA24> ^prop-apply true
	^item-name |_PA24|
	^op-name |_PA24|)
(<cbset_PA24> ^props-epset-name |_PA24|
	^delta <delta-null_PA24>)
(<delta-null_PA24> ^prop-apply true
	^prop <prop-A24>)
(<prop-A24> ^name |_PA24|
	^prop-type add
	^attr1 q-type
	^attr2 2
	^address1 Q
	^address2 props$const)
(<delta_PA25> ^prop-apply true
	^item-name |_PA25|
	^op-name |_PA25|)
(<cbset_PA25> ^props-epset-name |_PA25|
	^delta <delta-null_PA25>)
(<delta-null_PA25> ^prop-apply true
	^prop <prop-A25>)
(<prop-A25> ^name |_PA25|
	^prop-type add
	^attr1 retrieve
	^attr2 Gtop
	^address1 Q
	^address2 G)
(<pre-cbset-rule18> ^props-epset-name chein-verbal-CWM-rehearse-start
	^const <Q18>
	^delta <delta_PA24_PA25>)

(<Q17>  ^1 chein-verbal-CWM-rehearse-start ^2 verbal-CWM ^3 pending ^4 rehearse)
(<epset-task-verbal-CWM> ^delta <delta-rule17>)
(<delta-rule17> ^op-name chein-verbal-CWM-rehearse-start
	^const <Q17>)
(<delta-rule17> ^prop <prop-C1>)
(<delta-rule17> ^prop <prop-C6>)
(<delta-rule17> ^prop <prop-C8>)
(<delta-rule17> ^prop <prop-C7>)

(<Q16>  ^1 chein-verbal-CWM-letter-seen-store-dm ^2 rehearse ^3 wait)
(<delta_PA21> ^prop-apply true
	^item-name |_PA21|
	^op-name |_PA21|)
(<cbset_PA21> ^props-epset-name |_PA21|
	^delta <delta-null_PA21>)
(<delta-null_PA21> ^prop-apply true
	^prop <prop-A21>)
(<prop-A21> ^name |_PA21|
	^prop-type add
	^attr1 slot1
	^attr2 slot2
	^address1 NW
	^address2 V)
(<delta_PA22> ^prop-apply true
	^item-name |_PA22|
	^op-name |_PA22|)
(<cbset_PA22> ^props-epset-name |_PA22|
	^delta <delta-null_PA22>)
(<delta-null_PA22> ^prop-apply true
	^prop <prop-A22>)
(<prop-A22> ^name |_PA22|
	^prop-type add
	^attr1 WMprev
	^attr2 WM
	^address1 NW
	^address2 props$rootstate)
(<delta_PA23> ^prop-apply true
	^item-name |_PA23|
	^op-name |_PA23|)
(<cbset_PA23> ^props-epset-name |_PA23|
	^delta <delta-null_PA23>)
(<delta-null_PA23> ^prop-apply true
	^prop <prop-A23>)
(<prop-A23> ^name |_PA23|
	^prop-type add
	^attr1 slot1
	^attr2 3
	^address1 AC
	^address2 props$const)
(<pre-cbset-rule16> ^props-epset-name chein-verbal-CWM-letter-seen-store-dm
	^const <Q16>
	^delta <delta_PA21_PA22_PA23_PA4>)

(<Q15>  ^1 chein-verbal-CWM-letter-seen-store-dm ^2 verbal-CWM ^3 letter ^4 lexdec)
(<epset-task-verbal-CWM> ^delta <delta-rule15>)
(<delta-rule15> ^op-name chein-verbal-CWM-letter-seen-store-dm
	^const <Q15>)
(<delta-rule15> ^prop <prop-C1>)
(<delta-rule15> ^prop <prop-C6>)
(<delta-rule15> ^prop <prop-C7>)
(<delta-rule15> ^prop <prop-C20>)
(<prop-C20> ^name |_PA20|
	^prop-type existence
	^attr1 slot1
	^address1 WM)


(<Q14>  ^1 chein-verbal-CWM-letter-seen-store-wm ^2 wait)
(<delta_PA19> ^prop-apply true
	^item-name |_PA19|
	^op-name |_PA19|)
(<cbset_PA19> ^props-epset-name |_PA19|
	^delta <delta-null_PA19>)
(<delta-null_PA19> ^prop-apply true
	^prop <prop-A19>)
(<prop-A19> ^name |_PA19|
	^prop-type add
	^attr1 slot1
	^attr2 slot2
	^address1 WM
	^address2 V)
(<pre-cbset-rule14> ^props-epset-name chein-verbal-CWM-letter-seen-store-wm
	^const <Q14>
	^delta <delta_PA15_PA19>)

(<Q13>  ^1 chein-verbal-CWM-letter-seen-store-wm ^2 verbal-CWM ^3 letter ^4 lexdec)
(<epset-task-verbal-CWM> ^delta <delta-rule13>)
(<delta-rule13> ^op-name chein-verbal-CWM-letter-seen-store-wm
	^const <Q13>)
(<delta-rule13> ^prop <prop-C1>)
(<delta-rule13> ^prop <prop-C6>)
(<delta-rule13> ^prop <prop-C7>)
(<delta-rule13> ^prop <prop-C18>)
(<prop-C18> ^name |_PA18|
	^prop-type negation
	^attr1 slot1
	^address1 WM)


(<Q12>  ^1 chein-verbal-CWM-lexical-fail ^2 type ^3 N)
(<pre-cbset-rule12> ^props-epset-name chein-verbal-CWM-lexical-fail
	^const <Q12>
	^delta <delta_PA10_PA15_PA16>)

(<Q11>  ^1 chein-verbal-CWM-lexical-fail ^2 verbal-CWM ^3 error ^4 lexdec)
(<epset-task-verbal-CWM> ^delta <delta-rule11>)
(<delta-rule11> ^op-name chein-verbal-CWM-lexical-fail
	^const <Q11>)
(<delta-rule11> ^prop <prop-C1>)
(<delta-rule11> ^prop <prop-C17>)
(<prop-C17> ^name |_PA17|
	^prop-type equality
	^attr1 rt-result
	^attr2 3
	^address1 smem
	^address2 props$const)

(<delta-rule11> ^prop <prop-C7>)

(<Q10>  ^1 chein-verbal-CWM-lexical-success ^2 type ^3 Y)
(<delta_PA15> ^prop-apply true
	^item-name |_PA15|
	^op-name |_PA15|)
(<cbset_PA15> ^props-epset-name |_PA15|
	^delta <delta-null_PA15>)
(<delta-null_PA15> ^prop-apply true
	^prop <prop-A15>)
(<prop-A15> ^name |_PA15|
	^prop-type add
	^attr1 slot1
	^attr2 2
	^address1 AC
	^address2 props$const)
(<delta_PA16> ^prop-apply true
	^item-name |_PA16|
	^op-name |_PA16|)
(<cbset_PA16> ^props-epset-name |_PA16|
	^delta <delta-null_PA16>)
(<delta-null_PA16> ^prop-apply true
	^prop <prop-A16>)
(<prop-A16> ^name |_PA16|
	^prop-type add
	^attr1 slot2
	^attr2 3
	^address1 AC
	^address2 props$const)
(<pre-cbset-rule10> ^props-epset-name chein-verbal-CWM-lexical-success
	^const <Q10>
	^delta <delta_PA10_PA15_PA16>)

(<Q9>  ^1 chein-verbal-CWM-lexical-success ^2 verbal-CWM ^3 yes ^4 lexdec)
(<epset-task-verbal-CWM> ^delta <delta-rule9>)
(<delta-rule9> ^op-name chein-verbal-CWM-lexical-success
	^const <Q9>)
(<delta-rule9> ^prop <prop-C1>)
(<delta-rule9> ^prop <prop-C14>)
(<prop-C14> ^name |_PA14|
	^prop-type equality
	^attr1 slot3
	^attr2 3
	^address1 RT
	^address2 props$const)

(<delta-rule9> ^prop <prop-C7>)

(<Q8>  ^1 chein-verbal-CWM-lexical-retrieve ^2 is-word ^3 query)
(<delta_PA11> ^prop-apply true
	^item-name |_PA11|
	^op-name |_PA11|)
(<cbset_PA11> ^props-epset-name |_PA11|
	^delta <delta-null_PA11>)
(<delta-null_PA11> ^prop-apply true
	^prop <prop-A11>)
(<prop-A11> ^name |_PA11|
	^prop-type add
	^attr1 q-type
	^attr2 3
	^address1 Q
	^address2 props$const)
(<delta_PA12> ^prop-apply true
	^item-name |_PA12|
	^op-name |_PA12|)
(<cbset_PA12> ^props-epset-name |_PA12|
	^delta <delta-null_PA12>)
(<delta-null_PA12> ^prop-apply true
	^prop <prop-A12>)
(<prop-A12> ^name |_PA12|
	^prop-type add
	^attr1 slot1
	^attr2 2
	^address1 Q
	^address2 props$const)
(<delta_PA13> ^prop-apply true
	^item-name |_PA13|
	^op-name |_PA13|)
(<cbset_PA13> ^props-epset-name |_PA13|
	^delta <delta-null_PA13>)
(<delta-null_PA13> ^prop-apply true
	^prop <prop-A13>)
(<prop-A13> ^name |_PA13|
	^prop-type add
	^attr1 slot2
	^attr2 slot2
	^address1 Q
	^address2 V)
(<pre-cbset-rule8> ^props-epset-name chein-verbal-CWM-lexical-retrieve
	^const <Q8>
	^delta <delta_PA11_PA12_PA13>)

(<Q7>  ^1 chein-verbal-CWM-lexical-retrieve ^2 verbal-CWM ^3 word ^4 lexdec)
(<epset-task-verbal-CWM> ^delta <delta-rule7>)
(<delta-rule7> ^op-name chein-verbal-CWM-lexical-retrieve
	^const <Q7>)
(<delta-rule7> ^prop <prop-C1>)
(<delta-rule7> ^prop <prop-C6>)
(<delta-rule7> ^prop <prop-C8>)
(<delta-rule7> ^prop <prop-C7>)

(<Q6>  ^1 chein-verbal-CWM-stop-rehearsal-post-rehearse ^2 lexdec)
(<delta_PA10> ^prop-apply true
	^item-name |_PA10|
	^op-name |_PA10|)
(<cbset_PA10> ^props-epset-name |_PA10|
	^delta <delta-null_PA10>)
(<delta-null_PA10> ^prop-apply true
	^prop <prop-A10>)
(<prop-A10> ^name |_PA10|
	^prop-type add
	^attr1 clear-rt
	^attr2 1
	^address1 flags
	^address2 props$const)
(<pre-cbset-rule6> ^props-epset-name chein-verbal-CWM-stop-rehearsal-post-rehearse
	^const <Q6>
	^delta <delta_PA10_PA4>)

(<Q5>  ^1 chein-verbal-CWM-stop-rehearsal-post-rehearse ^2 verbal-CWM ^3 word ^4 rehearse)
(<epset-task-verbal-CWM> ^delta <delta-rule5>)
(<delta-rule5> ^op-name chein-verbal-CWM-stop-rehearsal-post-rehearse
	^const <Q5>)
(<delta-rule5> ^prop <prop-C1>)
(<delta-rule5> ^prop <prop-C6>)
(<delta-rule5> ^prop <prop-C7>)
(<delta-rule5> ^prop <prop-C9>)
(<prop-C9> ^name |_PA9|
	^prop-type existence
	^attr1 rt-result
	^address1 smem)


(<Q4>  ^1 chein-verbal-CWM-stop-rehearsal-pre-rehearse ^2 lexdec)
(<pre-cbset-rule4> ^props-epset-name chein-verbal-CWM-stop-rehearsal-pre-rehearse
	^const <Q4>
	^delta <delta_PA4>)

(<Q3>  ^1 chein-verbal-CWM-stop-rehearsal-pre-rehearse ^2 verbal-CWM ^3 word ^4 rehearse)
(<epset-task-verbal-CWM> ^delta <delta-rule3>)
(<delta-rule3> ^op-name chein-verbal-CWM-stop-rehearsal-pre-rehearse
	^const <Q3>)
(<delta-rule3> ^prop <prop-C1>)
(<delta-rule3> ^prop <prop-C6>)
(<prop-C6> ^name |_PA6|
	^prop-type equality
	^attr1 slot1
	^attr2 3
	^address1 V
	^address2 props$const)

(<delta-rule3> ^prop <prop-C7>)
(<prop-C7> ^name |_PA7|
	^prop-type equality
	^attr1 Gcontrol
	^attr2 4
	^address1 G
	^address2 props$const)

(<delta-rule3> ^prop <prop-C8>)
(<prop-C8> ^name |_PA8|
	^prop-type negation
	^attr1 rt-result
	^address1 smem)


(<Q2>  ^1 chein-verbal-CWM-init ^2 lexdec)
(<delta_PA4> ^prop-apply true
	^item-name |_PA4|
	^op-name |_PA4|)
(<cbset_PA4> ^props-epset-name |_PA4|
	^delta <delta-null_PA4>)
(<delta-null_PA4> ^prop-apply true
	^prop <prop-A4>)
(<prop-A4> ^name |_PA4|
	^prop-type add
	^attr1 Gcontrol
	^attr2 2
	^address1 G
	^address2 props$const)
(<delta_PA5> ^prop-apply true
	^item-name |_PA5|
	^op-name |_PA5|)
(<cbset_PA5> ^props-epset-name |_PA5|
	^delta <delta-null_PA5>)
(<delta-null_PA5> ^prop-apply true
	^prop <prop-A5>)
(<prop-A5> ^name |_PA5|
	^prop-type add
	^attr1 Gtop
	^attr2 WM
	^address1 G
	^address2 props$rootstate)
(<pre-cbset-rule2> ^props-epset-name chein-verbal-CWM-init
	^const <Q2>
	^delta <delta_PA4_PA5>)

(<epset-task-verbal-CWM> ^props-epset-name verbal-CWM)
(<Q1>  ^1 chein-verbal-CWM-init ^2 verbal-CWM)
(<epset-task-verbal-CWM> ^delta <delta-rule1>)
(<delta-rule1> ^op-name chein-verbal-CWM-init
	^const <Q1>)
(<delta-rule1> ^prop <prop-C1>)
(<prop-C1> ^name |_PA1|
	^prop-type equality
	^attr1 Gtask
	^attr2 2
	^address1 G
	^address2 props$const)

(<delta-rule1> ^prop <prop-C2>)
(<prop-C2> ^name |_PA2|
	^prop-type negation
	^attr1 Gtop
	^address1 G)

(<delta-rule1> ^prop <prop-C3>)
(<prop-C3> ^name |_PA3|
	^prop-type negation
	^attr1 Gcontrol
	^address1 G)


}
