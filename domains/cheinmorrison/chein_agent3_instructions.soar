#####
# THIS FILE TRANSLATES THE PROPS INSTRUCTIONS
# FROM 'chein_agent3.prop' INTO SMEM INSTRUCTIONS USABLE
# BY A PROPS SOAR AGENT.
#####

# BEGIN INSTRUCTIONS

smem --add {
(<d-op7> ^application <dz7>)
(<d-op7> ^op-name |chein-VCWM-letter|)
(<dz7> ^unretrieved <dzz7>)
(<dzz7> ^spread-link <epset-8>)
(<d-op23> ^application <dz23>)
(<d-op23> ^op-name |chein-VCWM-letter-store-dm|)
(<dz23> ^unretrieved <dzz23>)
(<dzz23> ^spread-link <epset-24>)
(<d-op21> ^application <dz21>)
(<d-op21> ^op-name |chein-VCWM-letter-store-wm|)
(<dz21> ^unretrieved <dzz21>)
(<dzz21> ^spread-link <epset-22>)
(<d-op9> ^application <dz9>)
(<d-op9> ^op-name |chein-VCWM-rehearse|)
(<dz9> ^unretrieved <dzz9>)
(<dzz9> ^spread-link <epset-10>)
(<d-op13> ^application <dz13>)
(<d-op13> ^op-name |chein-VCWM-report|)
(<dz13> ^unretrieved <dzz13>)
(<dzz13> ^spread-link <epset-14>)
(<d-op37> ^application <dz37>)
(<d-op37> ^op-name |chein-VCWM-report-finish|)
(<dz37> ^unretrieved <dzz37>)
(<dzz37> ^spread-link <epset-38>)
(<d-op35> ^application <dz35>)
(<d-op35> ^op-name |chein-VCWM-report-report|)
(<dz35> ^unretrieved <dzz35>)
(<dzz35> ^spread-link <epset-36>)
(<d-op33> ^application <dz33>)
(<d-op33> ^op-name |chein-VCWM-report-start|)
(<dz33> ^unretrieved <dzz33>)
(<dzz33> ^spread-link <epset-34>)
(<d-op11> ^application <dz11>)
(<d-op11> ^op-name |chein-VCWM-wait|)
(<dz11> ^unretrieved <dzz11>)
(<dzz11> ^spread-link <epset-12>)
(<d-op5> ^application <dz5>)
(<d-op5> ^op-name |chein-VCWM-word|)
(<dz5> ^unretrieved <dzz5>)
(<dzz5> ^spread-link <epset-6>)
(<d-op19> ^application <dz19>)
(<d-op19> ^op-name |chein-VCWM-word-fail|)
(<dz19> ^unretrieved <dzz19>)
(<dzz19> ^spread-link <epset-20>)
(<d-op15> ^application <dz15>)
(<d-op15> ^op-name |chein-VCWM-word-retrieve|)
(<dz15> ^unretrieved <dzz15>)
(<dzz15> ^spread-link <epset-16>)
(<d-op17> ^application <dz17>)
(<d-op17> ^op-name |chein-VCWM-word-success|)
(<dz17> ^unretrieved <dzz17>)
(<dzz17> ^spread-link <epset-18>)
(<d-op27> ^application <dz27>)
(<d-op27> ^op-name |chein-prepare-VCWM-next|)
(<dz27> ^unretrieved <dzz27>)
(<dzz27> ^spread-link <epset-28>)
(<d-op29> ^application <dz29>)
(<d-op29> ^op-name |chein-prepare-VCWM-restart|)
(<dz29> ^unretrieved <dzz29>)
(<dzz29> ^spread-link <epset-30>)
(<d-op25> ^application <dz25>)
(<d-op25> ^op-name |chein-prepare-VCWM-start|)
(<dz25> ^unretrieved <dzz25>)
(<dzz25> ^spread-link <epset-26>)
(<d-op31> ^application <dz31>)
(<d-op31> ^op-name |chein-prepare-stroop-focus-color|)
(<dz31> ^unretrieved <dzz31>)
(<dzz31> ^spread-link <epset-32>)
(<d-op49> ^application <dz49>)
(<d-op49> ^op-name |chein-stroop-finish|)
(<dz49> ^unretrieved <dzz49>)
(<dzz49> ^spread-link <epset-50>)
(<d-op39> ^application <dz39>)
(<d-op39> ^op-name |chein-stroop-focus|)
(<dz39> ^unretrieved <dzz39>)
(<dzz39> ^spread-link <epset-40>)
(<d-op45> ^application <dz45>)
(<d-op45> ^op-name |chein-stroop-focus-all|)
(<dz45> ^unretrieved <dzz45>)
(<dzz45> ^spread-link <epset-46>)
(<d-op43> ^application <dz43>)
(<d-op43> ^op-name |chein-stroop-focus-color|)
(<dz43> ^unretrieved <dzz43>)
(<dzz43> ^spread-link <epset-44>)
(<d-op41> ^application <dz41>)
(<d-op41> ^op-name |chein-stroop-no-focus|)
(<dz41> ^unretrieved <dzz41>)
(<dzz41> ^spread-link <epset-42>)
(<d-op47> ^application <dz47>)
(<d-op47> ^op-name |chein-stroop-report|)
(<dz47> ^unretrieved <dzz47>)
(<dzz47> ^spread-link <epset-48>)
(<d-op51> ^application <dz51>)
(<d-op51> ^op-name |chein-stroop-report-retrieve|)
(<dz51> ^unretrieved <dzz51>)
(<dzz51> ^spread-link <epset-52>)
(<d-op53> ^application <dz53>)
(<d-op53> ^op-name |chein-stroop-report-say|)
(<dz53> ^unretrieved <dzz53>)
(<dzz53> ^spread-link <epset-54>)
(<d-op1> ^application <dz1>)
(<d-op1> ^op-name |chein-verbal-CWM-init|)
(<dz1> ^unretrieved <dzz1>)
(<dzz1> ^spread-link <epset-2>)
(<d-op3> ^application <dz3>)
(<d-op3> ^op-name |chein-verbal-CWM-ready|)
(<dz3> ^unretrieved <dzz3>)
(<dzz3> ^spread-link <epset-4>)

(<Q54> ^1 chein-stroop-report-say)
(<Q54> ^2 say)
(<Q54> ^3 reported)
(<epset-54> ^props-epset-name chein-stroop-report-say)
(<epset-54> ^const <Q54>)
(<epset-54> ^delta <a-prop18>)
(<a-prop18> ^op-name |_PA18|)
(<epset-54> ^delta <a-prop45>)
(<a-prop45> ^op-name |_PA45|)
(<a-prop45> ^prop-apply |_PA45|)
(<a-prop45> ^condition <cba45>)
(<a-prop45> ^item-name |_PA45|)
(<cba45> ^prop-type add)
(<cba45> ^attr1 slot2)
(<cba45> ^attr2 slot3)
(<cba45> ^address1 AC)
(<cba45> ^address2 RT)
(<cba45> ^name |_PA45|)
(<cba45> ^action-name PROP45-add-slot2)
(<epset-54> ^delta <a-prop10>)
(<a-prop10> ^op-name |_PA10|)
(<epset-54> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<Q53> ^1 chein-stroop-report-say)
(<Q53> ^2 stroop-report)
(<epset-stroop-report> ^delta <d-op53>)
(<d-op53> ^name propose*chein*stroop-report*say)
(<d-op53> ^const <Q53>)
(<d-op53> ^condition <dc1>)
(<d-op53> ^condition <dc42>)
(<d-op53> ^condition <dc44>)
(<dc44> ^prop-type existence)
(<dc44> ^attr1 slot3)
(<dc44> ^address1 RT)

(<dc44> ^name |_PC44|)

(<Q52> ^1 chein-stroop-report-retrieve)
(<Q52> ^2 s-mapping)
(<Q52> ^3 query)
(<epset-52> ^props-epset-name chein-stroop-report-retrieve)
(<epset-52> ^const <Q52>)
(<epset-52> ^delta <a-prop13>)
(<a-prop13> ^op-name |_PA13|)
(<epset-52> ^delta <a-prop14>)
(<a-prop14> ^op-name |_PA14|)
(<epset-52> ^delta <a-prop15>)
(<a-prop15> ^op-name |_PA15|)

(<epset-stroop-report> ^props-epset-name stroop-report)
(<Q51> ^1 chein-stroop-report-retrieve)
(<Q51> ^2 stroop-report)
(<epset-stroop-report> ^delta <d-op51>)
(<d-op51> ^name propose*chein*stroop-report*retrieve)
(<d-op51> ^const <Q51>)
(<d-op51> ^condition <dc1>)
(<d-op51> ^condition <dc42>)
(<dc42> ^prop-type existence)
(<dc42> ^attr1 Gcontrol)
(<dc42> ^address1 G)

(<dc42> ^name |_PC42|)
(<d-op51> ^condition <dc43>)
(<dc43> ^prop-type negation)
(<dc43> ^attr1 slot3)
(<dc43> ^address1 RT)

(<dc43> ^name |_PC43|)

(<Q50> ^1 chein-stroop-finish)
(<Q50> ^2 finish)
(<epset-50> ^props-epset-name chein-stroop-finish)
(<epset-50> ^const <Q50>)
(<epset-50> ^delta <a-prop6>)
(<a-prop6> ^op-name |_PA6|)
(<epset-50> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<Q49> ^1 chein-stroop-finish)
(<Q49> ^2 stroop)
(<Q49> ^3 last)
(<epset-stroop> ^delta <d-op49>)
(<d-op49> ^name propose*chein*stroop*finish)
(<d-op49> ^const <Q49>)
(<d-op49> ^condition <dc1>)
(<d-op49> ^condition <dc8>)

(<Q48> ^1 chein-stroop-report)
(<Q48> ^2 stroop-report)
(<epset-48> ^props-epset-name chein-stroop-report)
(<epset-48> ^const <Q48>)
(<epset-48> ^delta <a-prop6>)
(<a-prop6> ^op-name |_PA6|)
(<epset-48> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<Q47> ^1 chein-stroop-report)
(<Q47> ^2 stroop)
(<Q47> ^3 reported)
(<epset-stroop> ^delta <d-op47>)
(<d-op47> ^name propose*chein*stroop*report)
(<d-op47> ^const <Q47>)
(<d-op47> ^condition <dc1>)
(<d-op47> ^condition <dc40>)
(<dc40> ^prop-type existence)
(<dc40> ^attr1 slot2)
(<dc40> ^address1 V)

(<dc40> ^name |_PC40|)
(<d-op47> ^condition <dc41>)
(<dc41> ^prop-type inequality)
(<dc41> ^attr1 Gcontrol)
(<dc41> ^attr2 3)
(<dc41> ^address1 G)
(<dc41> ^address2 props$const)

(<dc41> ^name |_PC41|)

(<Q46> ^1 chein-stroop-focus-all)
(<Q46> ^2 get-property)
(<Q46> ^3 both)
(<epset-46> ^props-epset-name chein-stroop-focus-all)
(<epset-46> ^const <Q46>)
(<epset-46> ^delta <a-prop18>)
(<a-prop18> ^op-name |_PA18|)
(<epset-46> ^delta <a-prop19>)
(<a-prop19> ^op-name |_PA19|)

(<Q45> ^1 chein-stroop-focus-all)
(<Q45> ^2 stroop)
(<Q45> ^3 yes)
(<Q45> ^4 prepare)
(<epset-stroop> ^delta <d-op45>)
(<d-op45> ^name propose*chein*stroop*focus-all)
(<d-op45> ^const <Q45>)
(<d-op45> ^condition <dc1>)
(<d-op45> ^condition <dc8>)
(<d-op45> ^condition <dc9>)

(<Q44> ^1 chein-stroop-focus-color)
(<Q44> ^2 get-property)
(<Q44> ^3 color-property)
(<epset-44> ^props-epset-name chein-stroop-focus-color)
(<epset-44> ^const <Q44>)
(<epset-44> ^delta <a-prop18>)
(<a-prop18> ^op-name |_PA18|)
(<epset-44> ^delta <a-prop19>)
(<a-prop19> ^op-name |_PA19|)

(<Q43> ^1 chein-stroop-focus-color)
(<Q43> ^2 stroop)
(<Q43> ^3 yes)
(<Q43> ^4 prepare)
(<epset-stroop> ^delta <d-op43>)
(<d-op43> ^name propose*chein*stroop*focus-color)
(<d-op43> ^const <Q43>)
(<d-op43> ^condition <dc1>)
(<d-op43> ^condition <dc8>)
(<d-op43> ^condition <dc17>)

(<Q42> ^1 chein-stroop-no-focus)
(<Q42> ^2 idle)
(<Q42> ^3 neutral)
(<Q42> ^4 wait)
(<epset-42> ^props-epset-name chein-stroop-no-focus)
(<epset-42> ^const <Q42>)
(<epset-42> ^delta <a-prop6>)
(<a-prop6> ^op-name |_PA6|)
(<epset-42> ^delta <a-prop10>)
(<a-prop10> ^op-name |_PA10|)
(<epset-42> ^delta <a-prop39>)
(<a-prop39> ^op-name |_PA39|)
(<a-prop39> ^prop-apply |_PA39|)
(<a-prop39> ^condition <cba39>)
(<a-prop39> ^item-name |_PA39|)
(<cba39> ^prop-type add)
(<cba39> ^attr1 slot1)
(<cba39> ^attr2 4)
(<cba39> ^address1 AC)
(<cba39> ^address2 props$const)
(<cba39> ^name |_PA39|)
(<cba39> ^action-name PROP39-add-slot1)
(<epset-42> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<Q41> ^1 chein-stroop-no-focus)
(<Q41> ^2 stroop)
(<Q41> ^3 pending)
(<epset-stroop> ^delta <d-op41>)
(<d-op41> ^name propose*chein*stroop*no-focus)
(<d-op41> ^const <Q41>)
(<d-op41> ^condition <dc1>)
(<d-op41> ^condition <dc8>)

(<Q40> ^1 chein-stroop-focus)
(<Q40> ^2 prepare)
(<Q40> ^3 wait)
(<epset-40> ^props-epset-name chein-stroop-focus)
(<epset-40> ^const <Q40>)
(<epset-40> ^delta <a-prop6>)
(<a-prop6> ^op-name |_PA6|)
(<epset-40> ^delta <a-prop24>)
(<a-prop24> ^op-name |_PA24|)
(<epset-40> ^delta <a-prop25>)
(<a-prop25> ^op-name |_PA25|)
(<epset-40> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<epset-stroop> ^props-epset-name stroop)
(<Q39> ^1 chein-stroop-focus)
(<Q39> ^2 stroop)
(<Q39> ^3 pending)
(<epset-stroop> ^delta <d-op39>)
(<d-op39> ^name propose*chein*stroop*focus)
(<d-op39> ^const <Q39>)
(<d-op39> ^condition <dc1>)
(<d-op39> ^condition <dc8>)

(<Q38> ^1 chein-VCWM-report-finish)
(<Q38> ^2 enter)
(<Q38> ^3 finish)
(<epset-38> ^props-epset-name chein-VCWM-report-finish)
(<epset-38> ^const <Q38>)
(<epset-38> ^delta <a-prop18>)
(<a-prop18> ^op-name |_PA18|)
(<epset-38> ^delta <a-prop38>)
(<a-prop38> ^op-name |_PA38|)
(<a-prop38> ^prop-apply |_PA38|)
(<a-prop38> ^condition <cba38>)
(<a-prop38> ^item-name |_PA38|)
(<cba38> ^prop-type add)
(<cba38> ^attr1 Gtask)
(<cba38> ^attr2 3)
(<cba38> ^address1 G)
(<cba38> ^address2 props$const)
(<cba38> ^name |_PA38|)
(<cba38> ^action-name PROP38-add-Gtask)
(<epset-38> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<Q37> ^1 chein-VCWM-report-finish)
(<Q37> ^2 VCWM-report)
(<Q37> ^3 error)
(<Q37> ^4 report)
(<epset-VCWM-report> ^delta <d-op37>)
(<d-op37> ^name propose*chein*VCWM-report*finish)
(<d-op37> ^const <Q37>)
(<d-op37> ^condition <dc1>)
(<d-op37> ^condition <dc21>)
(<d-op37> ^condition <dc17>)

(<Q36> ^1 chein-VCWM-report-report)
(<Q36> ^2 type)
(<Q36> ^3 wm-query)
(<epset-36> ^props-epset-name chein-VCWM-report-report)
(<epset-36> ^const <Q36>)
(<epset-36> ^delta <a-prop18>)
(<a-prop18> ^op-name |_PA18|)
(<epset-36> ^delta <a-prop36>)
(<a-prop36> ^op-name |_PA36|)
(<a-prop36> ^prop-apply |_PA36|)
(<a-prop36> ^condition <cba36>)
(<a-prop36> ^item-name |_PA36|)
(<cba36> ^prop-type add)
(<cba36> ^attr1 slot2)
(<cba36> ^attr2 slot1)
(<cba36> ^address1 AC)
(<cba36> ^address2 RT)
(<cba36> ^name |_PA36|)
(<cba36> ^action-name PROP36-add-slot2)
(<epset-36> ^delta <a-prop32>)
(<a-prop32> ^op-name |_PA32|)
(<epset-36> ^delta <a-prop37>)
(<a-prop37> ^op-name |_PA37|)
(<a-prop37> ^prop-apply |_PA37|)
(<a-prop37> ^condition <cba37>)
(<a-prop37> ^item-name |_PA37|)
(<cba37> ^prop-type add)
(<cba37> ^attr1 q-type)
(<cba37> ^attr2 3)
(<cba37> ^address1 Q)
(<cba37> ^address2 props$const)
(<cba37> ^name |_PA37|)
(<cba37> ^action-name PROP37-add-q-type)

(<Q35> ^1 chein-VCWM-report-report)
(<Q35> ^2 VCWM-report)
(<Q35> ^3 error)
(<Q35> ^4 report)
(<epset-VCWM-report> ^delta <d-op35>)
(<d-op35> ^name propose*chein*VCWM-report*report)
(<d-op35> ^const <Q35>)
(<d-op35> ^condition <dc1>)
(<d-op35> ^condition <dc35>)
(<dc35> ^prop-type inequality)
(<dc35> ^attr1 rt-result)
(<dc35> ^attr2 3)
(<dc35> ^address1 smem)
(<dc35> ^address2 props$const)

(<dc35> ^name |_PC35|)
(<d-op35> ^condition <dc17>)

(<Q34> ^1 chein-VCWM-report-start)
(<Q34> ^2 retrieve)
(<Q34> ^3 report)
(<epset-34> ^props-epset-name chein-VCWM-report-start)
(<epset-34> ^const <Q34>)
(<epset-34> ^delta <a-prop29>)
(<a-prop29> ^op-name |_PA29|)
(<epset-34> ^delta <a-prop30>)
(<a-prop30> ^op-name |_PA30|)
(<epset-34> ^delta <a-prop10>)
(<a-prop10> ^op-name |_PA10|)

(<epset-VCWM-report> ^props-epset-name VCWM-report)
(<Q33> ^1 chein-VCWM-report-start)
(<Q33> ^2 VCWM-report)
(<Q33> ^3 start-report)
(<epset-VCWM-report> ^delta <d-op33>)
(<d-op33> ^name propose*chein*VCWM-report*start)
(<d-op33> ^const <Q33>)
(<d-op33> ^condition <dc1>)
(<d-op33> ^condition <dc12>)

(<Q32> ^1 chein-prepare-stroop-focus-color)
(<Q32> ^2 get-property)
(<Q32> ^3 color-property)
(<epset-32> ^props-epset-name chein-prepare-stroop-focus-color)
(<epset-32> ^const <Q32>)
(<epset-32> ^delta <a-prop18>)
(<a-prop18> ^op-name |_PA18|)
(<epset-32> ^delta <a-prop19>)
(<a-prop19> ^op-name |_PA19|)

(<Q31> ^1 chein-prepare-stroop-focus-color)
(<Q31> ^2 prepare)
(<Q31> ^3 yes)
(<epset-prepare> ^delta <d-op31>)
(<d-op31> ^name propose*chein*prepare*stroop-focus-color)
(<d-op31> ^const <Q31>)
(<d-op31> ^condition <dc1>)
(<d-op31> ^condition <dc8>)
(<d-op31> ^condition <dc34>)
(<dc34> ^prop-type equality)
(<dc34> ^attr1 Gcontrol)
(<dc34> ^attr2 2)
(<dc34> ^address1 G)
(<dc34> ^address2 props$const)

(<dc34> ^name |_PC34|)

(<Q30> ^1 chein-prepare-VCWM-restart)
(<Q30> ^2 retrieve)
(<epset-30> ^props-epset-name chein-prepare-VCWM-restart)
(<epset-30> ^const <Q30>)
(<epset-30> ^delta <a-prop29>)
(<a-prop29> ^op-name |_PA29|)
(<epset-30> ^delta <a-prop30>)
(<a-prop30> ^op-name |_PA30|)

(<Q29> ^1 chein-prepare-VCWM-restart)
(<Q29> ^2 prepare)
(<Q29> ^3 error)
(<epset-prepare> ^delta <d-op29>)
(<d-op29> ^name propose*chein*prepare*VCWM-restart)
(<d-op29> ^const <Q29>)
(<d-op29> ^condition <dc1>)
(<d-op29> ^condition <dc21>)

(<Q28> ^1 chein-prepare-VCWM-next)
(<Q28> ^2 wm-query)
(<epset-28> ^props-epset-name chein-prepare-VCWM-next)
(<epset-28> ^const <Q28>)
(<epset-28> ^delta <a-prop32>)
(<a-prop32> ^op-name |_PA32|)
(<a-prop32> ^prop-apply |_PA32|)
(<a-prop32> ^condition <cba32>)
(<a-prop32> ^item-name |_PA32|)
(<cba32> ^prop-type add)
(<cba32> ^attr1 root)
(<cba32> ^attr2 RTid)
(<cba32> ^address1 Q)
(<cba32> ^address2 RT)
(<cba32> ^name |_PA32|)
(<cba32> ^action-name PROP32-add-root)
(<epset-28> ^delta <a-prop33>)
(<a-prop33> ^op-name |_PA33|)
(<a-prop33> ^prop-apply |_PA33|)
(<a-prop33> ^condition <cba33>)
(<a-prop33> ^item-name |_PA33|)
(<cba33> ^prop-type add)
(<cba33> ^attr1 q-type)
(<cba33> ^attr2 2)
(<cba33> ^address1 Q)
(<cba33> ^address2 props$const)
(<cba33> ^name |_PA33|)
(<cba33> ^action-name PROP33-add-q-type)

(<Q27> ^1 chein-prepare-VCWM-next)
(<Q27> ^2 prepare)
(<Q27> ^3 error)
(<epset-prepare> ^delta <d-op27>)
(<d-op27> ^name propose*chein*prepare*VCWM-next)
(<d-op27> ^const <Q27>)
(<d-op27> ^condition <dc1>)
(<d-op27> ^condition <dc31>)
(<dc31> ^prop-type negation)
(<dc31> ^attr1 rt-result)
(<dc31> ^attr2 3)
(<dc31> ^address1 smem)
(<dc31> ^address2 props$const)

(<dc31> ^name |_PC31|)

(<Q26> ^1 chein-prepare-VCWM-start)
(<Q26> ^2 retrieve)
(<epset-26> ^props-epset-name chein-prepare-VCWM-start)
(<epset-26> ^const <Q26>)
(<epset-26> ^delta <a-prop29>)
(<a-prop29> ^op-name |_PA29|)
(<a-prop29> ^prop-apply |_PA29|)
(<a-prop29> ^condition <cba29>)
(<a-prop29> ^item-name |_PA29|)
(<cba29> ^prop-type add)
(<cba29> ^attr1 q-type)
(<cba29> ^attr2 2)
(<cba29> ^address1 Q)
(<cba29> ^address2 props$const)
(<cba29> ^name |_PA29|)
(<cba29> ^action-name PROP29-add-q-type)
(<epset-26> ^delta <a-prop30>)
(<a-prop30> ^op-name |_PA30|)
(<a-prop30> ^prop-apply |_PA30|)
(<a-prop30> ^condition <cba30>)
(<a-prop30> ^item-name |_PA30|)
(<cba30> ^prop-type add)
(<cba30> ^attr1 retrieve)
(<cba30> ^attr2 Gtop)
(<cba30> ^address1 Q)
(<cba30> ^address2 G)
(<cba30> ^name |_PA30|)
(<cba30> ^action-name PROP30-add-retrieve)

(<epset-prepare> ^props-epset-name prepare)
(<Q25> ^1 chein-prepare-VCWM-start)
(<Q25> ^2 prepare)
(<epset-prepare> ^delta <d-op25>)
(<d-op25> ^name propose*chein*prepare*VCWM-start)
(<d-op25> ^const <Q25>)
(<d-op25> ^condition <dc1>)
(<d-op25> ^condition <dc11>)

(<Q24> ^1 chein-VCWM-letter-store-dm)
(<Q24> ^2 letter-stored)
(<Q24> ^3 wait)
(<epset-24> ^props-epset-name chein-VCWM-letter-store-dm)
(<epset-24> ^const <Q24>)
(<epset-24> ^delta <a-prop27>)
(<a-prop27> ^op-name |_PA27|)
(<a-prop27> ^prop-apply |_PA27|)
(<a-prop27> ^condition <cba27>)
(<a-prop27> ^item-name |_PA27|)
(<cba27> ^prop-type add)
(<cba27> ^attr1 slot1)
(<cba27> ^attr2 slot2)
(<cba27> ^address1 NW)
(<cba27> ^address2 V)
(<cba27> ^name |_PA27|)
(<cba27> ^action-name PROP27-add-slot1)
(<epset-24> ^delta <a-prop28>)
(<a-prop28> ^op-name |_PA28|)
(<a-prop28> ^prop-apply |_PA28|)
(<a-prop28> ^condition <cba28>)
(<a-prop28> ^item-name |_PA28|)
(<cba28> ^prop-type add)
(<cba28> ^attr1 WMprev)
(<cba28> ^attr2 WM)
(<cba28> ^address1 NW)
(<cba28> ^address2 props$rootstate)
(<cba28> ^name |_PA28|)
(<cba28> ^action-name PROP28-add-WMprev)
(<epset-24> ^delta <a-prop24>)
(<a-prop24> ^op-name |_PA24|)
(<epset-24> ^delta <a-prop25>)
(<a-prop25> ^op-name |_PA25|)

(<Q23> ^1 chein-VCWM-letter-store-dm)
(<Q23> ^2 VCWM-letter)
(<epset-VCWM-letter> ^delta <d-op23>)
(<d-op23> ^name propose*chein*VCWM-letter*store-dm)
(<d-op23> ^const <Q23>)
(<d-op23> ^condition <dc1>)
(<d-op23> ^condition <dc26>)
(<dc26> ^prop-type existence)
(<dc26> ^attr1 slot1)
(<dc26> ^address1 WM)

(<dc26> ^name |_PC26|)

(<Q22> ^1 chein-VCWM-letter-store-wm)
(<Q22> ^2 letter-stored)
(<Q22> ^3 wait)
(<epset-22> ^props-epset-name chein-VCWM-letter-store-wm)
(<epset-22> ^const <Q22>)
(<epset-22> ^delta <a-prop23>)
(<a-prop23> ^op-name |_PA23|)
(<a-prop23> ^prop-apply |_PA23|)
(<a-prop23> ^condition <cba23>)
(<a-prop23> ^item-name |_PA23|)
(<cba23> ^prop-type add)
(<cba23> ^attr1 slot1)
(<cba23> ^attr2 slot2)
(<cba23> ^address1 WM)
(<cba23> ^address2 V)
(<cba23> ^name |_PA23|)
(<cba23> ^action-name PROP23-add-slot1)
(<epset-22> ^delta <a-prop24>)
(<a-prop24> ^op-name |_PA24|)
(<a-prop24> ^prop-apply |_PA24|)
(<a-prop24> ^condition <cba24>)
(<a-prop24> ^item-name |_PA24|)
(<cba24> ^prop-type add)
(<cba24> ^attr1 Gcontrol)
(<cba24> ^attr2 2)
(<cba24> ^address1 G)
(<cba24> ^address2 props$const)
(<cba24> ^name |_PA24|)
(<cba24> ^action-name PROP24-add-Gcontrol)
(<epset-22> ^delta <a-prop25>)
(<a-prop25> ^op-name |_PA25|)
(<a-prop25> ^prop-apply |_PA25|)
(<a-prop25> ^condition <cba25>)
(<a-prop25> ^item-name |_PA25|)
(<cba25> ^prop-type add)
(<cba25> ^attr1 slot1)
(<cba25> ^attr2 3)
(<cba25> ^address1 AC)
(<cba25> ^address2 props$const)
(<cba25> ^name |_PA25|)
(<cba25> ^action-name PROP25-add-slot1)

(<epset-VCWM-letter> ^props-epset-name VCWM-letter)
(<Q21> ^1 chein-VCWM-letter-store-wm)
(<Q21> ^2 VCWM-letter)
(<epset-VCWM-letter> ^delta <d-op21>)
(<d-op21> ^name propose*chein*VCWM-letter*store-wm)
(<d-op21> ^const <Q21>)
(<d-op21> ^condition <dc1>)
(<d-op21> ^condition <dc22>)
(<dc22> ^prop-type negation)
(<dc22> ^attr1 slot1)
(<dc22> ^address1 WM)

(<dc22> ^name |_PC22|)

(<Q20> ^1 chein-VCWM-word-fail)
(<Q20> ^2 type)
(<Q20> ^3 N)
(<Q20> ^4 answered)
(<epset-20> ^props-epset-name chein-VCWM-word-fail)
(<epset-20> ^const <Q20>)
(<epset-20> ^delta <a-prop18>)
(<a-prop18> ^op-name |_PA18|)
(<epset-20> ^delta <a-prop19>)
(<a-prop19> ^op-name |_PA19|)
(<epset-20> ^delta <a-prop20>)
(<a-prop20> ^op-name |_PA20|)
(<epset-20> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<Q19> ^1 chein-VCWM-word-fail)
(<Q19> ^2 VCWM-word)
(<Q19> ^3 error)
(<Q19> ^4 word-dec)
(<epset-VCWM-word> ^delta <d-op19>)
(<d-op19> ^name propose*chein*VCWM-word*fail)
(<d-op19> ^const <Q19>)
(<d-op19> ^condition <dc1>)
(<d-op19> ^condition <dc21>)
(<dc21> ^prop-type equality)
(<dc21> ^attr1 rt-result)
(<dc21> ^attr2 3)
(<dc21> ^address1 smem)
(<dc21> ^address2 props$const)

(<dc21> ^name |_PC21|)
(<d-op19> ^condition <dc17>)

(<Q18> ^1 chein-VCWM-word-success)
(<Q18> ^2 type)
(<Q18> ^3 Y)
(<Q18> ^4 answered)
(<epset-18> ^props-epset-name chein-VCWM-word-success)
(<epset-18> ^const <Q18>)
(<epset-18> ^delta <a-prop18>)
(<a-prop18> ^op-name |_PA18|)
(<a-prop18> ^prop-apply |_PA18|)
(<a-prop18> ^condition <cba18>)
(<a-prop18> ^item-name |_PA18|)
(<cba18> ^prop-type add)
(<cba18> ^attr1 slot1)
(<cba18> ^attr2 2)
(<cba18> ^address1 AC)
(<cba18> ^address2 props$const)
(<cba18> ^name |_PA18|)
(<cba18> ^action-name PROP18-add-slot1)
(<epset-18> ^delta <a-prop19>)
(<a-prop19> ^op-name |_PA19|)
(<a-prop19> ^prop-apply |_PA19|)
(<a-prop19> ^condition <cba19>)
(<a-prop19> ^item-name |_PA19|)
(<cba19> ^prop-type add)
(<cba19> ^attr1 slot2)
(<cba19> ^attr2 3)
(<cba19> ^address1 AC)
(<cba19> ^address2 props$const)
(<cba19> ^name |_PA19|)
(<cba19> ^action-name PROP19-add-slot2)
(<epset-18> ^delta <a-prop20>)
(<a-prop20> ^op-name |_PA20|)
(<a-prop20> ^prop-apply |_PA20|)
(<a-prop20> ^condition <cba20>)
(<a-prop20> ^item-name |_PA20|)
(<cba20> ^prop-type add)
(<cba20> ^attr1 Gcontrol)
(<cba20> ^attr2 4)
(<cba20> ^address1 G)
(<cba20> ^address2 props$const)
(<cba20> ^name |_PA20|)
(<cba20> ^action-name PROP20-add-Gcontrol)
(<epset-18> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<Q17> ^1 chein-VCWM-word-success)
(<Q17> ^2 VCWM-word)
(<Q17> ^3 yes)
(<Q17> ^4 word-dec)
(<epset-VCWM-word> ^delta <d-op17>)
(<d-op17> ^name propose*chein*VCWM-word*success)
(<d-op17> ^const <Q17>)
(<d-op17> ^condition <dc1>)
(<d-op17> ^condition <dc16>)
(<dc16> ^prop-type equality)
(<dc16> ^attr1 slot3)
(<dc16> ^attr2 3)
(<dc16> ^address1 RT)
(<dc16> ^address2 props$const)

(<dc16> ^name |_PC16|)
(<d-op17> ^condition <dc17>)
(<dc17> ^prop-type equality)
(<dc17> ^attr1 Gcontrol)
(<dc17> ^attr2 4)
(<dc17> ^address1 G)
(<dc17> ^address2 props$const)

(<dc17> ^name |_PC17|)

(<Q16> ^1 chein-VCWM-word-retrieve)
(<Q16> ^2 is-word)
(<Q16> ^3 query)
(<epset-16> ^props-epset-name chein-VCWM-word-retrieve)
(<epset-16> ^const <Q16>)
(<epset-16> ^delta <a-prop13>)
(<a-prop13> ^op-name |_PA13|)
(<a-prop13> ^prop-apply |_PA13|)
(<a-prop13> ^condition <cba13>)
(<a-prop13> ^item-name |_PA13|)
(<cba13> ^prop-type add)
(<cba13> ^attr1 q-type)
(<cba13> ^attr2 3)
(<cba13> ^address1 Q)
(<cba13> ^address2 props$const)
(<cba13> ^name |_PA13|)
(<cba13> ^action-name PROP13-add-q-type)
(<epset-16> ^delta <a-prop14>)
(<a-prop14> ^op-name |_PA14|)
(<a-prop14> ^prop-apply |_PA14|)
(<a-prop14> ^condition <cba14>)
(<a-prop14> ^item-name |_PA14|)
(<cba14> ^prop-type add)
(<cba14> ^attr1 slot1)
(<cba14> ^attr2 2)
(<cba14> ^address1 Q)
(<cba14> ^address2 props$const)
(<cba14> ^name |_PA14|)
(<cba14> ^action-name PROP14-add-slot1)
(<epset-16> ^delta <a-prop15>)
(<a-prop15> ^op-name |_PA15|)
(<a-prop15> ^prop-apply |_PA15|)
(<a-prop15> ^condition <cba15>)
(<a-prop15> ^item-name |_PA15|)
(<cba15> ^prop-type add)
(<cba15> ^attr1 slot2)
(<cba15> ^attr2 slot2)
(<cba15> ^address1 Q)
(<cba15> ^address2 V)
(<cba15> ^name |_PA15|)
(<cba15> ^action-name PROP15-add-slot2)

(<epset-VCWM-word> ^props-epset-name VCWM-word)
(<Q15> ^1 chein-VCWM-word-retrieve)
(<Q15> ^2 VCWM-word)
(<Q15> ^3 word-dec)
(<epset-VCWM-word> ^delta <d-op15>)
(<d-op15> ^name propose*chein*VCWM-word*retrieve)
(<d-op15> ^const <Q15>)
(<d-op15> ^condition <dc1>)
(<d-op15> ^condition <dc11>)
(<dc11> ^prop-type negation)
(<dc11> ^attr1 rt-result)
(<dc11> ^address1 smem)

(<dc11> ^name |_PC11|)
(<d-op15> ^condition <dc12>)
(<dc12> ^prop-type equality)
(<dc12> ^attr1 Gcontrol)
(<dc12> ^attr2 3)
(<dc12> ^address1 G)
(<dc12> ^address2 props$const)

(<dc12> ^name |_PC12|)

(<Q14> ^1 chein-VCWM-report)
(<Q14> ^2 VCWM-report)
(<Q14> ^3 start-report)
(<epset-14> ^props-epset-name chein-VCWM-report)
(<epset-14> ^const <Q14>)
(<epset-14> ^delta <a-prop6>)
(<a-prop6> ^op-name |_PA6|)
(<epset-14> ^delta <a-prop10>)
(<a-prop10> ^op-name |_PA10|)
(<epset-14> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<Q13> ^1 chein-VCWM-report)
(<Q13> ^2 VCWM)
(<Q13> ^3 report)
(<epset-VCWM> ^delta <d-op13>)
(<d-op13> ^name propose*chein*VCWM*report)
(<d-op13> ^const <Q13>)
(<d-op13> ^condition <dc1>)
(<d-op13> ^condition <dc8>)

(<Q12> ^1 chein-VCWM-wait)
(<Q12> ^2 idle)
(<epset-12> ^props-epset-name chein-VCWM-wait)
(<epset-12> ^const <Q12>)
(<epset-12> ^delta <a-prop6>)
(<a-prop6> ^op-name |_PA6|)
(<epset-12> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<Q11> ^1 chein-VCWM-wait)
(<Q11> ^2 VCWM)
(<Q11> ^3 pending)
(<epset-VCWM> ^delta <d-op11>)
(<d-op11> ^name propose*chein*VCWM*wait)
(<d-op11> ^const <Q11>)
(<d-op11> ^condition <dc1>)
(<d-op11> ^condition <dc8>)

(<Q10> ^1 chein-VCWM-rehearse)
(<Q10> ^2 prepare)
(<epset-10> ^props-epset-name chein-VCWM-rehearse)
(<epset-10> ^const <Q10>)
(<epset-10> ^delta <a-prop6>)
(<a-prop6> ^op-name |_PA6|)
(<epset-10> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<Q9> ^1 chein-VCWM-rehearse)
(<Q9> ^2 VCWM)
(<Q9> ^3 pending)
(<epset-VCWM> ^delta <d-op9>)
(<d-op9> ^name propose*chein*VCWM*rehearse)
(<d-op9> ^const <Q9>)
(<d-op9> ^condition <dc1>)
(<d-op9> ^condition <dc8>)

(<Q8> ^1 chein-VCWM-letter)
(<Q8> ^2 VCWM-letter)
(<Q8> ^3 letter-dec)
(<epset-8> ^props-epset-name chein-VCWM-letter)
(<epset-8> ^const <Q8>)
(<epset-8> ^delta <a-prop6>)
(<a-prop6> ^op-name |_PA6|)
(<epset-8> ^delta <a-prop10>)
(<a-prop10> ^op-name |_PA10|)
(<epset-8> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<Q7> ^1 chein-VCWM-letter)
(<Q7> ^2 VCWM)
(<Q7> ^3 letter)
(<Q7> ^4 letter-stored)
(<epset-VCWM> ^delta <d-op7>)
(<d-op7> ^name propose*chein*VCWM*letter)
(<d-op7> ^const <Q7>)
(<d-op7> ^condition <dc1>)
(<d-op7> ^condition <dc8>)
(<d-op7> ^condition <dc9>)

(<Q6> ^1 chein-VCWM-word)
(<Q6> ^2 VCWM-word)
(<Q6> ^3 word-dec)
(<epset-6> ^props-epset-name chein-VCWM-word)
(<epset-6> ^const <Q6>)
(<epset-6> ^delta <a-prop6>)
(<a-prop6> ^op-name |_PA6|)
(<epset-6> ^delta <a-prop10>)
(<a-prop10> ^op-name |_PA10|)
(<a-prop10> ^prop-apply |_PA10|)
(<a-prop10> ^condition <cba10>)
(<a-prop10> ^item-name |_PA10|)
(<cba10> ^prop-type add)
(<cba10> ^attr1 Gcontrol)
(<cba10> ^attr2 3)
(<cba10> ^address1 G)
(<cba10> ^address2 props$const)
(<cba10> ^name |_PA10|)
(<cba10> ^action-name PROP10-add-Gcontrol)
(<epset-6> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)

(<epset-VCWM> ^props-epset-name VCWM)
(<Q5> ^1 chein-VCWM-word)
(<Q5> ^2 VCWM)
(<Q5> ^3 word)
(<Q5> ^4 word-answered)
(<epset-VCWM> ^delta <d-op5>)
(<d-op5> ^name propose*chein*VCWM*word)
(<d-op5> ^const <Q5>)
(<d-op5> ^condition <dc1>)
(<d-op5> ^condition <dc8>)
(<dc8> ^prop-type equality)
(<dc8> ^attr1 slot1)
(<dc8> ^attr2 3)
(<dc8> ^address1 V)
(<dc8> ^address2 props$const)

(<dc8> ^name |_PC8|)
(<d-op5> ^condition <dc9>)
(<dc9> ^prop-type inequality)
(<dc9> ^attr1 Gcontrol)
(<dc9> ^attr2 4)
(<dc9> ^address1 G)
(<dc9> ^address2 props$const)

(<dc9> ^name |_PC9|)

(<Q4> ^1 chein-verbal-CWM-ready)
(<Q4> ^2 VCWM)
(<epset-4> ^props-epset-name chein-verbal-CWM-ready)
(<epset-4> ^const <Q4>)
(<epset-4> ^delta <a-prop6>)
(<a-prop6> ^op-name |_PA6|)
(<a-prop6> ^prop-apply |_PA6|)
(<a-prop6> ^condition <cba6>)
(<a-prop6> ^item-name |_PA6|)
(<cba6> ^prop-type add)
(<cba6> ^attr1 Gtask)
(<cba6> ^attr2 2)
(<cba6> ^address1 G)
(<cba6> ^address2 props$const)
(<cba6> ^name |_PA6|)
(<cba6> ^action-name PROP6-add-Gtask)
(<epset-4> ^delta <a-prop7>)
(<a-prop7> ^op-name |_PA7|)
(<a-prop7> ^prop-apply |_PA7|)
(<a-prop7> ^condition <cba7>)
(<a-prop7> ^item-name |_PA7|)
(<cba7> ^prop-type add)
(<cba7> ^attr1 clear-rt)
(<cba7> ^attr2 1)
(<cba7> ^address1 flags)
(<cba7> ^address2 props$const)
(<cba7> ^name |_PA7|)
(<cba7> ^action-name PROP7-add-clear-rt)

(<Q3> ^1 chein-verbal-CWM-ready)
(<Q3> ^2 verbal-CWM)
(<epset-verbal-CWM> ^delta <d-op3>)
(<d-op3> ^name propose*chein*verbal-CWM*ready)
(<d-op3> ^const <Q3>)
(<d-op3> ^condition <dc1>)
(<d-op3> ^condition <dc5>)
(<dc5> ^prop-type existence)
(<dc5> ^attr1 Gtop)
(<dc5> ^address1 G)

(<dc5> ^name |_PC5|)

(<Q2> ^1 chein-verbal-CWM-init)
(<epset-2> ^props-epset-name chein-verbal-CWM-init)
(<epset-2> ^const <Q2>)
(<epset-2> ^delta <a-prop4>)
(<a-prop4> ^op-name |_PA4|)
(<a-prop4> ^prop-apply |_PA4|)
(<a-prop4> ^condition <cba4>)
(<a-prop4> ^item-name |_PA4|)
(<cba4> ^prop-type add)
(<cba4> ^attr1 Gtop)
(<cba4> ^attr2 WM)
(<cba4> ^address1 G)
(<cba4> ^address2 props$rootstate)
(<cba4> ^name |_PA4|)
(<cba4> ^action-name PROP4-add-Gtop)

(<epset-verbal-CWM> ^props-epset-name verbal-CWM)
(<Q1> ^1 chein-verbal-CWM-init)
(<Q1> ^2 verbal-CWM)
(<epset-verbal-CWM> ^delta <d-op1>)
(<d-op1> ^name propose*chein*verbal-CWM*init)
(<d-op1> ^const <Q1>)
(<d-op1> ^condition <dc1>)
(<dc1> ^prop-type equality)
(<dc1> ^attr1 Gtask)
(<dc1> ^attr2 2)
(<dc1> ^address1 G)
(<dc1> ^address2 props$const)

(<dc1> ^name |_PC1|)
(<d-op1> ^condition <dc2>)
(<dc2> ^prop-type negation)
(<dc2> ^attr1 Gtop)
(<dc2> ^address1 G)

(<dc2> ^name |_PC2|)
(<d-op1> ^condition <dc3>)
(<dc3> ^prop-type negation)
(<dc3> ^attr1 Gcontrol)
(<dc3> ^address1 G)

(<dc3> ^name |_PC3|)

}
