#####
# THIS FILE TRANSLATES THE PROPS INSTRUCTIONS
# FROM 'chein_agent.prop' INTO SMEM INSTRUCTIONS USABLE
# BY A PROPS SOAR AGENT.
#####

# BEGIN INSTRUCTIONS

smem --add {
(<S48> ^name apply*chein*stroop*finish)
(<Z48> ^name apply*chein*stroop*finish)
(<Z48> ^lti-name |_Z48|)
(<Z48> ^prop-type |instruction|)
(<Z48> ^const <Q48>)
(<Z48> ^cond-count 1)
(<Z48> ^act-count 2)
(<Z48> ^spread-source <S48>)
(<Q48> ^1 chein-stroop-finish)
(<Q48> ^2 finish)
(<Z48> ^condition |_P4|)
(<Z48> ^prop-link <P4>)
(<Z48> ^cond-spread-source <CueZ48P4>)
(<CueZ48P4> ^props-instruction-set <S48>)
(<CueZ48P4> ^name |_P4|)
(<S48> ^condition <ScondZ48P4>)
(<ScondZ48P4> ^props-instructions <Z48>)
(<ScondZ48P4> ^name |_P4|)
(<Z48> ^flag |o-supported|)
(<Z48> ^action |_P37|)
(<Z48> ^prop-link <P37>)
(<P37> ^lti-name |_P37|)
(<P37> ^prop-type add)
(<P37> ^attr1 Gtask)
(<P37> ^id2 props$const)
(<P37> ^attr2 2)
(<P37> ^sub1 |_U54|)
(<P37> ^sub1-link <U54>)
(<U54> ^lti-name |_U54|)
(<U54> ^curr-id props$rootstate)
(<U54> ^target-arg id1)
(<U54> ^depth 1)
(<U54> ^chain-attr G)
(<U54> ^chain-next |done|)
(<Z48> ^action |_P15|)
(<Z48> ^prop-link <P15>)

(<S47> ^name propose*chein*stroop*finish)
(<Z47> ^name propose*chein*stroop*finish)
(<Z47> ^lti-name |_Z47|)
(<Z47> ^prop-type |instruction|)
(<Z47> ^const <Q47>)
(<Z47> ^cond-count 2)
(<Z47> ^act-count 1)
(<Z47> ^spread-source <S47>)
(<Q47> ^1 chein-stroop-finish)
(<Q47> ^2 stroop)
(<Q47> ^3 last)
(<Z47> ^condition |_P1|)
(<Z47> ^prop-link <P1>)
(<Z47> ^cond-spread-source <CueZ47P1>)
(<CueZ47P1> ^props-instruction-set <S47>)
(<CueZ47P1> ^name |_P1|)
(<S47> ^condition <ScondZ47P1>)
(<ScondZ47P1> ^props-instructions <Z47>)
(<ScondZ47P1> ^name |_P1|)
(<Z47> ^condition |_P7|)
(<Z47> ^prop-link <P7>)
(<Z47> ^cond-spread-source <CueZ47P7>)
(<CueZ47P7> ^props-instruction-set <S47>)
(<CueZ47P7> ^name |_P7|)
(<S47> ^condition <ScondZ47P7>)
(<ScondZ47P7> ^props-instructions <Z47>)
(<ScondZ47P7> ^name |_P7|)
(<Z47> ^action |_P3|)
(<Z47> ^prop-link <P3>)

(<S46> ^name apply*chein*stroop*idle*wait)
(<Z46> ^name apply*chein*stroop*idle*wait)
(<Z46> ^lti-name |_Z46|)
(<Z46> ^prop-type |instruction|)
(<Z46> ^const <Q46>)
(<Z46> ^cond-count 1)
(<Z46> ^act-count 1)
(<Z46> ^spread-source <S46>)
(<Q46> ^1 chein-stroop-idle-wait)
(<Q46> ^2 wait)
(<Z46> ^condition |_P4|)
(<Z46> ^prop-link <P4>)
(<Z46> ^cond-spread-source <CueZ46P4>)
(<CueZ46P4> ^props-instruction-set <S46>)
(<CueZ46P4> ^name |_P4|)
(<S46> ^condition <ScondZ46P4>)
(<ScondZ46P4> ^props-instructions <Z46>)
(<ScondZ46P4> ^name |_P4|)
(<Z46> ^flag |o-supported|)
(<Z46> ^action |_P9|)
(<Z46> ^prop-link <P9>)

(<S45> ^name propose*chein*stroop*idle*wait)
(<Z45> ^name propose*chein*stroop*idle*wait)
(<Z45> ^lti-name |_Z45|)
(<Z45> ^prop-type |instruction|)
(<Z45> ^const <Q45>)
(<Z45> ^cond-count 2)
(<Z45> ^act-count 1)
(<Z45> ^spread-source <S45>)
(<Q45> ^1 chein-stroop-idle-wait)
(<Q45> ^2 stroop)
(<Q45> ^3 pending)
(<Z45> ^condition |_P1|)
(<Z45> ^prop-link <P1>)
(<Z45> ^cond-spread-source <CueZ45P1>)
(<CueZ45P1> ^props-instruction-set <S45>)
(<CueZ45P1> ^name |_P1|)
(<S45> ^condition <ScondZ45P1>)
(<ScondZ45P1> ^props-instructions <Z45>)
(<ScondZ45P1> ^name |_P1|)
(<Z45> ^condition |_P7|)
(<Z45> ^prop-link <P7>)
(<Z45> ^cond-spread-source <CueZ45P7>)
(<CueZ45P7> ^props-instruction-set <S45>)
(<CueZ45P7> ^name |_P7|)
(<S45> ^condition <ScondZ45P7>)
(<ScondZ45P7> ^props-instructions <Z45>)
(<ScondZ45P7> ^name |_P7|)
(<Z45> ^action |_P3|)
(<Z45> ^prop-link <P3>)

(<S44> ^name apply*chein*stroop*idle*start)
(<Z44> ^name apply*chein*stroop*idle*start)
(<Z44> ^lti-name |_Z44|)
(<Z44> ^prop-type |instruction|)
(<Z44> ^const <Q44>)
(<Z44> ^cond-count 1)
(<Z44> ^act-count 2)
(<Z44> ^spread-source <S44>)
(<Q44> ^1 chein-stroop-idle-start)
(<Q44> ^2 prepare)
(<Q44> ^3 wait)
(<Z44> ^condition |_P4|)
(<Z44> ^prop-link <P4>)
(<Z44> ^cond-spread-source <CueZ44P4>)
(<CueZ44P4> ^props-instruction-set <S44>)
(<CueZ44P4> ^name |_P4|)
(<S44> ^condition <ScondZ44P4>)
(<ScondZ44P4> ^props-instructions <Z44>)
(<ScondZ44P4> ^name |_P4|)
(<Z44> ^flag |o-supported|)
(<Z44> ^action |_P5|)
(<Z44> ^prop-link <P5>)
(<Z44> ^action |_P32|)
(<Z44> ^prop-link <P32>)

(<S43> ^name propose*chein*stroop*idle*start)
(<Z43> ^name propose*chein*stroop*idle*start)
(<Z43> ^lti-name |_Z43|)
(<Z43> ^prop-type |instruction|)
(<Z43> ^const <Q43>)
(<Z43> ^cond-count 3)
(<Z43> ^act-count 1)
(<Z43> ^spread-source <S43>)
(<Q43> ^1 chein-stroop-idle-start)
(<Q43> ^2 stroop)
(<Q43> ^3 pending)
(<Q43> ^4 neutral)
(<Z43> ^condition |_P1|)
(<Z43> ^prop-link <P1>)
(<Z43> ^cond-spread-source <CueZ43P1>)
(<CueZ43P1> ^props-instruction-set <S43>)
(<CueZ43P1> ^name |_P1|)
(<S43> ^condition <ScondZ43P1>)
(<ScondZ43P1> ^props-instructions <Z43>)
(<ScondZ43P1> ^name |_P1|)
(<Z43> ^condition |_P7|)
(<Z43> ^prop-link <P7>)
(<Z43> ^cond-spread-source <CueZ43P7>)
(<CueZ43P7> ^props-instruction-set <S43>)
(<CueZ43P7> ^name |_P7|)
(<S43> ^condition <ScondZ43P7>)
(<ScondZ43P7> ^props-instructions <Z43>)
(<ScondZ43P7> ^name |_P7|)
(<Z43> ^condition |_P8|)
(<Z43> ^prop-link <P8>)
(<Z43> ^cond-spread-source <CueZ43P8>)
(<CueZ43P8> ^props-instruction-set <S43>)
(<CueZ43P8> ^name |_P8|)
(<S43> ^condition <ScondZ43P8>)
(<ScondZ43P8> ^props-instructions <Z43>)
(<ScondZ43P8> ^name |_P8|)
(<Z43> ^action |_P3|)
(<Z43> ^prop-link <P3>)

(<S42> ^name apply*chein*stroop*report*say)
(<Z42> ^name apply*chein*stroop*report*say)
(<Z42> ^lti-name |_Z42|)
(<Z42> ^prop-type |instruction|)
(<Z42> ^const <Q42>)
(<Z42> ^cond-count 1)
(<Z42> ^act-count 4)
(<Z42> ^spread-source <S42>)
(<Q42> ^1 chein-stroop-report-say)
(<Q42> ^2 say)
(<Q42> ^3 neutral)
(<Z42> ^condition |_P4|)
(<Z42> ^prop-link <P4>)
(<Z42> ^cond-spread-source <CueZ42P4>)
(<CueZ42P4> ^props-instruction-set <S42>)
(<CueZ42P4> ^name |_P4|)
(<S42> ^condition <ScondZ42P4>)
(<ScondZ42P4> ^props-instructions <Z42>)
(<ScondZ42P4> ^name |_P4|)
(<Z42> ^flag |o-supported|)
(<Z42> ^action |_P9|)
(<Z42> ^prop-link <P9>)
(<Z42> ^action |_P36|)
(<Z42> ^prop-link <P36>)
(<P36> ^lti-name |_P36|)
(<P36> ^prop-type add)
(<P36> ^attr1 slot2)
(<P36> ^attr2 slot3)
(<P36> ^sub1 |_U51|)
(<P36> ^sub1-link <U51>)
(<U51> ^lti-name |_U51|)
(<U51> ^curr-id props$rootstate)
(<U51> ^target-arg id1)
(<U51> ^depth 2)
(<U51> ^chain-attr AC)
(<U51> ^chain-next <U52>)
(<U52> ^chain-attr action)
(<U52> ^chain-next |done|)
(<P36> ^sub2 |_U53|)
(<P36> ^sub2-link <U53>)
(<U53> ^lti-name |_U53|)
(<U53> ^curr-id props$rootstate)
(<U53> ^target-arg id2)
(<U53> ^depth 1)
(<U53> ^chain-attr RT)
(<U53> ^chain-next |done|)
(<Z42> ^action |_P30|)
(<Z42> ^prop-link <P30>)
(<Z42> ^action |_P15|)
(<Z42> ^prop-link <P15>)

(<S41> ^name propose*chein*stroop*report*say)
(<Z41> ^name propose*chein*stroop*report*say)
(<Z41> ^lti-name |_Z41|)
(<Z41> ^prop-type |instruction|)
(<Z41> ^const <Q41>)
(<Z41> ^cond-count 2)
(<Z41> ^act-count 1)
(<Z41> ^spread-source <S41>)
(<Q41> ^1 chein-stroop-report-say)
(<Q41> ^2 stroop)
(<Z41> ^condition |_P1|)
(<Z41> ^prop-link <P1>)
(<Z41> ^cond-spread-source <CueZ41P1>)
(<CueZ41P1> ^props-instruction-set <S41>)
(<CueZ41P1> ^name |_P1|)
(<S41> ^condition <ScondZ41P1>)
(<ScondZ41P1> ^props-instructions <Z41>)
(<ScondZ41P1> ^name |_P1|)
(<Z41> ^condition |_P35|)
(<Z41> ^prop-link <P35>)
(<Z41> ^cond-spread-source <CueZ41P35>)
(<CueZ41P35> ^props-instruction-set <S41>)
(<CueZ41P35> ^name |_P35|)
(<S41> ^condition <ScondZ41P35>)
(<ScondZ41P35> ^props-instructions <Z41>)
(<ScondZ41P35> ^name |_P35|)
(<P35> ^lti-name |_P35|)
(<P35> ^prop-type existence)
(<P35> ^attr1 slot3)
(<P35> ^sub1 |_U50|)
(<P35> ^sub1-link <U50>)
(<U50> ^lti-name |_U50|)
(<U50> ^curr-id props$rootstate)
(<U50> ^target-arg id1)
(<U50> ^depth 1)
(<U50> ^chain-attr RT)
(<U50> ^chain-next |done|)
(<Z41> ^action |_P3|)
(<Z41> ^prop-link <P3>)

(<S40> ^name apply*chein*stroop*report*retrieve)
(<Z40> ^name apply*chein*stroop*report*retrieve)
(<Z40> ^lti-name |_Z40|)
(<Z40> ^prop-type |instruction|)
(<Z40> ^const <Q40>)
(<Z40> ^cond-count 1)
(<Z40> ^act-count 2)
(<Z40> ^spread-source <S40>)
(<Q40> ^1 chein-stroop-report-retrieve)
(<Q40> ^2 s-mapping)
(<Z40> ^condition |_P4|)
(<Z40> ^prop-link <P4>)
(<Z40> ^cond-spread-source <CueZ40P4>)
(<CueZ40P4> ^props-instruction-set <S40>)
(<CueZ40P4> ^name |_P4|)
(<S40> ^condition <ScondZ40P4>)
(<ScondZ40P4> ^props-instructions <Z40>)
(<ScondZ40P4> ^name |_P4|)
(<Z40> ^flag |o-supported|)
(<Z40> ^action |_P11|)
(<Z40> ^prop-link <P11>)
(<Z40> ^action |_P12|)
(<Z40> ^prop-link <P12>)

(<S39> ^name propose*chein*stroop*report*retrieve)
(<Z39> ^name propose*chein*stroop*report*retrieve)
(<Z39> ^lti-name |_Z39|)
(<Z39> ^prop-type |instruction|)
(<Z39> ^const <Q39>)
(<Z39> ^cond-count 3)
(<Z39> ^act-count 1)
(<Z39> ^spread-source <S39>)
(<Q39> ^1 chein-stroop-report-retrieve)
(<Q39> ^2 stroop)
(<Z39> ^condition |_P1|)
(<Z39> ^prop-link <P1>)
(<Z39> ^cond-spread-source <CueZ39P1>)
(<CueZ39P1> ^props-instruction-set <S39>)
(<CueZ39P1> ^name |_P1|)
(<S39> ^condition <ScondZ39P1>)
(<ScondZ39P1> ^props-instructions <Z39>)
(<ScondZ39P1> ^name |_P1|)
(<Z39> ^condition |_P33|)
(<Z39> ^prop-link <P33>)
(<Z39> ^cond-spread-source <CueZ39P33>)
(<CueZ39P33> ^props-instruction-set <S39>)
(<CueZ39P33> ^name |_P33|)
(<S39> ^condition <ScondZ39P33>)
(<ScondZ39P33> ^props-instructions <Z39>)
(<ScondZ39P33> ^name |_P33|)
(<P33> ^lti-name |_P33|)
(<P33> ^prop-type existence)
(<P33> ^attr1 slot2)
(<P33> ^sub1 |_U48|)
(<P33> ^sub1-link <U48>)
(<U48> ^lti-name |_U48|)
(<U48> ^curr-id props$rootstate)
(<U48> ^target-arg id1)
(<U48> ^depth 1)
(<U48> ^chain-attr V)
(<U48> ^chain-next |done|)
(<Z39> ^condition |_P34|)
(<Z39> ^prop-link <P34>)
(<Z39> ^cond-spread-source <CueZ39P34>)
(<CueZ39P34> ^props-instruction-set <S39>)
(<CueZ39P34> ^name |_P34|)
(<S39> ^condition <ScondZ39P34>)
(<ScondZ39P34> ^props-instructions <Z39>)
(<ScondZ39P34> ^name |_P34|)
(<P34> ^lti-name |_P34|)
(<P34> ^prop-type negation)
(<P34> ^attr1 slot3)
(<P34> ^sub1 |_U49|)
(<P34> ^sub1-link <U49>)
(<U49> ^lti-name |_U49|)
(<U49> ^curr-id props$rootstate)
(<U49> ^target-arg id1)
(<U49> ^depth 1)
(<U49> ^chain-attr RT)
(<U49> ^chain-next |done|)
(<Z39> ^action |_P3|)
(<Z39> ^prop-link <P3>)

(<S38> ^name apply*chein*stroop*object-seen*focus-all)
(<Z38> ^name apply*chein*stroop*object-seen*focus-all)
(<Z38> ^lti-name |_Z38|)
(<Z38> ^prop-type |instruction|)
(<Z38> ^const <Q38>)
(<Z38> ^cond-count 1)
(<Z38> ^act-count 2)
(<Z38> ^spread-source <S38>)
(<Q38> ^1 chein-stroop-object-seen-focus-all)
(<Q38> ^2 get-property)
(<Q38> ^3 both)
(<Z38> ^condition |_P4|)
(<Z38> ^prop-link <P4>)
(<Z38> ^cond-spread-source <CueZ38P4>)
(<CueZ38P4> ^props-instruction-set <S38>)
(<CueZ38P4> ^name |_P4|)
(<S38> ^condition <ScondZ38P4>)
(<ScondZ38P4> ^props-instructions <Z38>)
(<ScondZ38P4> ^name |_P4|)
(<Z38> ^flag |o-supported|)
(<Z38> ^action |_P9|)
(<Z38> ^prop-link <P9>)
(<Z38> ^action |_P14|)
(<Z38> ^prop-link <P14>)

(<S37> ^name propose*chein*stroop*object-seen*focus-all)
(<Z37> ^name propose*chein*stroop*object-seen*focus-all)
(<Z37> ^lti-name |_Z37|)
(<Z37> ^prop-type |instruction|)
(<Z37> ^const <Q37>)
(<Z37> ^cond-count 2)
(<Z37> ^act-count 1)
(<Z37> ^spread-source <S37>)
(<Q37> ^1 chein-stroop-object-seen-focus-all)
(<Q37> ^2 stroop)
(<Q37> ^3 yes)
(<Z37> ^condition |_P1|)
(<Z37> ^prop-link <P1>)
(<Z37> ^cond-spread-source <CueZ37P1>)
(<CueZ37P1> ^props-instruction-set <S37>)
(<CueZ37P1> ^name |_P1|)
(<S37> ^condition <ScondZ37P1>)
(<ScondZ37P1> ^props-instructions <Z37>)
(<ScondZ37P1> ^name |_P1|)
(<Z37> ^condition |_P7|)
(<Z37> ^prop-link <P7>)
(<Z37> ^cond-spread-source <CueZ37P7>)
(<CueZ37P7> ^props-instruction-set <S37>)
(<CueZ37P7> ^name |_P7|)
(<S37> ^condition <ScondZ37P7>)
(<ScondZ37P7> ^props-instructions <Z37>)
(<ScondZ37P7> ^name |_P7|)
(<Z37> ^action |_P3|)
(<Z37> ^prop-link <P3>)

(<S36> ^name apply*chein*stroop*object-seen*focus-color)
(<Z36> ^name apply*chein*stroop*object-seen*focus-color)
(<Z36> ^lti-name |_Z36|)
(<Z36> ^prop-type |instruction|)
(<Z36> ^const <Q36>)
(<Z36> ^cond-count 1)
(<Z36> ^act-count 2)
(<Z36> ^spread-source <S36>)
(<Q36> ^1 chein-stroop-object-seen-focus-color)
(<Q36> ^2 get-property)
(<Q36> ^3 color-property)
(<Z36> ^condition |_P4|)
(<Z36> ^prop-link <P4>)
(<Z36> ^cond-spread-source <CueZ36P4>)
(<CueZ36P4> ^props-instruction-set <S36>)
(<CueZ36P4> ^name |_P4|)
(<S36> ^condition <ScondZ36P4>)
(<ScondZ36P4> ^props-instructions <Z36>)
(<ScondZ36P4> ^name |_P4|)
(<Z36> ^flag |o-supported|)
(<Z36> ^action |_P9|)
(<Z36> ^prop-link <P9>)
(<Z36> ^action |_P14|)
(<Z36> ^prop-link <P14>)

(<S35> ^name propose*chein*stroop*object-seen*focus-color)
(<Z35> ^name propose*chein*stroop*object-seen*focus-color)
(<Z35> ^lti-name |_Z35|)
(<Z35> ^prop-type |instruction|)
(<Z35> ^const <Q35>)
(<Z35> ^cond-count 3)
(<Z35> ^act-count 1)
(<Z35> ^spread-source <S35>)
(<Q35> ^1 chein-stroop-object-seen-focus-color)
(<Q35> ^2 stroop)
(<Q35> ^3 yes)
(<Q35> ^4 prepare)
(<Z35> ^condition |_P1|)
(<Z35> ^prop-link <P1>)
(<Z35> ^cond-spread-source <CueZ35P1>)
(<CueZ35P1> ^props-instruction-set <S35>)
(<CueZ35P1> ^name |_P1|)
(<S35> ^condition <ScondZ35P1>)
(<ScondZ35P1> ^props-instructions <Z35>)
(<ScondZ35P1> ^name |_P1|)
(<Z35> ^condition |_P7|)
(<Z35> ^prop-link <P7>)
(<Z35> ^cond-spread-source <CueZ35P7>)
(<CueZ35P7> ^props-instruction-set <S35>)
(<CueZ35P7> ^name |_P7|)
(<S35> ^condition <ScondZ35P7>)
(<ScondZ35P7> ^props-instructions <Z35>)
(<ScondZ35P7> ^name |_P7|)
(<Z35> ^condition |_P8|)
(<Z35> ^prop-link <P8>)
(<Z35> ^cond-spread-source <CueZ35P8>)
(<CueZ35P8> ^props-instruction-set <S35>)
(<CueZ35P8> ^name |_P8|)
(<S35> ^condition <ScondZ35P8>)
(<ScondZ35P8> ^props-instructions <Z35>)
(<ScondZ35P8> ^name |_P8|)
(<Z35> ^action |_P3|)
(<Z35> ^prop-link <P3>)

(<S34> ^name apply*chein*stroop*init)
(<Z34> ^name apply*chein*stroop*init)
(<Z34> ^lti-name |_Z34|)
(<Z34> ^prop-type |instruction|)
(<Z34> ^const <Q34>)
(<Z34> ^cond-count 1)
(<Z34> ^act-count 2)
(<Z34> ^spread-source <S34>)
(<Q34> ^1 chein-stroop-init)
(<Q34> ^2 prepare)
(<Q34> ^3 wait)
(<Z34> ^condition |_P4|)
(<Z34> ^prop-link <P4>)
(<Z34> ^cond-spread-source <CueZ34P4>)
(<CueZ34P4> ^props-instruction-set <S34>)
(<CueZ34P4> ^name |_P4|)
(<S34> ^condition <ScondZ34P4>)
(<ScondZ34P4> ^props-instructions <Z34>)
(<ScondZ34P4> ^name |_P4|)
(<Z34> ^flag |o-supported|)
(<Z34> ^action |_P5|)
(<Z34> ^prop-link <P5>)
(<Z34> ^action |_P32|)
(<Z34> ^prop-link <P32>)
(<P32> ^lti-name |_P32|)
(<P32> ^prop-type add)
(<P32> ^attr1 slot1)
(<P32> ^id2 props$const)
(<P32> ^attr2 3)
(<P32> ^sub1 |_U46|)
(<P32> ^sub1-link <U46>)
(<U46> ^lti-name |_U46|)
(<U46> ^curr-id props$rootstate)
(<U46> ^target-arg id1)
(<U46> ^depth 2)
(<U46> ^chain-attr AC)
(<U46> ^chain-next <U47>)
(<U47> ^chain-attr action)
(<U47> ^chain-next |done|)

(<S33> ^name propose*chein*stroop*init)
(<Z33> ^name propose*chein*stroop*init)
(<Z33> ^lti-name |_Z33|)
(<Z33> ^prop-type |instruction|)
(<Z33> ^const <Q33>)
(<Z33> ^cond-count 2)
(<Z33> ^act-count 1)
(<Z33> ^spread-source <S33>)
(<Q33> ^1 chein-stroop-init)
(<Q33> ^2 stroop)
(<Z33> ^condition |_P1|)
(<Z33> ^prop-link <P1>)
(<Z33> ^cond-spread-source <CueZ33P1>)
(<CueZ33P1> ^props-instruction-set <S33>)
(<CueZ33P1> ^name |_P1|)
(<S33> ^condition <ScondZ33P1>)
(<ScondZ33P1> ^props-instructions <Z33>)
(<ScondZ33P1> ^name |_P1|)
(<Z33> ^condition |_P2|)
(<Z33> ^prop-link <P2>)
(<Z33> ^cond-spread-source <CueZ33P2>)
(<CueZ33P2> ^props-instruction-set <S33>)
(<CueZ33P2> ^name |_P2|)
(<S33> ^condition <ScondZ33P2>)
(<ScondZ33P2> ^props-instructions <Z33>)
(<ScondZ33P2> ^name |_P2|)
(<Z33> ^action |_P3|)
(<Z33> ^prop-link <P3>)

(<S32> ^name apply*chein*verbal-CWM*finish)
(<Z32> ^name apply*chein*verbal-CWM*finish)
(<Z32> ^lti-name |_Z32|)
(<Z32> ^prop-type |instruction|)
(<Z32> ^const <Q32>)
(<Z32> ^cond-count 1)
(<Z32> ^act-count 3)
(<Z32> ^spread-source <S32>)
(<Q32> ^1 chein-verbal-CWM-finish)
(<Q32> ^2 enter)
(<Q32> ^3 finish)
(<Z32> ^condition |_P4|)
(<Z32> ^prop-link <P4>)
(<Z32> ^cond-spread-source <CueZ32P4>)
(<CueZ32P4> ^props-instruction-set <S32>)
(<CueZ32P4> ^name |_P4|)
(<S32> ^condition <ScondZ32P4>)
(<ScondZ32P4> ^props-instructions <Z32>)
(<ScondZ32P4> ^name |_P4|)
(<Z32> ^flag |o-supported|)
(<Z32> ^action |_P9|)
(<Z32> ^prop-link <P9>)
(<Z32> ^action |_P31|)
(<Z32> ^prop-link <P31>)
(<P31> ^lti-name |_P31|)
(<P31> ^prop-type add)
(<P31> ^attr1 Gtask)
(<P31> ^id2 props$const)
(<P31> ^attr2 3)
(<P31> ^sub1 |_U45|)
(<P31> ^sub1-link <U45>)
(<U45> ^lti-name |_U45|)
(<U45> ^curr-id props$rootstate)
(<U45> ^target-arg id1)
(<U45> ^depth 1)
(<U45> ^chain-attr G)
(<U45> ^chain-next |done|)
(<Z32> ^action |_P15|)
(<Z32> ^prop-link <P15>)

(<S31> ^name propose*chein*verbal-CWM*finish)
(<Z31> ^name propose*chein*verbal-CWM*finish)
(<Z31> ^lti-name |_Z31|)
(<Z31> ^prop-type |instruction|)
(<Z31> ^const <Q31>)
(<Z31> ^cond-count 2)
(<Z31> ^act-count 1)
(<Z31> ^spread-source <S31>)
(<Q31> ^1 chein-verbal-CWM-finish)
(<Q31> ^2 verbal-CWM)
(<Q31> ^3 end)
(<Z31> ^condition |_P1|)
(<Z31> ^prop-link <P1>)
(<Z31> ^cond-spread-source <CueZ31P1>)
(<CueZ31P1> ^props-instruction-set <S31>)
(<CueZ31P1> ^name |_P1|)
(<S31> ^condition <ScondZ31P1>)
(<ScondZ31P1> ^props-instructions <Z31>)
(<ScondZ31P1> ^name |_P1|)
(<Z31> ^condition |_P27|)
(<Z31> ^prop-link <P27>)
(<Z31> ^cond-spread-source <CueZ31P27>)
(<CueZ31P27> ^props-instruction-set <S31>)
(<CueZ31P27> ^name |_P27|)
(<S31> ^condition <ScondZ31P27>)
(<ScondZ31P27> ^props-instructions <Z31>)
(<ScondZ31P27> ^name |_P27|)
(<Z31> ^action |_P3|)
(<Z31> ^prop-link <P3>)

(<S30> ^name apply*chein*verbal-CWM*report*finish)
(<Z30> ^name apply*chein*verbal-CWM*report*finish)
(<Z30> ^lti-name |_Z30|)
(<Z30> ^prop-type |instruction|)
(<Z30> ^const <Q30>)
(<Z30> ^cond-count 1)
(<Z30> ^act-count 4)
(<Z30> ^spread-source <S30>)
(<Q30> ^1 chein-verbal-CWM-report-finish)
(<Q30> ^2 type)
(<Q30> ^3 end)
(<Z30> ^condition |_P4|)
(<Z30> ^prop-link <P4>)
(<Z30> ^cond-spread-source <CueZ30P4>)
(<CueZ30P4> ^props-instruction-set <S30>)
(<CueZ30P4> ^name |_P4|)
(<S30> ^condition <ScondZ30P4>)
(<ScondZ30P4> ^props-instructions <Z30>)
(<ScondZ30P4> ^name |_P4|)
(<Z30> ^flag |o-supported|)
(<Z30> ^action |_P9|)
(<Z30> ^prop-link <P9>)
(<Z30> ^action |_P29|)
(<Z30> ^prop-link <P29>)
(<P29> ^lti-name |_P29|)
(<P29> ^prop-type add)
(<P29> ^attr1 slot2)
(<P29> ^attr2 slot1)
(<P29> ^sub1 |_U41|)
(<P29> ^sub1-link <U41>)
(<U41> ^lti-name |_U41|)
(<U41> ^curr-id props$rootstate)
(<U41> ^target-arg id1)
(<U41> ^depth 2)
(<U41> ^chain-attr AC)
(<U41> ^chain-next <U42>)
(<U42> ^chain-attr action)
(<U42> ^chain-next |done|)
(<P29> ^sub2 |_U43|)
(<P29> ^sub2-link <U43>)
(<U43> ^lti-name |_U43|)
(<U43> ^curr-id props$rootstate)
(<U43> ^target-arg id2)
(<U43> ^depth 1)
(<U43> ^chain-attr WM)
(<U43> ^chain-next |done|)
(<Z30> ^action |_P30|)
(<Z30> ^prop-link <P30>)
(<P30> ^lti-name |_P30|)
(<P30> ^prop-type add)
(<P30> ^attr1 Gcontrol)
(<P30> ^id2 props$const)
(<P30> ^attr2 3)
(<P30> ^sub1 |_U44|)
(<P30> ^sub1-link <U44>)
(<U44> ^lti-name |_U44|)
(<U44> ^curr-id props$rootstate)
(<U44> ^target-arg id1)
(<U44> ^depth 1)
(<U44> ^chain-attr G)
(<U44> ^chain-next |done|)
(<Z30> ^action |_P15|)
(<Z30> ^prop-link <P15>)

(<S29> ^name propose*chein*verbal-CWM*report*finish)
(<Z29> ^name propose*chein*verbal-CWM*report*finish)
(<Z29> ^lti-name |_Z29|)
(<Z29> ^prop-type |instruction|)
(<Z29> ^const <Q29>)
(<Z29> ^cond-count 4)
(<Z29> ^act-count 1)
(<Z29> ^spread-source <S29>)
(<Q29> ^1 chein-verbal-CWM-report-finish)
(<Q29> ^2 verbal-CWM)
(<Q29> ^3 report)
(<Q29> ^4 error)
(<Z29> ^condition |_P1|)
(<Z29> ^prop-link <P1>)
(<Z29> ^cond-spread-source <CueZ29P1>)
(<CueZ29P1> ^props-instruction-set <S29>)
(<CueZ29P1> ^name |_P1|)
(<S29> ^condition <ScondZ29P1>)
(<ScondZ29P1> ^props-instructions <Z29>)
(<ScondZ29P1> ^name |_P1|)
(<Z29> ^condition |_P7|)
(<Z29> ^prop-link <P7>)
(<Z29> ^cond-spread-source <CueZ29P7>)
(<CueZ29P7> ^props-instruction-set <S29>)
(<CueZ29P7> ^name |_P7|)
(<S29> ^condition <ScondZ29P7>)
(<ScondZ29P7> ^props-instructions <Z29>)
(<ScondZ29P7> ^name |_P7|)
(<Z29> ^condition |_P26|)
(<Z29> ^prop-link <P26>)
(<Z29> ^cond-spread-source <CueZ29P26>)
(<CueZ29P26> ^props-instruction-set <S29>)
(<CueZ29P26> ^name |_P26|)
(<S29> ^condition <ScondZ29P26>)
(<ScondZ29P26> ^props-instructions <Z29>)
(<ScondZ29P26> ^name |_P26|)
(<Z29> ^condition |_P27|)
(<Z29> ^prop-link <P27>)
(<Z29> ^cond-spread-source <CueZ29P27>)
(<CueZ29P27> ^props-instruction-set <S29>)
(<CueZ29P27> ^name |_P27|)
(<S29> ^condition <ScondZ29P27>)
(<ScondZ29P27> ^props-instructions <Z29>)
(<ScondZ29P27> ^name |_P27|)
(<Z29> ^action |_P3|)
(<Z29> ^prop-link <P3>)

(<S28> ^name apply*chein*verbal-CWM*report*report)
(<Z28> ^name apply*chein*verbal-CWM*report*report)
(<Z28> ^lti-name |_Z28|)
(<Z28> ^prop-type |instruction|)
(<Z28> ^const <Q28>)
(<Z28> ^cond-count 1)
(<Z28> ^act-count 4)
(<Z28> ^spread-source <S28>)
(<Q28> ^1 chein-verbal-CWM-report-report)
(<Q28> ^2 type)
(<Z28> ^condition |_P4|)
(<Z28> ^prop-link <P4>)
(<Z28> ^cond-spread-source <CueZ28P4>)
(<CueZ28P4> ^props-instruction-set <S28>)
(<CueZ28P4> ^name |_P4|)
(<S28> ^condition <ScondZ28P4>)
(<ScondZ28P4> ^props-instructions <Z28>)
(<ScondZ28P4> ^name |_P4|)
(<Z28> ^flag |o-supported|)
(<Z28> ^action |_P9|)
(<Z28> ^prop-link <P9>)
(<Z28> ^action |_P28|)
(<Z28> ^prop-link <P28>)
(<P28> ^lti-name |_P28|)
(<P28> ^prop-type add)
(<P28> ^attr1 slot2)
(<P28> ^attr2 slot1)
(<P28> ^sub1 |_U38|)
(<P28> ^sub1-link <U38>)
(<U38> ^lti-name |_U38|)
(<U38> ^curr-id props$rootstate)
(<U38> ^target-arg id1)
(<U38> ^depth 2)
(<U38> ^chain-attr AC)
(<U38> ^chain-next <U39>)
(<U39> ^chain-attr action)
(<U39> ^chain-next |done|)
(<P28> ^sub2 |_U40|)
(<P28> ^sub2-link <U40>)
(<U40> ^lti-name |_U40|)
(<U40> ^curr-id props$rootstate)
(<U40> ^target-arg id2)
(<U40> ^depth 1)
(<U40> ^chain-attr RT)
(<U40> ^chain-next |done|)
(<Z28> ^action |_P25|)
(<Z28> ^prop-link <P25>)
(<Z28> ^action |_P15|)
(<Z28> ^prop-link <P15>)

(<S27> ^name propose*chein*verbal-CWM*report*report)
(<Z27> ^name propose*chein*verbal-CWM*report*report)
(<Z27> ^lti-name |_Z27|)
(<Z27> ^prop-type |instruction|)
(<Z27> ^const <Q27>)
(<Z27> ^cond-count 4)
(<Z27> ^act-count 1)
(<Z27> ^spread-source <S27>)
(<Q27> ^1 chein-verbal-CWM-report-report)
(<Q27> ^2 verbal-CWM)
(<Q27> ^3 report)
(<Q27> ^4 error)
(<Z27> ^condition |_P1|)
(<Z27> ^prop-link <P1>)
(<Z27> ^cond-spread-source <CueZ27P1>)
(<CueZ27P1> ^props-instruction-set <S27>)
(<CueZ27P1> ^name |_P1|)
(<S27> ^condition <ScondZ27P1>)
(<ScondZ27P1> ^props-instructions <Z27>)
(<ScondZ27P1> ^name |_P1|)
(<Z27> ^condition |_P7|)
(<Z27> ^prop-link <P7>)
(<Z27> ^cond-spread-source <CueZ27P7>)
(<CueZ27P7> ^props-instruction-set <S27>)
(<CueZ27P7> ^name |_P7|)
(<S27> ^condition <ScondZ27P7>)
(<ScondZ27P7> ^props-instructions <Z27>)
(<ScondZ27P7> ^name |_P7|)
(<Z27> ^condition |_P23|)
(<Z27> ^prop-link <P23>)
(<Z27> ^cond-spread-source <CueZ27P23>)
(<CueZ27P23> ^props-instruction-set <S27>)
(<CueZ27P23> ^name |_P23|)
(<S27> ^condition <ScondZ27P23>)
(<ScondZ27P23> ^props-instructions <Z27>)
(<ScondZ27P23> ^name |_P23|)
(<Z27> ^condition |_P27|)
(<Z27> ^prop-link <P27>)
(<Z27> ^cond-spread-source <CueZ27P27>)
(<CueZ27P27> ^props-instruction-set <S27>)
(<CueZ27P27> ^name |_P27|)
(<S27> ^condition <ScondZ27P27>)
(<ScondZ27P27> ^props-instructions <Z27>)
(<ScondZ27P27> ^name |_P27|)
(<P27> ^lti-name |_P27|)
(<P27> ^prop-type equality)
(<P27> ^attr1 Gcontrol)
(<P27> ^id2 props$const)
(<P27> ^attr2 3)
(<P27> ^sub1 |_U37|)
(<P27> ^sub1-link <U37>)
(<U37> ^lti-name |_U37|)
(<U37> ^curr-id props$rootstate)
(<U37> ^target-arg id1)
(<U37> ^depth 1)
(<U37> ^chain-attr G)
(<U37> ^chain-next |done|)
(<Z27> ^action |_P3|)
(<Z27> ^prop-link <P3>)

(<S26> ^name apply*chein*verbal-CWM*report*start-from-lexical)
(<Z26> ^name apply*chein*verbal-CWM*report*start-from-lexical)
(<Z26> ^lti-name |_Z26|)
(<Z26> ^prop-type |instruction|)
(<Z26> ^const <Q26>)
(<Z26> ^cond-count 1)
(<Z26> ^act-count 2)
(<Z26> ^spread-source <S26>)
(<Q26> ^1 chein-verbal-CWM-report-start-from-lexical)
(<Q26> ^2 report)
(<Z26> ^condition |_P4|)
(<Z26> ^prop-link <P4>)
(<Z26> ^cond-spread-source <CueZ26P4>)
(<CueZ26P4> ^props-instruction-set <S26>)
(<CueZ26P4> ^name |_P4|)
(<S26> ^condition <ScondZ26P4>)
(<ScondZ26P4> ^props-instructions <Z26>)
(<ScondZ26P4> ^name |_P4|)
(<Z26> ^flag |o-supported|)
(<Z26> ^action |_P22|)
(<Z26> ^prop-link <P22>)
(<Z26> ^action |_P5|)
(<Z26> ^prop-link <P5>)

(<S25> ^name propose*chein*verbal-CWM*report*start-from-lexical)
(<Z25> ^name propose*chein*verbal-CWM*report*start-from-lexical)
(<Z25> ^lti-name |_Z25|)
(<Z25> ^prop-type |instruction|)
(<Z25> ^const <Q25>)
(<Z25> ^cond-count 3)
(<Z25> ^act-count 1)
(<Z25> ^spread-source <S25>)
(<Q25> ^1 chein-verbal-CWM-report-start-from-lexical)
(<Q25> ^2 verbal-CWM)
(<Q25> ^3 report)
(<Q25> ^4 lexdec)
(<Z25> ^condition |_P1|)
(<Z25> ^prop-link <P1>)
(<Z25> ^cond-spread-source <CueZ25P1>)
(<CueZ25P1> ^props-instruction-set <S25>)
(<CueZ25P1> ^name |_P1|)
(<S25> ^condition <ScondZ25P1>)
(<ScondZ25P1> ^props-instructions <Z25>)
(<ScondZ25P1> ^name |_P1|)
(<Z25> ^condition |_P7|)
(<Z25> ^prop-link <P7>)
(<Z25> ^cond-spread-source <CueZ25P7>)
(<CueZ25P7> ^props-instruction-set <S25>)
(<CueZ25P7> ^name |_P7|)
(<S25> ^condition <ScondZ25P7>)
(<ScondZ25P7> ^props-instructions <Z25>)
(<ScondZ25P7> ^name |_P7|)
(<Z25> ^condition |_P8|)
(<Z25> ^prop-link <P8>)
(<Z25> ^cond-spread-source <CueZ25P8>)
(<CueZ25P8> ^props-instruction-set <S25>)
(<CueZ25P8> ^name |_P8|)
(<S25> ^condition <ScondZ25P8>)
(<ScondZ25P8> ^props-instructions <Z25>)
(<ScondZ25P8> ^name |_P8|)
(<Z25> ^action |_P3|)
(<Z25> ^prop-link <P3>)

(<S24> ^name apply*chein*verbal-CWM*report*start-from-rehearse)
(<Z24> ^name apply*chein*verbal-CWM*report*start-from-rehearse)
(<Z24> ^lti-name |_Z24|)
(<Z24> ^prop-type |instruction|)
(<Z24> ^const <Q24>)
(<Z24> ^cond-count 1)
(<Z24> ^act-count 2)
(<Z24> ^spread-source <S24>)
(<Q24> ^1 chein-verbal-CWM-report-start-from-rehearse)
(<Q24> ^2 report)
(<Z24> ^condition |_P4|)
(<Z24> ^prop-link <P4>)
(<Z24> ^cond-spread-source <CueZ24P4>)
(<CueZ24P4> ^props-instruction-set <S24>)
(<CueZ24P4> ^name |_P4|)
(<S24> ^condition <ScondZ24P4>)
(<ScondZ24P4> ^props-instructions <Z24>)
(<ScondZ24P4> ^name |_P4|)
(<Z24> ^flag |o-supported|)
(<Z24> ^action |_P22|)
(<Z24> ^prop-link <P22>)
(<Z24> ^action |_P5|)
(<Z24> ^prop-link <P5>)

(<S23> ^name propose*chein*verbal-CWM*report*start-from-rehearse)
(<Z23> ^name propose*chein*verbal-CWM*report*start-from-rehearse)
(<Z23> ^lti-name |_Z23|)
(<Z23> ^prop-type |instruction|)
(<Z23> ^const <Q23>)
(<Z23> ^cond-count 3)
(<Z23> ^act-count 1)
(<Z23> ^spread-source <S23>)
(<Q23> ^1 chein-verbal-CWM-report-start-from-rehearse)
(<Q23> ^2 verbal-CWM)
(<Q23> ^3 report)
(<Q23> ^4 rehearse)
(<Z23> ^condition |_P1|)
(<Z23> ^prop-link <P1>)
(<Z23> ^cond-spread-source <CueZ23P1>)
(<CueZ23P1> ^props-instruction-set <S23>)
(<CueZ23P1> ^name |_P1|)
(<S23> ^condition <ScondZ23P1>)
(<ScondZ23P1> ^props-instructions <Z23>)
(<ScondZ23P1> ^name |_P1|)
(<Z23> ^condition |_P7|)
(<Z23> ^prop-link <P7>)
(<Z23> ^cond-spread-source <CueZ23P7>)
(<CueZ23P7> ^props-instruction-set <S23>)
(<CueZ23P7> ^name |_P7|)
(<S23> ^condition <ScondZ23P7>)
(<ScondZ23P7> ^props-instructions <Z23>)
(<ScondZ23P7> ^name |_P7|)
(<Z23> ^condition |_P8|)
(<Z23> ^prop-link <P8>)
(<Z23> ^cond-spread-source <CueZ23P8>)
(<CueZ23P8> ^props-instruction-set <S23>)
(<CueZ23P8> ^name |_P8|)
(<S23> ^condition <ScondZ23P8>)
(<ScondZ23P8> ^props-instructions <Z23>)
(<ScondZ23P8> ^name |_P8|)
(<Z23> ^action |_P3|)
(<Z23> ^prop-link <P3>)

(<S22> ^name apply*chein*verbal-CWM*rehearse*restart)
(<Z22> ^name apply*chein*verbal-CWM*rehearse*restart)
(<Z22> ^lti-name |_Z22|)
(<Z22> ^prop-type |instruction|)
(<Z22> ^const <Q22>)
(<Z22> ^cond-count 1)
(<Z22> ^act-count 1)
(<Z22> ^spread-source <S22>)
(<Q22> ^1 chein-verbal-CWM-rehearse-restart)
(<Z22> ^condition |_P4|)
(<Z22> ^prop-link <P4>)
(<Z22> ^cond-spread-source <CueZ22P4>)
(<CueZ22P4> ^props-instruction-set <S22>)
(<CueZ22P4> ^name |_P4|)
(<S22> ^condition <ScondZ22P4>)
(<ScondZ22P4> ^props-instructions <Z22>)
(<ScondZ22P4> ^name |_P4|)
(<Z22> ^flag |o-supported|)
(<Z22> ^action |_P22|)
(<Z22> ^prop-link <P22>)

(<S21> ^name propose*chein*verbal-CWM*rehearse*restart)
(<Z21> ^name propose*chein*verbal-CWM*rehearse*restart)
(<Z21> ^lti-name |_Z21|)
(<Z21> ^prop-type |instruction|)
(<Z21> ^const <Q21>)
(<Z21> ^cond-count 4)
(<Z21> ^act-count 1)
(<Z21> ^spread-source <S21>)
(<Q21> ^1 chein-verbal-CWM-rehearse-restart)
(<Q21> ^2 verbal-CWM)
(<Q21> ^3 letter)
(<Q21> ^4 error)
(<Q21> ^5 rehearse)
(<Z21> ^condition |_P1|)
(<Z21> ^prop-link <P1>)
(<Z21> ^cond-spread-source <CueZ21P1>)
(<CueZ21P1> ^props-instruction-set <S21>)
(<CueZ21P1> ^name |_P1|)
(<S21> ^condition <ScondZ21P1>)
(<ScondZ21P1> ^props-instructions <Z21>)
(<ScondZ21P1> ^name |_P1|)
(<Z21> ^condition |_P7|)
(<Z21> ^prop-link <P7>)
(<Z21> ^cond-spread-source <CueZ21P7>)
(<CueZ21P7> ^props-instruction-set <S21>)
(<CueZ21P7> ^name |_P7|)
(<S21> ^condition <ScondZ21P7>)
(<ScondZ21P7> ^props-instructions <Z21>)
(<ScondZ21P7> ^name |_P7|)
(<Z21> ^condition |_P26|)
(<Z21> ^prop-link <P26>)
(<Z21> ^cond-spread-source <CueZ21P26>)
(<CueZ21P26> ^props-instruction-set <S21>)
(<CueZ21P26> ^name |_P26|)
(<S21> ^condition <ScondZ21P26>)
(<ScondZ21P26> ^props-instructions <Z21>)
(<ScondZ21P26> ^name |_P26|)
(<P26> ^lti-name |_P26|)
(<P26> ^prop-type equality)
(<P26> ^attr1 rt-result)
(<P26> ^id2 props$const)
(<P26> ^attr2 4)
(<P26> ^sub1 |_U36|)
(<P26> ^sub1-link <U36>)
(<U36> ^lti-name |_U36|)
(<U36> ^curr-id props$rootstate)
(<U36> ^target-arg id1)
(<U36> ^depth 1)
(<U36> ^chain-attr smem)
(<U36> ^chain-next |done|)
(<Z21> ^condition |_P24|)
(<Z21> ^prop-link <P24>)
(<Z21> ^cond-spread-source <CueZ21P24>)
(<CueZ21P24> ^props-instruction-set <S21>)
(<CueZ21P24> ^name |_P24|)
(<S21> ^condition <ScondZ21P24>)
(<ScondZ21P24> ^props-instructions <Z21>)
(<ScondZ21P24> ^name |_P24|)
(<Z21> ^action |_P3|)
(<Z21> ^prop-link <P3>)

(<S20> ^name apply*chein*verbal-CWM*rehearse*next)
(<Z20> ^name apply*chein*verbal-CWM*rehearse*next)
(<Z20> ^lti-name |_Z20|)
(<Z20> ^prop-type |instruction|)
(<Z20> ^const <Q20>)
(<Z20> ^cond-count 1)
(<Z20> ^act-count 2)
(<Z20> ^spread-source <S20>)
(<Q20> ^1 chein-verbal-CWM-rehearse-next)
(<Z20> ^condition |_P4|)
(<Z20> ^prop-link <P4>)
(<Z20> ^cond-spread-source <CueZ20P4>)
(<CueZ20P4> ^props-instruction-set <S20>)
(<CueZ20P4> ^name |_P4|)
(<S20> ^condition <ScondZ20P4>)
(<ScondZ20P4> ^props-instructions <Z20>)
(<ScondZ20P4> ^name |_P4|)
(<Z20> ^flag |o-supported|)
(<Z20> ^action |_P25|)
(<Z20> ^prop-link <P25>)
(<P25> ^lti-name |_P25|)
(<P25> ^prop-type add)
(<P25> ^attr1 WMprev)
(<P25> ^id2 props$rootstate)
(<P25> ^attr2 RT)
(<P25> ^sub1 |_U35|)
(<P25> ^sub1-link <U35>)
(<U35> ^lti-name |_U35|)
(<U35> ^curr-id props$rootstate)
(<U35> ^target-arg id1)
(<U35> ^depth 1)
(<U35> ^chain-attr RT)
(<U35> ^chain-next |done|)
(<Z20> ^action |_P15|)
(<Z20> ^prop-link <P15>)

(<S19> ^name propose*chein*verbal-CWM*rehearse*next)
(<Z19> ^name propose*chein*verbal-CWM*rehearse*next)
(<Z19> ^lti-name |_Z19|)
(<Z19> ^prop-type |instruction|)
(<Z19> ^const <Q19>)
(<Z19> ^cond-count 4)
(<Z19> ^act-count 1)
(<Z19> ^spread-source <S19>)
(<Q19> ^1 chein-verbal-CWM-rehearse-next)
(<Q19> ^2 verbal-CWM)
(<Q19> ^3 letter)
(<Q19> ^4 error)
(<Q19> ^5 rehearse)
(<Z19> ^condition |_P1|)
(<Z19> ^prop-link <P1>)
(<Z19> ^cond-spread-source <CueZ19P1>)
(<CueZ19P1> ^props-instruction-set <S19>)
(<CueZ19P1> ^name |_P1|)
(<S19> ^condition <ScondZ19P1>)
(<ScondZ19P1> ^props-instructions <Z19>)
(<ScondZ19P1> ^name |_P1|)
(<Z19> ^condition |_P7|)
(<Z19> ^prop-link <P7>)
(<Z19> ^cond-spread-source <CueZ19P7>)
(<CueZ19P7> ^props-instruction-set <S19>)
(<CueZ19P7> ^name |_P7|)
(<S19> ^condition <ScondZ19P7>)
(<ScondZ19P7> ^props-instructions <Z19>)
(<ScondZ19P7> ^name |_P7|)
(<Z19> ^condition |_P23|)
(<Z19> ^prop-link <P23>)
(<Z19> ^cond-spread-source <CueZ19P23>)
(<CueZ19P23> ^props-instruction-set <S19>)
(<CueZ19P23> ^name |_P23|)
(<S19> ^condition <ScondZ19P23>)
(<ScondZ19P23> ^props-instructions <Z19>)
(<ScondZ19P23> ^name |_P23|)
(<P23> ^lti-name |_P23|)
(<P23> ^prop-type inequality)
(<P23> ^attr1 rt-result)
(<P23> ^id2 props$const)
(<P23> ^attr2 4)
(<P23> ^sub1 |_U33|)
(<P23> ^sub1-link <U33>)
(<U33> ^lti-name |_U33|)
(<U33> ^curr-id props$rootstate)
(<U33> ^target-arg id1)
(<U33> ^depth 1)
(<U33> ^chain-attr smem)
(<U33> ^chain-next |done|)
(<Z19> ^condition |_P24|)
(<Z19> ^prop-link <P24>)
(<Z19> ^cond-spread-source <CueZ19P24>)
(<CueZ19P24> ^props-instruction-set <S19>)
(<CueZ19P24> ^name |_P24|)
(<S19> ^condition <ScondZ19P24>)
(<ScondZ19P24> ^props-instructions <Z19>)
(<ScondZ19P24> ^name |_P24|)
(<P24> ^lti-name |_P24|)
(<P24> ^prop-type equality)
(<P24> ^attr1 Gcontrol)
(<P24> ^id2 props$const)
(<P24> ^attr2 5)
(<P24> ^sub1 |_U34|)
(<P24> ^sub1-link <U34>)
(<U34> ^lti-name |_U34|)
(<U34> ^curr-id props$rootstate)
(<U34> ^target-arg id1)
(<U34> ^depth 1)
(<U34> ^chain-attr G)
(<U34> ^chain-next |done|)
(<Z19> ^action |_P3|)
(<Z19> ^prop-link <P3>)

(<S18> ^name apply*chein*verbal-CWM*rehearse*start)
(<Z18> ^name apply*chein*verbal-CWM*rehearse*start)
(<Z18> ^lti-name |_Z18|)
(<Z18> ^prop-type |instruction|)
(<Z18> ^const <Q18>)
(<Z18> ^cond-count 1)
(<Z18> ^act-count 1)
(<Z18> ^spread-source <S18>)
(<Q18> ^1 chein-verbal-CWM-rehearse-start)
(<Z18> ^condition |_P4|)
(<Z18> ^prop-link <P4>)
(<Z18> ^cond-spread-source <CueZ18P4>)
(<CueZ18P4> ^props-instruction-set <S18>)
(<CueZ18P4> ^name |_P4|)
(<S18> ^condition <ScondZ18P4>)
(<ScondZ18P4> ^props-instructions <Z18>)
(<ScondZ18P4> ^name |_P4|)
(<Z18> ^flag |o-supported|)
(<Z18> ^action |_P22|)
(<Z18> ^prop-link <P22>)
(<P22> ^lti-name |_P22|)
(<P22> ^prop-type add)
(<P22> ^attr1 retrieve)
(<P22> ^attr2 Gtop)
(<P22> ^sub1 |_U31|)
(<P22> ^sub1-link <U31>)
(<U31> ^lti-name |_U31|)
(<U31> ^curr-id props$rootstate)
(<U31> ^target-arg id1)
(<U31> ^depth 1)
(<U31> ^chain-attr Q)
(<U31> ^chain-next |done|)
(<P22> ^sub2 |_U32|)
(<P22> ^sub2-link <U32>)
(<U32> ^lti-name |_U32|)
(<U32> ^curr-id props$rootstate)
(<U32> ^target-arg id2)
(<U32> ^depth 1)
(<U32> ^chain-attr G)
(<U32> ^chain-next |done|)

(<S17> ^name propose*chein*verbal-CWM*rehearse*start)
(<Z17> ^name propose*chein*verbal-CWM*rehearse*start)
(<Z17> ^lti-name |_Z17|)
(<Z17> ^prop-type |instruction|)
(<Z17> ^const <Q17>)
(<Z17> ^cond-count 4)
(<Z17> ^act-count 1)
(<Z17> ^spread-source <S17>)
(<Q17> ^1 chein-verbal-CWM-rehearse-start)
(<Q17> ^2 verbal-CWM)
(<Q17> ^3 letter)
(<Q17> ^4 rehearse)
(<Z17> ^condition |_P1|)
(<Z17> ^prop-link <P1>)
(<Z17> ^cond-spread-source <CueZ17P1>)
(<CueZ17P1> ^props-instruction-set <S17>)
(<CueZ17P1> ^name |_P1|)
(<S17> ^condition <ScondZ17P1>)
(<ScondZ17P1> ^props-instructions <Z17>)
(<ScondZ17P1> ^name |_P1|)
(<Z17> ^condition |_P7|)
(<Z17> ^prop-link <P7>)
(<Z17> ^cond-spread-source <CueZ17P7>)
(<CueZ17P7> ^props-instruction-set <S17>)
(<CueZ17P7> ^name |_P7|)
(<S17> ^condition <ScondZ17P7>)
(<ScondZ17P7> ^props-instructions <Z17>)
(<ScondZ17P7> ^name |_P7|)
(<Z17> ^condition |_P10|)
(<Z17> ^prop-link <P10>)
(<Z17> ^cond-spread-source <CueZ17P10>)
(<CueZ17P10> ^props-instruction-set <S17>)
(<CueZ17P10> ^name |_P10|)
(<S17> ^condition <ScondZ17P10>)
(<ScondZ17P10> ^props-instructions <Z17>)
(<ScondZ17P10> ^name |_P10|)
(<Z17> ^condition |_P8|)
(<Z17> ^prop-link <P8>)
(<Z17> ^cond-spread-source <CueZ17P8>)
(<CueZ17P8> ^props-instruction-set <S17>)
(<CueZ17P8> ^name |_P8|)
(<S17> ^condition <ScondZ17P8>)
(<ScondZ17P8> ^props-instructions <Z17>)
(<ScondZ17P8> ^name |_P8|)
(<Z17> ^action |_P3|)
(<Z17> ^prop-link <P3>)

(<S16> ^name apply*chein*verbal-CWM*letter-seen*store-dm)
(<Z16> ^name apply*chein*verbal-CWM*letter-seen*store-dm)
(<Z16> ^lti-name |_Z16|)
(<Z16> ^prop-type |instruction|)
(<Z16> ^const <Q16>)
(<Z16> ^cond-count 1)
(<Z16> ^act-count 3)
(<Z16> ^spread-source <S16>)
(<Q16> ^1 chein-verbal-CWM-letter-seen-store-dm)
(<Q16> ^2 rehearse)
(<Z16> ^condition |_P4|)
(<Z16> ^prop-link <P4>)
(<Z16> ^cond-spread-source <CueZ16P4>)
(<CueZ16P4> ^props-instruction-set <S16>)
(<CueZ16P4> ^name |_P4|)
(<S16> ^condition <ScondZ16P4>)
(<ScondZ16P4> ^props-instructions <Z16>)
(<ScondZ16P4> ^name |_P4|)
(<Z16> ^flag |o-supported|)
(<Z16> ^action |_P20|)
(<Z16> ^prop-link <P20>)
(<P20> ^lti-name |_P20|)
(<P20> ^prop-type add)
(<P20> ^attr1 slot1)
(<P20> ^attr2 slot2)
(<P20> ^sub1 |_U26|)
(<P20> ^sub1-link <U26>)
(<U26> ^lti-name |_U26|)
(<U26> ^curr-id props$rootstate)
(<U26> ^target-arg id1)
(<U26> ^depth 2)
(<U26> ^chain-attr NW)
(<U26> ^chain-next <U27>)
(<U27> ^chain-attr wm)
(<U27> ^chain-next |done|)
(<P20> ^sub2 |_U28|)
(<P20> ^sub2-link <U28>)
(<U28> ^lti-name |_U28|)
(<U28> ^curr-id props$rootstate)
(<U28> ^target-arg id2)
(<U28> ^depth 1)
(<U28> ^chain-attr V)
(<U28> ^chain-next |done|)
(<Z16> ^action |_P21|)
(<Z16> ^prop-link <P21>)
(<P21> ^lti-name |_P21|)
(<P21> ^prop-type add)
(<P21> ^attr1 slot2)
(<P21> ^id2 props$rootstate)
(<P21> ^attr2 WM)
(<P21> ^sub1 |_U29|)
(<P21> ^sub1-link <U29>)
(<U29> ^lti-name |_U29|)
(<U29> ^curr-id props$rootstate)
(<U29> ^target-arg id1)
(<U29> ^depth 2)
(<U29> ^chain-attr NW)
(<U29> ^chain-next <U30>)
(<U30> ^chain-attr wm)
(<U30> ^chain-next |done|)
(<Z16> ^action |_P5|)
(<Z16> ^prop-link <P5>)

(<S15> ^name propose*chein*verbal-CWM*letter-seen*store-dm)
(<Z15> ^name propose*chein*verbal-CWM*letter-seen*store-dm)
(<Z15> ^lti-name |_Z15|)
(<Z15> ^prop-type |instruction|)
(<Z15> ^const <Q15>)
(<Z15> ^cond-count 4)
(<Z15> ^act-count 1)
(<Z15> ^spread-source <S15>)
(<Q15> ^1 chein-verbal-CWM-letter-seen-store-dm)
(<Q15> ^2 verbal-CWM)
(<Q15> ^3 letter)
(<Q15> ^4 lexdec)
(<Z15> ^condition |_P1|)
(<Z15> ^prop-link <P1>)
(<Z15> ^cond-spread-source <CueZ15P1>)
(<CueZ15P1> ^props-instruction-set <S15>)
(<CueZ15P1> ^name |_P1|)
(<S15> ^condition <ScondZ15P1>)
(<ScondZ15P1> ^props-instructions <Z15>)
(<ScondZ15P1> ^name |_P1|)
(<Z15> ^condition |_P7|)
(<Z15> ^prop-link <P7>)
(<Z15> ^cond-spread-source <CueZ15P7>)
(<CueZ15P7> ^props-instruction-set <S15>)
(<CueZ15P7> ^name |_P7|)
(<S15> ^condition <ScondZ15P7>)
(<ScondZ15P7> ^props-instructions <Z15>)
(<ScondZ15P7> ^name |_P7|)
(<Z15> ^condition |_P8|)
(<Z15> ^prop-link <P8>)
(<Z15> ^cond-spread-source <CueZ15P8>)
(<CueZ15P8> ^props-instruction-set <S15>)
(<CueZ15P8> ^name |_P8|)
(<S15> ^condition <ScondZ15P8>)
(<ScondZ15P8> ^props-instructions <Z15>)
(<ScondZ15P8> ^name |_P8|)
(<Z15> ^condition |_P19|)
(<Z15> ^prop-link <P19>)
(<Z15> ^cond-spread-source <CueZ15P19>)
(<CueZ15P19> ^props-instruction-set <S15>)
(<CueZ15P19> ^name |_P19|)
(<S15> ^condition <ScondZ15P19>)
(<ScondZ15P19> ^props-instructions <Z15>)
(<ScondZ15P19> ^name |_P19|)
(<P19> ^lti-name |_P19|)
(<P19> ^prop-type existence)
(<P19> ^attr1 slot1)
(<P19> ^sub1 |_U25|)
(<P19> ^sub1-link <U25>)
(<U25> ^lti-name |_U25|)
(<U25> ^curr-id props$rootstate)
(<U25> ^target-arg id1)
(<U25> ^depth 1)
(<U25> ^chain-attr WM)
(<U25> ^chain-next |done|)
(<Z15> ^action |_P3|)
(<Z15> ^prop-link <P3>)

(<S14> ^name apply*chein*verbal-CWM*letter-seen*store-wm)
(<Z14> ^name apply*chein*verbal-CWM*letter-seen*store-wm)
(<Z14> ^lti-name |_Z14|)
(<Z14> ^prop-type |instruction|)
(<Z14> ^const <Q14>)
(<Z14> ^cond-count 1)
(<Z14> ^act-count 2)
(<Z14> ^spread-source <S14>)
(<Q14> ^1 chein-verbal-CWM-letter-seen-store-wm)
(<Q14> ^2 wait)
(<Z14> ^condition |_P4|)
(<Z14> ^prop-link <P4>)
(<Z14> ^cond-spread-source <CueZ14P4>)
(<CueZ14P4> ^props-instruction-set <S14>)
(<CueZ14P4> ^name |_P4|)
(<S14> ^condition <ScondZ14P4>)
(<ScondZ14P4> ^props-instructions <Z14>)
(<ScondZ14P4> ^name |_P4|)
(<Z14> ^flag |o-supported|)
(<Z14> ^action |_P18|)
(<Z14> ^prop-link <P18>)
(<P18> ^lti-name |_P18|)
(<P18> ^prop-type add)
(<P18> ^attr1 slot1)
(<P18> ^attr2 slot2)
(<P18> ^sub1 |_U23|)
(<P18> ^sub1-link <U23>)
(<U23> ^lti-name |_U23|)
(<U23> ^curr-id props$rootstate)
(<U23> ^target-arg id1)
(<U23> ^depth 1)
(<U23> ^chain-attr WM)
(<U23> ^chain-next |done|)
(<P18> ^sub2 |_U24|)
(<P18> ^sub2-link <U24>)
(<U24> ^lti-name |_U24|)
(<U24> ^curr-id props$rootstate)
(<U24> ^target-arg id2)
(<U24> ^depth 1)
(<U24> ^chain-attr V)
(<U24> ^chain-next |done|)
(<Z14> ^action |_P9|)
(<Z14> ^prop-link <P9>)

(<S13> ^name propose*chein*verbal-CWM*letter-seen*store-wm)
(<Z13> ^name propose*chein*verbal-CWM*letter-seen*store-wm)
(<Z13> ^lti-name |_Z13|)
(<Z13> ^prop-type |instruction|)
(<Z13> ^const <Q13>)
(<Z13> ^cond-count 4)
(<Z13> ^act-count 1)
(<Z13> ^spread-source <S13>)
(<Q13> ^1 chein-verbal-CWM-letter-seen-store-wm)
(<Q13> ^2 verbal-CWM)
(<Q13> ^3 letter)
(<Q13> ^4 lexdec)
(<Z13> ^condition |_P1|)
(<Z13> ^prop-link <P1>)
(<Z13> ^cond-spread-source <CueZ13P1>)
(<CueZ13P1> ^props-instruction-set <S13>)
(<CueZ13P1> ^name |_P1|)
(<S13> ^condition <ScondZ13P1>)
(<ScondZ13P1> ^props-instructions <Z13>)
(<ScondZ13P1> ^name |_P1|)
(<Z13> ^condition |_P7|)
(<Z13> ^prop-link <P7>)
(<Z13> ^cond-spread-source <CueZ13P7>)
(<CueZ13P7> ^props-instruction-set <S13>)
(<CueZ13P7> ^name |_P7|)
(<S13> ^condition <ScondZ13P7>)
(<ScondZ13P7> ^props-instructions <Z13>)
(<ScondZ13P7> ^name |_P7|)
(<Z13> ^condition |_P8|)
(<Z13> ^prop-link <P8>)
(<Z13> ^cond-spread-source <CueZ13P8>)
(<CueZ13P8> ^props-instruction-set <S13>)
(<CueZ13P8> ^name |_P8|)
(<S13> ^condition <ScondZ13P8>)
(<ScondZ13P8> ^props-instructions <Z13>)
(<ScondZ13P8> ^name |_P8|)
(<Z13> ^condition |_P17|)
(<Z13> ^prop-link <P17>)
(<Z13> ^cond-spread-source <CueZ13P17>)
(<CueZ13P17> ^props-instruction-set <S13>)
(<CueZ13P17> ^name |_P17|)
(<S13> ^condition <ScondZ13P17>)
(<ScondZ13P17> ^props-instructions <Z13>)
(<ScondZ13P17> ^name |_P17|)
(<P17> ^lti-name |_P17|)
(<P17> ^prop-type negation)
(<P17> ^attr1 slot1)
(<P17> ^sub1 |_U22|)
(<P17> ^sub1-link <U22>)
(<U22> ^lti-name |_U22|)
(<U22> ^curr-id props$rootstate)
(<U22> ^target-arg id1)
(<U22> ^depth 1)
(<U22> ^chain-attr WM)
(<U22> ^chain-next |done|)
(<Z13> ^action |_P3|)
(<Z13> ^prop-link <P3>)

(<S12> ^name apply*chein*verbal-CWM*lexical*fail)
(<Z12> ^name apply*chein*verbal-CWM*lexical*fail)
(<Z12> ^lti-name |_Z12|)
(<Z12> ^prop-type |instruction|)
(<Z12> ^const <Q12>)
(<Z12> ^cond-count 1)
(<Z12> ^act-count 3)
(<Z12> ^spread-source <S12>)
(<Q12> ^1 chein-verbal-CWM-lexical-fail)
(<Q12> ^2 type)
(<Q12> ^3 N)
(<Z12> ^condition |_P4|)
(<Z12> ^prop-link <P4>)
(<Z12> ^cond-spread-source <CueZ12P4>)
(<CueZ12P4> ^props-instruction-set <S12>)
(<CueZ12P4> ^name |_P4|)
(<S12> ^condition <ScondZ12P4>)
(<ScondZ12P4> ^props-instructions <Z12>)
(<ScondZ12P4> ^name |_P4|)
(<Z12> ^flag |o-supported|)
(<Z12> ^action |_P9|)
(<Z12> ^prop-link <P9>)
(<Z12> ^action |_P14|)
(<Z12> ^prop-link <P14>)
(<Z12> ^action |_P15|)
(<Z12> ^prop-link <P15>)

(<S11> ^name propose*chein*verbal-CWM*lexical*fail)
(<Z11> ^name propose*chein*verbal-CWM*lexical*fail)
(<Z11> ^lti-name |_Z11|)
(<Z11> ^prop-type |instruction|)
(<Z11> ^const <Q11>)
(<Z11> ^cond-count 3)
(<Z11> ^act-count 1)
(<Z11> ^spread-source <S11>)
(<Q11> ^1 chein-verbal-CWM-lexical-fail)
(<Q11> ^2 verbal-CWM)
(<Q11> ^3 error)
(<Q11> ^4 lexdec)
(<Z11> ^condition |_P1|)
(<Z11> ^prop-link <P1>)
(<Z11> ^cond-spread-source <CueZ11P1>)
(<CueZ11P1> ^props-instruction-set <S11>)
(<CueZ11P1> ^name |_P1|)
(<S11> ^condition <ScondZ11P1>)
(<ScondZ11P1> ^props-instructions <Z11>)
(<ScondZ11P1> ^name |_P1|)
(<Z11> ^condition |_P16|)
(<Z11> ^prop-link <P16>)
(<Z11> ^cond-spread-source <CueZ11P16>)
(<CueZ11P16> ^props-instruction-set <S11>)
(<CueZ11P16> ^name |_P16|)
(<S11> ^condition <ScondZ11P16>)
(<ScondZ11P16> ^props-instructions <Z11>)
(<ScondZ11P16> ^name |_P16|)
(<P16> ^lti-name |_P16|)
(<P16> ^prop-type equality)
(<P16> ^attr1 rt-result)
(<P16> ^id2 props$const)
(<P16> ^attr2 3)
(<P16> ^sub1 |_U21|)
(<P16> ^sub1-link <U21>)
(<U21> ^lti-name |_U21|)
(<U21> ^curr-id props$rootstate)
(<U21> ^target-arg id1)
(<U21> ^depth 1)
(<U21> ^chain-attr smem)
(<U21> ^chain-next |done|)
(<Z11> ^condition |_P8|)
(<Z11> ^prop-link <P8>)
(<Z11> ^cond-spread-source <CueZ11P8>)
(<CueZ11P8> ^props-instruction-set <S11>)
(<CueZ11P8> ^name |_P8|)
(<S11> ^condition <ScondZ11P8>)
(<ScondZ11P8> ^props-instructions <Z11>)
(<ScondZ11P8> ^name |_P8|)
(<Z11> ^action |_P3|)
(<Z11> ^prop-link <P3>)

(<S10> ^name apply*chein*verbal-CWM*lexical*success)
(<Z10> ^name apply*chein*verbal-CWM*lexical*success)
(<Z10> ^lti-name |_Z10|)
(<Z10> ^prop-type |instruction|)
(<Z10> ^const <Q10>)
(<Z10> ^cond-count 1)
(<Z10> ^act-count 3)
(<Z10> ^spread-source <S10>)
(<Q10> ^1 chein-verbal-CWM-lexical-success)
(<Q10> ^2 type)
(<Q10> ^3 Y)
(<Z10> ^condition |_P4|)
(<Z10> ^prop-link <P4>)
(<Z10> ^cond-spread-source <CueZ10P4>)
(<CueZ10P4> ^props-instruction-set <S10>)
(<CueZ10P4> ^name |_P4|)
(<S10> ^condition <ScondZ10P4>)
(<ScondZ10P4> ^props-instructions <Z10>)
(<ScondZ10P4> ^name |_P4|)
(<Z10> ^flag |o-supported|)
(<Z10> ^action |_P9|)
(<Z10> ^prop-link <P9>)
(<Z10> ^action |_P14|)
(<Z10> ^prop-link <P14>)
(<P14> ^lti-name |_P14|)
(<P14> ^prop-type add)
(<P14> ^attr1 slot2)
(<P14> ^id2 props$const)
(<P14> ^attr2 3)
(<P14> ^sub1 |_U18|)
(<P14> ^sub1-link <U18>)
(<U18> ^lti-name |_U18|)
(<U18> ^curr-id props$rootstate)
(<U18> ^target-arg id1)
(<U18> ^depth 2)
(<U18> ^chain-attr AC)
(<U18> ^chain-next <U19>)
(<U19> ^chain-attr action)
(<U19> ^chain-next |done|)
(<Z10> ^action |_P15|)
(<Z10> ^prop-link <P15>)
(<P15> ^lti-name |_P15|)
(<P15> ^prop-type add)
(<P15> ^attr1 clear-rt)
(<P15> ^id2 props$const)
(<P15> ^attr2 1)
(<P15> ^sub1 |_U20|)
(<P15> ^sub1-link <U20>)
(<U20> ^lti-name |_U20|)
(<U20> ^curr-id props$rootstate)
(<U20> ^target-arg id1)
(<U20> ^depth 1)
(<U20> ^chain-attr G)
(<U20> ^chain-next |done|)

(<S9> ^name propose*chein*verbal-CWM*lexical*success)
(<Z9> ^name propose*chein*verbal-CWM*lexical*success)
(<Z9> ^lti-name |_Z9|)
(<Z9> ^prop-type |instruction|)
(<Z9> ^const <Q9>)
(<Z9> ^cond-count 3)
(<Z9> ^act-count 1)
(<Z9> ^spread-source <S9>)
(<Q9> ^1 chein-verbal-CWM-lexical-success)
(<Q9> ^2 verbal-CWM)
(<Q9> ^3 yes)
(<Q9> ^4 lexdec)
(<Z9> ^condition |_P1|)
(<Z9> ^prop-link <P1>)
(<Z9> ^cond-spread-source <CueZ9P1>)
(<CueZ9P1> ^props-instruction-set <S9>)
(<CueZ9P1> ^name |_P1|)
(<S9> ^condition <ScondZ9P1>)
(<ScondZ9P1> ^props-instructions <Z9>)
(<ScondZ9P1> ^name |_P1|)
(<Z9> ^condition |_P13|)
(<Z9> ^prop-link <P13>)
(<Z9> ^cond-spread-source <CueZ9P13>)
(<CueZ9P13> ^props-instruction-set <S9>)
(<CueZ9P13> ^name |_P13|)
(<S9> ^condition <ScondZ9P13>)
(<ScondZ9P13> ^props-instructions <Z9>)
(<ScondZ9P13> ^name |_P13|)
(<P13> ^lti-name |_P13|)
(<P13> ^prop-type equality)
(<P13> ^attr1 slot3)
(<P13> ^id2 props$const)
(<P13> ^attr2 3)
(<P13> ^sub1 |_U17|)
(<P13> ^sub1-link <U17>)
(<U17> ^lti-name |_U17|)
(<U17> ^curr-id props$rootstate)
(<U17> ^target-arg id1)
(<U17> ^depth 1)
(<U17> ^chain-attr RT)
(<U17> ^chain-next |done|)
(<Z9> ^condition |_P8|)
(<Z9> ^prop-link <P8>)
(<Z9> ^cond-spread-source <CueZ9P8>)
(<CueZ9P8> ^props-instruction-set <S9>)
(<CueZ9P8> ^name |_P8|)
(<S9> ^condition <ScondZ9P8>)
(<ScondZ9P8> ^props-instructions <Z9>)
(<ScondZ9P8> ^name |_P8|)
(<Z9> ^action |_P3|)
(<Z9> ^prop-link <P3>)

(<S8> ^name apply*chein*verbal-CWM*lexical*retrieve)
(<Z8> ^name apply*chein*verbal-CWM*lexical*retrieve)
(<Z8> ^lti-name |_Z8|)
(<Z8> ^prop-type |instruction|)
(<Z8> ^const <Q8>)
(<Z8> ^cond-count 1)
(<Z8> ^act-count 2)
(<Z8> ^spread-source <S8>)
(<Q8> ^1 chein-verbal-CWM-lexical-retrieve)
(<Q8> ^2 is-word)
(<Z8> ^condition |_P4|)
(<Z8> ^prop-link <P4>)
(<Z8> ^cond-spread-source <CueZ8P4>)
(<CueZ8P4> ^props-instruction-set <S8>)
(<CueZ8P4> ^name |_P4|)
(<S8> ^condition <ScondZ8P4>)
(<ScondZ8P4> ^props-instructions <Z8>)
(<ScondZ8P4> ^name |_P4|)
(<Z8> ^flag |o-supported|)
(<Z8> ^action |_P11|)
(<Z8> ^prop-link <P11>)
(<P11> ^lti-name |_P11|)
(<P11> ^prop-type add)
(<P11> ^attr1 slot1)
(<P11> ^id2 props$const)
(<P11> ^attr2 2)
(<P11> ^sub1 |_U12|)
(<P11> ^sub1-link <U12>)
(<U12> ^lti-name |_U12|)
(<U12> ^curr-id props$rootstate)
(<U12> ^target-arg id1)
(<U12> ^depth 2)
(<U12> ^chain-attr Q)
(<U12> ^chain-next <U13>)
(<U13> ^chain-attr query)
(<U13> ^chain-next |done|)
(<Z8> ^action |_P12|)
(<Z8> ^prop-link <P12>)
(<P12> ^lti-name |_P12|)
(<P12> ^prop-type add)
(<P12> ^attr1 slot2)
(<P12> ^attr2 slot2)
(<P12> ^sub1 |_U14|)
(<P12> ^sub1-link <U14>)
(<U14> ^lti-name |_U14|)
(<U14> ^curr-id props$rootstate)
(<U14> ^target-arg id1)
(<U14> ^depth 2)
(<U14> ^chain-attr Q)
(<U14> ^chain-next <U15>)
(<U15> ^chain-attr query)
(<U15> ^chain-next |done|)
(<P12> ^sub2 |_U16|)
(<P12> ^sub2-link <U16>)
(<U16> ^lti-name |_U16|)
(<U16> ^curr-id props$rootstate)
(<U16> ^target-arg id2)
(<U16> ^depth 1)
(<U16> ^chain-attr V)
(<U16> ^chain-next |done|)

(<S7> ^name propose*chein*verbal-CWM*lexical*retrieve)
(<Z7> ^name propose*chein*verbal-CWM*lexical*retrieve)
(<Z7> ^lti-name |_Z7|)
(<Z7> ^prop-type |instruction|)
(<Z7> ^const <Q7>)
(<Z7> ^cond-count 4)
(<Z7> ^act-count 1)
(<Z7> ^spread-source <S7>)
(<Q7> ^1 chein-verbal-CWM-lexical-retrieve)
(<Q7> ^2 verbal-CWM)
(<Q7> ^3 word)
(<Q7> ^4 lexdec)
(<Z7> ^condition |_P1|)
(<Z7> ^prop-link <P1>)
(<Z7> ^cond-spread-source <CueZ7P1>)
(<CueZ7P1> ^props-instruction-set <S7>)
(<CueZ7P1> ^name |_P1|)
(<S7> ^condition <ScondZ7P1>)
(<ScondZ7P1> ^props-instructions <Z7>)
(<ScondZ7P1> ^name |_P1|)
(<Z7> ^condition |_P7|)
(<Z7> ^prop-link <P7>)
(<Z7> ^cond-spread-source <CueZ7P7>)
(<CueZ7P7> ^props-instruction-set <S7>)
(<CueZ7P7> ^name |_P7|)
(<S7> ^condition <ScondZ7P7>)
(<ScondZ7P7> ^props-instructions <Z7>)
(<ScondZ7P7> ^name |_P7|)
(<Z7> ^condition |_P10|)
(<Z7> ^prop-link <P10>)
(<Z7> ^cond-spread-source <CueZ7P10>)
(<CueZ7P10> ^props-instruction-set <S7>)
(<CueZ7P10> ^name |_P10|)
(<S7> ^condition <ScondZ7P10>)
(<ScondZ7P10> ^props-instructions <Z7>)
(<ScondZ7P10> ^name |_P10|)
(<P10> ^lti-name |_P10|)
(<P10> ^prop-type negation)
(<P10> ^attr1 rt-result)
(<P10> ^sub1 |_U11|)
(<P10> ^sub1-link <U11>)
(<U11> ^lti-name |_U11|)
(<U11> ^curr-id props$rootstate)
(<U11> ^target-arg id1)
(<U11> ^depth 1)
(<U11> ^chain-attr smem)
(<U11> ^chain-next |done|)
(<Z7> ^condition |_P8|)
(<Z7> ^prop-link <P8>)
(<Z7> ^cond-spread-source <CueZ7P8>)
(<CueZ7P8> ^props-instruction-set <S7>)
(<CueZ7P8> ^name |_P8|)
(<S7> ^condition <ScondZ7P8>)
(<ScondZ7P8> ^props-instructions <Z7>)
(<ScondZ7P8> ^name |_P8|)
(<Z7> ^action |_P3|)
(<Z7> ^prop-link <P3>)

(<S6> ^name apply*chein*verbal-CWM*stop-rehearsal)
(<Z6> ^name apply*chein*verbal-CWM*stop-rehearsal)
(<Z6> ^lti-name |_Z6|)
(<Z6> ^prop-type |instruction|)
(<Z6> ^const <Q6>)
(<Z6> ^cond-count 1)
(<Z6> ^act-count 1)
(<Z6> ^spread-source <S6>)
(<Q6> ^1 chein-verbal-CWM-stop-rehearsal)
(<Q6> ^2 lexdec)
(<Z6> ^condition |_P4|)
(<Z6> ^prop-link <P4>)
(<Z6> ^cond-spread-source <CueZ6P4>)
(<CueZ6P4> ^props-instruction-set <S6>)
(<CueZ6P4> ^name |_P4|)
(<S6> ^condition <ScondZ6P4>)
(<ScondZ6P4> ^props-instructions <Z6>)
(<ScondZ6P4> ^name |_P4|)
(<Z6> ^flag |o-supported|)
(<Z6> ^action |_P5|)
(<Z6> ^prop-link <P5>)

(<S5> ^name propose*chein*verbal-CWM*stop-rehearsal)
(<Z5> ^name propose*chein*verbal-CWM*stop-rehearsal)
(<Z5> ^lti-name |_Z5|)
(<Z5> ^prop-type |instruction|)
(<Z5> ^const <Q5>)
(<Z5> ^cond-count 3)
(<Z5> ^act-count 1)
(<Z5> ^spread-source <S5>)
(<Q5> ^1 chein-verbal-CWM-stop-rehearsal)
(<Q5> ^2 verbal-CWM)
(<Q5> ^3 word)
(<Q5> ^4 rehearse)
(<Z5> ^condition |_P1|)
(<Z5> ^prop-link <P1>)
(<Z5> ^cond-spread-source <CueZ5P1>)
(<CueZ5P1> ^props-instruction-set <S5>)
(<CueZ5P1> ^name |_P1|)
(<S5> ^condition <ScondZ5P1>)
(<ScondZ5P1> ^props-instructions <Z5>)
(<ScondZ5P1> ^name |_P1|)
(<Z5> ^condition |_P7|)
(<Z5> ^prop-link <P7>)
(<Z5> ^cond-spread-source <CueZ5P7>)
(<CueZ5P7> ^props-instruction-set <S5>)
(<CueZ5P7> ^name |_P7|)
(<S5> ^condition <ScondZ5P7>)
(<ScondZ5P7> ^props-instructions <Z5>)
(<ScondZ5P7> ^name |_P7|)
(<Z5> ^condition |_P8|)
(<Z5> ^prop-link <P8>)
(<Z5> ^cond-spread-source <CueZ5P8>)
(<CueZ5P8> ^props-instruction-set <S5>)
(<CueZ5P8> ^name |_P8|)
(<S5> ^condition <ScondZ5P8>)
(<ScondZ5P8> ^props-instructions <Z5>)
(<ScondZ5P8> ^name |_P8|)
(<Z5> ^action |_P3|)
(<Z5> ^prop-link <P3>)

(<S4> ^name apply*chein*verbal-CWM*wait)
(<Z4> ^name apply*chein*verbal-CWM*wait)
(<Z4> ^lti-name |_Z4|)
(<Z4> ^prop-type |instruction|)
(<Z4> ^const <Q4>)
(<Z4> ^cond-count 1)
(<Z4> ^act-count 1)
(<Z4> ^spread-source <S4>)
(<Q4> ^1 chein-verbal-CWM-wait)
(<Q4> ^2 wait)
(<Z4> ^condition |_P4|)
(<Z4> ^prop-link <P4>)
(<Z4> ^cond-spread-source <CueZ4P4>)
(<CueZ4P4> ^props-instruction-set <S4>)
(<CueZ4P4> ^name |_P4|)
(<S4> ^condition <ScondZ4P4>)
(<ScondZ4P4> ^props-instructions <Z4>)
(<ScondZ4P4> ^name |_P4|)
(<Z4> ^flag |o-supported|)
(<Z4> ^action |_P9|)
(<Z4> ^prop-link <P9>)
(<P9> ^lti-name |_P9|)
(<P9> ^prop-type add)
(<P9> ^attr1 slot1)
(<P9> ^id2 props$const)
(<P9> ^attr2 2)
(<P9> ^sub1 |_U9|)
(<P9> ^sub1-link <U9>)
(<U9> ^lti-name |_U9|)
(<U9> ^curr-id props$rootstate)
(<U9> ^target-arg id1)
(<U9> ^depth 2)
(<U9> ^chain-attr AC)
(<U9> ^chain-next <U10>)
(<U10> ^chain-attr action)
(<U10> ^chain-next |done|)

(<S3> ^name propose*chein*verbal-CWM*wait)
(<Z3> ^name propose*chein*verbal-CWM*wait)
(<Z3> ^lti-name |_Z3|)
(<Z3> ^prop-type |instruction|)
(<Z3> ^const <Q3>)
(<Z3> ^cond-count 3)
(<Z3> ^act-count 1)
(<Z3> ^spread-source <S3>)
(<Q3> ^1 chein-verbal-CWM-wait)
(<Q3> ^2 verbal-CWM)
(<Q3> ^3 pending)
(<Q3> ^4 lexdec)
(<Z3> ^condition |_P1|)
(<Z3> ^prop-link <P1>)
(<Z3> ^cond-spread-source <CueZ3P1>)
(<CueZ3P1> ^props-instruction-set <S3>)
(<CueZ3P1> ^name |_P1|)
(<S3> ^condition <ScondZ3P1>)
(<ScondZ3P1> ^props-instructions <Z3>)
(<ScondZ3P1> ^name |_P1|)
(<Z3> ^condition |_P7|)
(<Z3> ^prop-link <P7>)
(<Z3> ^cond-spread-source <CueZ3P7>)
(<CueZ3P7> ^props-instruction-set <S3>)
(<CueZ3P7> ^name |_P7|)
(<S3> ^condition <ScondZ3P7>)
(<ScondZ3P7> ^props-instructions <Z3>)
(<ScondZ3P7> ^name |_P7|)
(<P7> ^lti-name |_P7|)
(<P7> ^prop-type equality)
(<P7> ^attr1 slot1)
(<P7> ^id2 props$const)
(<P7> ^attr2 3)
(<P7> ^sub1 |_U7|)
(<P7> ^sub1-link <U7>)
(<U7> ^lti-name |_U7|)
(<U7> ^curr-id props$rootstate)
(<U7> ^target-arg id1)
(<U7> ^depth 1)
(<U7> ^chain-attr V)
(<U7> ^chain-next |done|)
(<Z3> ^condition |_P8|)
(<Z3> ^prop-link <P8>)
(<Z3> ^cond-spread-source <CueZ3P8>)
(<CueZ3P8> ^props-instruction-set <S3>)
(<CueZ3P8> ^name |_P8|)
(<S3> ^condition <ScondZ3P8>)
(<ScondZ3P8> ^props-instructions <Z3>)
(<ScondZ3P8> ^name |_P8|)
(<P8> ^lti-name |_P8|)
(<P8> ^prop-type equality)
(<P8> ^attr1 Gcontrol)
(<P8> ^id2 props$const)
(<P8> ^attr2 4)
(<P8> ^sub1 |_U8|)
(<P8> ^sub1-link <U8>)
(<U8> ^lti-name |_U8|)
(<U8> ^curr-id props$rootstate)
(<U8> ^target-arg id1)
(<U8> ^depth 1)
(<U8> ^chain-attr G)
(<U8> ^chain-next |done|)
(<Z3> ^action |_P3|)
(<Z3> ^prop-link <P3>)

(<S2> ^name apply*chein*verbal-CWM*init)
(<Z2> ^name apply*chein*verbal-CWM*init)
(<Z2> ^lti-name |_Z2|)
(<Z2> ^prop-type |instruction|)
(<Z2> ^const <Q2>)
(<Z2> ^cond-count 1)
(<Z2> ^act-count 2)
(<Z2> ^spread-source <S2>)
(<Q2> ^1 chein-verbal-CWM-init)
(<Q2> ^2 lexdec)
(<Z2> ^condition |_P4|)
(<Z2> ^prop-link <P4>)
(<Z2> ^cond-spread-source <CueZ2P4>)
(<CueZ2P4> ^props-instruction-set <S2>)
(<CueZ2P4> ^name |_P4|)
(<S2> ^condition <ScondZ2P4>)
(<ScondZ2P4> ^props-instructions <Z2>)
(<ScondZ2P4> ^name |_P4|)
(<P4> ^lti-name |_P4|)
(<P4> ^prop-type equality)
(<P4> ^attr1 name)
(<P4> ^id2 props$const)
(<P4> ^attr2 1)
(<P4> ^sub1 |_U4|)
(<P4> ^sub1-link <U4>)
(<U4> ^lti-name |_U4|)
(<U4> ^curr-id props$rootstate)
(<U4> ^target-arg id1)
(<U4> ^depth 1)
(<U4> ^chain-attr operator)
(<U4> ^chain-next |done|)
(<Z2> ^flag |o-supported|)
(<Z2> ^action |_P5|)
(<Z2> ^prop-link <P5>)
(<P5> ^lti-name |_P5|)
(<P5> ^prop-type add)
(<P5> ^attr1 Gcontrol)
(<P5> ^id2 props$const)
(<P5> ^attr2 2)
(<P5> ^sub1 |_U5|)
(<P5> ^sub1-link <U5>)
(<U5> ^lti-name |_U5|)
(<U5> ^curr-id props$rootstate)
(<U5> ^target-arg id1)
(<U5> ^depth 1)
(<U5> ^chain-attr G)
(<U5> ^chain-next |done|)
(<Z2> ^action |_P6|)
(<Z2> ^prop-link <P6>)
(<P6> ^lti-name |_P6|)
(<P6> ^prop-type add)
(<P6> ^attr1 Gtop)
(<P6> ^id2 props$rootstate)
(<P6> ^attr2 WM)
(<P6> ^sub1 |_U6|)
(<P6> ^sub1-link <U6>)
(<U6> ^lti-name |_U6|)
(<U6> ^curr-id props$rootstate)
(<U6> ^target-arg id1)
(<U6> ^depth 1)
(<U6> ^chain-attr G)
(<U6> ^chain-next |done|)

(<S1> ^name propose*chein*verbal-CWM*init)
(<Z1> ^name propose*chein*verbal-CWM*init)
(<Z1> ^lti-name |_Z1|)
(<Z1> ^prop-type |instruction|)
(<Z1> ^const <Q1>)
(<Z1> ^cond-count 2)
(<Z1> ^act-count 1)
(<Z1> ^spread-source <S1>)
(<Q1> ^1 chein-verbal-CWM-init)
(<Q1> ^2 verbal-CWM)
(<Z1> ^condition |_P1|)
(<Z1> ^prop-link <P1>)
(<Z1> ^cond-spread-source <CueZ1P1>)
(<CueZ1P1> ^props-instruction-set <S1>)
(<CueZ1P1> ^name |_P1|)
(<S1> ^condition <ScondZ1P1>)
(<ScondZ1P1> ^props-instructions <Z1>)
(<ScondZ1P1> ^name |_P1|)
(<P1> ^lti-name |_P1|)
(<P1> ^prop-type equality)
(<P1> ^attr1 Gtask)
(<P1> ^id2 props$const)
(<P1> ^attr2 2)
(<P1> ^sub1 |_U1|)
(<P1> ^sub1-link <U1>)
(<U1> ^lti-name |_U1|)
(<U1> ^curr-id props$rootstate)
(<U1> ^target-arg id1)
(<U1> ^depth 1)
(<U1> ^chain-attr G)
(<U1> ^chain-next |done|)
(<Z1> ^condition |_P2|)
(<Z1> ^prop-link <P2>)
(<Z1> ^cond-spread-source <CueZ1P2>)
(<CueZ1P2> ^props-instruction-set <S1>)
(<CueZ1P2> ^name |_P2|)
(<S1> ^condition <ScondZ1P2>)
(<ScondZ1P2> ^props-instructions <Z1>)
(<ScondZ1P2> ^name |_P2|)
(<P2> ^lti-name |_P2|)
(<P2> ^prop-type negation)
(<P2> ^attr1 Gcontrol)
(<P2> ^sub1 |_U2|)
(<P2> ^sub1-link <U2>)
(<U2> ^lti-name |_U2|)
(<U2> ^curr-id props$rootstate)
(<U2> ^target-arg id1)
(<U2> ^depth 1)
(<U2> ^chain-attr G)
(<U2> ^chain-next |done|)
(<Z1> ^action |_P3|)
(<Z1> ^prop-link <P3>)
(<P3> ^lti-name |_P3|)
(<P3> ^prop-type acceptable)
(<P3> ^attr1 1)
(<P3> ^sub1 |_U3|)
(<P3> ^sub1-link <U3>)
(<U3> ^lti-name |_U3|)
(<U3> ^curr-id props$rootstate)
(<U3> ^target-arg id1)
(<U3> ^depth 1)
(<U3> ^chain-attr props$const)
(<U3> ^chain-next |done|)

}
