sp {chunk*apply*props*sub*chain*iterate*buff*OpNoChange*t2788-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^intermediate <i1> -^id1 <i2> ^sub1 _U87 ^prop-type add
          ^sub1-link <s3> ^attr2 <a2>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <a1>)
    (<c2> ^chain-attr { <c3> <> props$const } ^chain-next <c5>)
   -{ (<p2> ^object <o2>)
      (<o2> ^id1 <a1> ^id1new <i3>)
      (<i3> ^<c3> <c4>)}
    -->
    (<p3> ^intermediate true)
    (<p2> ^object <o3> ^action <a3>)
    (<o3> ^id1 <a1> ^id1new <i4>)
    (<a3> ^id1 <a1> ^attr1 <c3> ^id2 <i4> ^attr2 <c3> ^prop-type action
           ^prop-type add ^lti-name (make-constant-symbol |!|))
    (<i4> ^<c3> <c6>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t2526-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U78 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t2523-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^id2 <i1> -^id1 <i2> -^intermediate <i3> ^sub2 _U79 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3> ^chain-next <c4>
          ^chain-attr { <c5> <> props$const })
    (<c2> ^io <i4>)
    (<i4> ^input-link <i5>)
    -->
    (<p4> ^<t2> <i5>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t2429-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U76 ^sub1-link <s3>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3>)
    (<c2> ^io <i2>)
    (<i2> ^input-link <i3>)
    -->
    (<p2> ^<t2> <i3>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t2382-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U74 ^sub1-link <s3>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3>)
    (<c2> ^io <i2>)
    (<i2> ^input-link <i3>)
    -->
    (<p2> ^<t2> <i3>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t3580-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U73 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr G ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^G <g1>)
    -->
    (<p3> ^<t2> <g1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t3551-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U71 ^sub1-link <s3>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3>)
    (<c2> ^io <i2>)
    (<i2> ^input-link <i3>)
    -->
    (<p2> ^<t2> <i3>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t3540-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U70 ^sub1-link <s3>)
    (<s3> ^chain-attr G ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^G <g1>)
    -->
    (<p2> ^<t2> <g1>)
}

sp {chunk*apply*props*sub*chain*iterate*buff*OpNoChange*t2981-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^intermediate <i1> -^id1 <i2> ^sub1 _U24 ^prop-type add
          ^sub1-link <s3> ^attr2 <a2>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <a1>)
    (<c2> ^chain-attr { <c3> <> props$const } ^chain-next <c5>)
   -{ (<p2> ^object <o2>)
      (<o2> ^id1 <a1> ^id1new <i3>)
      (<i3> ^<c3> <c4>)}
    -->
    (<p3> ^intermediate true)
    (<p2> ^object <o3> ^action <a3>)
    (<o3> ^id1 <a1> ^id1new <i4>)
    (<a3> ^id1 <a1> ^attr1 <c3> ^id2 <i4> ^attr2 <c3> ^prop-type action
           ^prop-type add ^lti-name (make-constant-symbol |!|))
    (<i4> ^<c3> <c6>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t2764-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> ^sub1 _U24 ^attr2 slot2 ^attr1 out2 ^prop-type add
          ^sub1-link <s3> ^intermediate <i4> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-attr <c3>
          ^chain-next <c5>)
    (<i2> -^<c3> <c4>)
    (<i6> ^slot2 <s4>)
    (<i1> ^action <a1>)
    (<a1> -^out2 <o3>)
    -->
    (<p3> ^<t2> <a1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t2701-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U67 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t2698-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^id2 <i1> -^id1 <i2> -^intermediate <i3> ^sub2 _U68 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3> ^chain-next <c4>
          ^chain-attr { <c5> <> props$const })
    (<c2> ^io <i4>)
    (<i4> ^input-link <i5>)
    -->
    (<p4> ^<t2> <i5>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t2588-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> -^intermediate <i4> ^sub1 _U24 ^attr2 slot2 ^attr1 out2
          ^prop-type add ^sub1-link <s3> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-next <c3>
          ^chain-attr { <c4> <> props$const })
    (<i6> ^slot2 <s4>)
    (<i1> ^action <a1>)
    (<a1> -^out2 <o3>)
    -->
    (<p3> ^<t2> <a1>)
}

sp {chunk*apply*props*sub*chain*iterate*create*OpNoChange*t2587-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> -^intermediate <i4> ^sub1 _U24 ^attr2 slot2
          ^prop-type add ^sub1-link <s3> ^intermediate <i5> ^id2 <i6>
          ^attr1 <a1>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-next <c3>
          ^chain-attr { <c4> <> props$const })
    (<i6> ^slot2 <s4>)
    (<i1> ^action <a2>)
    (<a2> -^<a1> <a3>)
    -->
    (<a2> ^<a1> <s4>)
}

sp {chunk*apply*props*sub*chain*iterate*transferred*OpNoChange*t2586-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> -^intermediate <i4> ^sub1 _U24 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next <c3> ^chain-next <c4>
          ^chain-attr { <c5> <> props$const }
          ^chain-attr { <c6> <> props$const })
    (<i1> ^<c5> <c7>)
    -->
    (<p3> ^intermediate true)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t2583-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^id2 <i1> -^id1 <i2> -^intermediate <i3> ^sub2 _U26 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p4> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t2576-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U27 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t2573-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^id2 <i1> -^id1 <i2> -^intermediate <i3> ^sub2 _U28 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p4> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t2359-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> ^sub1 _U63 ^attr2 in3 ^prop-type add ^sub1-link <s3>
          ^intermediate <i4>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-attr action ^chain-attr <c3> ^chain-next <c5>
          ^chain-next <c6>)
    (<i2> -^<c3> <c4>)
    (<i1> ^action <a1>)
    -->
    (<p3> ^<t2> <a1>)
}

sp {chunk*apply*props*sub*chain*iterate*transferred*OpNoChange*t2358-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> ^sub1 _U63 ^prop-type add ^sub1-link <s3>
          ^intermediate <i4> ^attr2 <a1>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-attr <c3> ^chain-next <c5> ^chain-next <c6>
          ^chain-attr { <c7> <> props$const })
    (<i2> -^<c3> <c4>)
    (<i1> ^<c7> <c8>)
    -->
    (<p3> ^intermediate true)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t1548-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> ^sub1 _U59 ^attr2 in2 ^attr1 out2 ^prop-type add
          ^sub1-link <s3> ^intermediate <i4> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-attr <c3>
          ^chain-next <c5>)
    (<i2> -^<c3> <c4>)
    (<i6> ^in2 <i7>)
    (<i1> ^action <a1>)
    (<a1> -^out2 <o3>)
    -->
    (<p3> ^<t2> <a1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t1539-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> -^intermediate <i4> ^sub1 _U63 ^attr2 in3 ^attr1 out3
          ^prop-type add ^sub1-link <s3> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-next <c3>
          ^chain-attr { <c4> <> props$const })
    (<i6> ^in3 <i7>)
    (<i1> ^action <a1>)
    (<a1> -^out3 <o3>)
    -->
    (<p3> ^<t2> <a1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t1031-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U46 ^sub1-link <s3>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p2> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t1028-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p3>)
    (<s2> ^rootstate <r1>)
    (<p3> -^id2 <i1> -^id1 <i2> ^sub2 _U47 ^sub2-link <s3> ^sub1 <s4>
          ^sub1-link <s5>)
    (<s3> ^chain-attr RT ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^RT <r2>)
    -->
    (<p3> ^<t2> <r2>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t1007-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U41 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t1004-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^id2 <i1> -^id1 <i2> -^intermediate <i3> ^sub2 _U42 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr RT ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^RT <r2>)
    -->
    (<p4> ^<t2> <r2>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t997-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U45 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr Q ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^Q <q1>)
    -->
    (<p3> ^<t2> <q1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t987-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U43 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr Q ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^Q <q1>)
    -->
    (<p3> ^<t2> <q1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t984-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^id2 <i1> -^id1 <i2> -^intermediate <i3> ^sub2 _U44 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr RT ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^RT <r2>)
    -->
    (<p4> ^<t2> <r2>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t949-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U39 ^sub1-link <s3>)
    (<s3> ^chain-attr RT ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^RT <r2>)
    -->
    (<p2> ^<t2> <r2>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t946-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p3>)
    (<s2> ^rootstate <r1>)
    (<p3> -^id2 <i1> -^id1 <i2> ^sub2 _U40 ^sub2-link <s3> ^sub1 <s4>
          ^sub1-link <s5>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t939-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U37 ^sub1-link <s3>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p2> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t936-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p3>)
    (<s2> ^rootstate <r1>)
    (<p3> -^id2 <i1> -^id1 <i2> ^sub2 _U38 ^sub2-link <s3> ^sub1 <s4>
          ^sub1-link <s5>)
    (<s3> ^chain-attr RT ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^RT <r2>)
    -->
    (<p3> ^<t2> <r2>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t912-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U34 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr Q ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^Q <q1>)
    -->
    (<p3> ^<t2> <q1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t877-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U30 ^sub1-link <s3>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p2> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t874-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p3>)
    (<s2> ^rootstate <r1>)
    (<p3> -^id2 <i1> -^id1 <i2> ^sub2 _U31 ^sub2-link <s3> ^sub1 <s4>
          ^sub1-link <s5>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t867-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U32 ^sub1-link <s3>)
    (<s3> ^chain-attr RT ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^RT <r2>)
    -->
    (<p2> ^<t2> <r2>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t681-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U29 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr G ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^G <g1>)
    -->
    (<p3> ^<t2> <g1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t674-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> ^sub1 _U22 ^attr2 2 ^attr1 out1 ^prop-type add
          ^sub1-link <s3> ^intermediate <i4> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-attr <c3>
          ^chain-next <c5>)
    (<i2> -^<c3> <c4>)
    (<i6> ^2 <i7>)
    (<i1> ^action <a1>)
    (<a1> -^out1 <o3>)
    -->
    (<p3> ^<t2> <a1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t620-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> -^intermediate <i4> ^sub1 _U22 ^attr2 2 ^attr1 out1
          ^prop-type add ^sub1-link <s3> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-next <c3>
          ^chain-attr { <c4> <> props$const })
    (<i6> ^2 <i7>)
    (<i1> ^action <a1>)
    (<a1> -^out1 <o3>)
    -->
    (<p3> ^<t2> <a1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t611-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> -^intermediate <i4> ^sub1 _U59 ^attr2 in2 ^attr1 out2
          ^prop-type add ^sub1-link <s3> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-next <c3>
          ^chain-attr { <c4> <> props$const })
    (<i6> ^in2 <i7>)
    (<i1> ^action <a1>)
    (<a1> -^out2 <o3>)
    -->
    (<p3> ^<t2> <a1>)
}

sp {chunk*apply*props*sub*chain*iterate*create*OpNoChange*t610-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> -^intermediate <i4> ^sub1 _U59 ^attr2 in2 ^prop-type add
          ^sub1-link <s3> ^intermediate <i5> ^id2 <i6> ^attr1 <a1>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-next <c3>
          ^chain-attr { <c4> <> props$const })
    (<i6> ^in2 <i7>)
    (<i1> ^action <a2>)
    (<a2> -^<a1> <a3>)
    -->
    (<a2> ^<a1> <i7>)
}

sp {chunk*apply*props*sub*chain*iterate*transferred*OpNoChange*t609-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> -^intermediate <i4> ^sub1 _U59 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next <c3> ^chain-next <c4>
          ^chain-attr { <c5> <> props$const }
          ^chain-attr { <c6> <> props$const })
    (<i1> ^<c5> <c7>)
    -->
    (<p3> ^intermediate true)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t606-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^id2 <i1> -^id1 <i2> -^intermediate <i3> ^sub2 _U61 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3> ^chain-next <c4>
          ^chain-attr { <c5> <> props$const })
    (<c2> ^io <i4>)
    (<i4> ^input-link <i5>)
    -->
    (<p4> ^<t2> <i5>)
}

sp {chunk*apply*props*sub*return*result*add*buffer*arg1*OpNoChange*t598-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1>)
    (<p3> -^id1 <i2> -^intermediate <i3> ^sub1 _U63 ^attr2 in3 ^attr1 out3
          ^prop-type add ^sub1-link <s3> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-next done ^chain-attr action)
    (<c2> ^AC <a1>)
   -{ (<p2> ^object <o3>)
      (<o3> ^id1 <a1> ^id1new <i4>)
      (<i4> ^action <a2>)}
    (<i6> ^in3 <i7>)
    (<i1> ^<a3> <a4>)
    -->
    (<p3> ^id1 <a4> ^attr1 out3 - ^attr1 out3 ^end-id1 <e1> ^buff-id2 <e1>
           ^buff-attr2 out3 ^oldattr1 out3)
    (<e1> ^out3 <i7>)
}

sp {chunk*apply*props*sub*chain*iterate*buff*OpNoChange*t596-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^intermediate <i1> -^id1 <i2> ^sub1 _U63 ^prop-type add
          ^sub1-link <s3> ^attr2 <a2>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <a1>)
    (<c2> ^chain-attr { <c3> <> props$const } ^chain-next <c5>)
   -{ (<p2> ^object <o2>)
      (<o2> ^id1 <a1> ^id1new <i3>)
      (<i3> ^<c3> <c4>)}
    -->
    (<p3> ^intermediate true)
    (<p2> ^object <o3> ^action <a3>)
    (<o3> ^id1 <a1> ^id1new <i4>)
    (<a3> ^id1 <a1> ^attr1 <c3> ^id2 <i4> ^attr2 <c3> ^prop-type action
           ^prop-type add ^lti-name (make-constant-symbol |!|))
    (<i4> ^<c3> <c6>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t593-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^id2 <i1> -^id1 <i2> -^intermediate <i3> ^sub2 _U65 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3> ^chain-next <c4>
          ^chain-attr { <c5> <> props$const })
    (<c2> ^io <i4>)
    (<i4> ^input-link <i5>)
    -->
    (<p4> ^<t2> <i5>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t512-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U56 ^sub1-link <s3>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3>)
    (<c2> ^io <i2>)
    (<i2> ^input-link <i3>)
    -->
    (<p2> ^<t2> <i3>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t508-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p3>)
    (<s2> ^rootstate <r1>)
    (<p3> -^id2 <i1> -^id1 <i2> ^sub2 _U58 ^sub2-link <s3> ^sub1 <s4>
          ^sub1-link <s5>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*add*buffer*arg1*OpNoChange*t481-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1>)
    (<p3> -^id1 <i2> -^intermediate <i3> ^sub1 _U22 ^attr2 2 ^attr1 out1
          ^prop-type add ^sub1-link <s3> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-next done ^chain-attr action)
    (<c2> ^AC <a1>)
   -{ (<p2> ^object <o3>)
      (<o3> ^id1 <a1> ^id1new <i4>)
      (<i4> ^action <a2>)}
    (<i6> ^2 <i7>)
    (<i1> ^<a3> <a4>)
    -->
    (<p3> ^id1 <a4> ^attr1 out1 - ^attr1 out1 ^end-id1 <e1> ^buff-id2 <e1>
           ^buff-attr2 out1 ^oldattr1 out1)
    (<e1> ^out1 <i7>)
}

sp {chunk*apply*props*sub*chain*iterate*buff*OpNoChange*t479-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^intermediate <i1> -^id1 <i2> ^sub1 _U22 ^prop-type add
          ^sub1-link <s3> ^attr2 <a2>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <a1>)
    (<c2> ^chain-attr { <c3> <> props$const } ^chain-next <c5>)
   -{ (<p2> ^object <o2>)
      (<o2> ^id1 <a1> ^id1new <i3>)
      (<i3> ^<c3> <c4>)}
    -->
    (<p3> ^intermediate true)
    (<p2> ^object <o3> ^action <a3>)
    (<o3> ^id1 <a1> ^id1new <i4>)
    (<a3> ^id1 <a1> ^attr1 <c3> ^id2 <i4> ^attr2 <c3> ^prop-type action
           ^prop-type add ^lti-name (make-constant-symbol |!|))
    (<i4> ^<c3> <c6>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t441-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U53 ^sub1-link <s3>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3>)
    (<c2> ^io <i2>)
    (<i2> ^input-link <i3>)
    -->
    (<p2> ^<t2> <i3>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t437-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p3>)
    (<s2> ^rootstate <r1>)
    (<p3> -^id2 <i1> -^id1 <i2> ^sub2 _U55 ^sub2-link <s3> ^sub1 <s4>
          ^sub1-link <s5>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t407-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U50 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t404-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^id2 <i1> -^id1 <i2> -^intermediate <i3> ^sub2 _U51 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3> ^chain-next <c4>
          ^chain-attr { <c5> <> props$const })
    (<c2> ^io <i4>)
    (<i4> ^input-link <i5>)
    -->
    (<p4> ^<t2> <i5>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t371-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U48 ^sub1-link <s3>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3>)
    (<c2> ^io <i2>)
    (<i2> ^input-link <i3>)
    -->
    (<p2> ^<t2> <i3>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t363-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U33 ^sub1-link <s3>)
    (<s3> ^chain-attr G ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^G <g1>)
    -->
    (<p2> ^<t2> <g1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t308-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U35 ^sub1-link <s3>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p2> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t305-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p3>)
    (<s2> ^rootstate <r1>)
    (<p3> -^id2 <i1> -^id1 <i2> ^sub2 _U36 ^sub2-link <s3> ^sub1 <s4>
          ^sub1-link <s5>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t284-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U21 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr G ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^G <g1>)
    -->
    (<p3> ^<t2> <g1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t229-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U17 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr Q ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^Q <q1>)
    -->
    (<p3> ^<t2> <q1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t226-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^id2 <i1> -^id1 <i2> -^intermediate <i3> ^sub2 _U18 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p4> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t219-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U16 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr Q ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^Q <q1>)
    -->
    (<p3> ^<t2> <q1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t212-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U19 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr Q ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^Q <q1>)
    -->
    (<p3> ^<t2> <q1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t209-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^id2 <i1> -^id1 <i2> -^intermediate <i3> ^sub2 _U20 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p4> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t174-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U15 ^sub1-link <s3>)
    (<s3> ^chain-attr RT ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^RT <r2>)
    -->
    (<p2> ^<t2> <r2>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t153-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U11 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t150-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^id2 <i1> -^id1 <i2> -^intermediate <i3> ^sub2 _U12 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3> ^chain-next <c4>
          ^chain-attr { <c5> <> props$const })
    (<c2> ^io <i4>)
    (<i4> ^input-link <i5>)
    -->
    (<p4> ^<t2> <i5>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t142-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> ^sub1 |_U6| ^attr2 3 ^attr1 out1 ^prop-type add
          ^sub1-link <s3> ^intermediate <i4> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-attr <c3>
          ^chain-next <c5>)
    (<i2> -^<c3> <c4>)
    (<i6> ^3 <i7>)
    (<i1> ^action <a1>)
    (<a1> -^out1 <o3>)
    -->
    (<p3> ^<t2> <a1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t133-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U14 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr G ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^G <g1>)
    -->
    (<p3> ^<t2> <g1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t104-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 |_U9| ^sub1-link <s3>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3>)
    (<c2> ^io <i2>)
    (<i2> ^input-link <i3>)
    -->
    (<p2> ^<t2> <i3>)
}

sp {chunk*apply*props*sub*return*result*add*buffer*arg1*OpNoChange*t76-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1>)
    (<p3> -^id1 <i2> -^intermediate <i3> ^sub1 |_U6| ^attr2 3 ^attr1 out1
          ^prop-type add ^sub1-link <s3> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-next done ^chain-attr action)
    (<c2> ^AC <a1>)
   -{ (<p2> ^object <o3>)
      (<o3> ^id1 <a1> ^id1new <i4>)
      (<i4> ^action <a2>)}
    (<i6> ^3 <i7>)
    (<i1> ^<a3> <a4>)
    -->
    (<p3> ^id1 <a4> ^attr1 out1 - ^attr1 out1 ^end-id1 <e1> ^buff-id2 <e1>
           ^buff-attr2 out1 ^oldattr1 out1)
    (<e1> ^out1 <i7>)
}

sp {chunk*apply*props*sub*chain*iterate*buff*OpNoChange*t74-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^intermediate <i1> -^id1 <i2> ^sub1 |_U6| ^prop-type add
          ^sub1-link <s3> ^attr2 <a2>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <a1>)
    (<c2> ^chain-attr { <c3> <> props$const } ^chain-next <c5>)
   -{ (<p2> ^object <o2>)
      (<o2> ^id1 <a1> ^id1new <i3>)
      (<i3> ^<c3> <c4>)}
    -->
    (<p3> ^intermediate true)
    (<p2> ^object <o3> ^action <a3>)
    (<o3> ^id1 <a1> ^id1new <i4>)
    (<a3> ^id1 <a1> ^attr1 <c3> ^id2 <i4> ^attr2 <c3> ^prop-type action
           ^prop-type add ^lti-name (make-constant-symbol |!|))
    (<i4> ^<c3> <c6>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t67-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 |_U8| ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr G ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^G <g1>)
    -->
    (<p3> ^<t2> <g1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t60-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 |_U5| ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t53-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 |_U4| ^sub1-link <s3>)
    (<s3> ^chain-attr operator ^curr-id <c1> ^chain-next <c2>
          ^target-attr <t1> ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^operator <o2>)
    -->
    (<p2> ^<t2> <o2>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t30-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^const <c1> ^rootstate <r1>)
    (<c1> ^1 <i1>)
    (<p2> -^id1 <i2> ^sub1 |_U3| ^attr1 1 ^prop-type proposal ^sub1-link <s3>)
    (<s3> ^chain-next done ^chain-attr props$const ^target-arg id1
          ^curr-id <c2> ^target-attr <t1> ^depth { <d1> <= 2 })
    -->
    (<p2> ^id1 <c2>)
}

sp {chunk*apply*props*sub*chain*iterate*ops*OpNoChange*t29-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^const <c1> ^rootstate <r1>)
    (<c1> ^1 <i1>)
    (<p2> -^id1 <i2> ^sub1 |_U3| ^attr1 1 ^prop-type proposal ^sub1-link <s3>)
    (<s3> ^chain-next done ^chain-attr props$const ^target-arg id1
          ^curr-id <c2> ^target-attr <t1> ^depth { <d1> <= 2 })
    -->
    (<p2> ^ops <o2>)
    (<o2> ^op <o3> ^op-target attr1)
    (<o3> ^name <i1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t23-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 |_U2| ^sub1-link <s3>)
    (<s3> ^chain-attr G ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^G <g1>)
    -->
    (<p2> ^<t2> <g1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t16-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 |_U1| ^sub1-link <s3>)
    (<s3> ^chain-attr G ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^G <g1>)
    -->
    (<p2> ^<t2> <g1>)
}

sp {chunk*apply*props*sub*chain*iterate*buff*OpNoChange*t629-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^intermediate <i2> ^sub1 _U59 ^prop-type add
          ^sub1-link <s3> ^attr2 <a2>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <a1>)
    (<c2> ^chain-attr { <c3> <> props$const } ^chain-next <c5>)
   -{ (<p2> ^object <o2>)
      (<o2> ^id1 <a1> ^id1new <i3>)
      (<i3> ^<c3> <c4>)}
    -->
    (<p3> ^intermediate true)
    (<p2> ^object <o3> ^action <a3>)
    (<o3> ^id1 <a1> ^id1new <i4>)
    (<a3> ^id1 <a1> ^attr1 <c3> ^id2 <i4> ^attr2 <c3> ^prop-type action
           ^prop-type add ^lti-name (make-constant-symbol |!|))
    (<i4> ^<c3> <c6>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t124-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p3>)
    (<s2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^id2 <i2> ^sub2 _U86 ^sub2-link <s3> ^sub1 <s4>
          ^sub1-link <s5>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t128-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U84 ^sub1-link <s3>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3>)
    (<c2> ^io <i2>)
    (<i2> ^input-link <i3>)
    -->
    (<p2> ^<t2> <i3>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t546-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p3>)
    (<s2> ^rootstate <r1>)
    (<p3> -^id1 <i1> -^id2 <i2> ^sub2 _U83 ^sub2-link <s3> ^sub1 <s4>
          ^sub1-link <s5>)
    (<s3> ^chain-attr WM ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^WM <w1>)
    -->
    (<p3> ^<t2> <w1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t550-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p2>)
    (<s2> ^rootstate <r1>)
    (<p2> -^id1 <i1> ^sub1 _U81 ^sub1-link <s3>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3>)
    (<c2> ^io <i2>)
    (<i2> ^input-link <i3>)
    -->
    (<p2> ^<t2> <i3>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t1144-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^proposal <p2> ^prop <p4>)
    (<s2> ^props-buffer <p3> ^rootstate <r1>)
    (<p4> -^intermediate <i1> -^id1 <i2> -^id2 <i3> ^sub2 _U89 ^prop-type add
          ^sub2-link <s3> ^sub1 <s4> ^sub1-link <s5> ^attr2 <a1>)
    (<s3> ^chain-attr io ^chain-next <c1> ^curr-id <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^chain-attr input-link ^chain-next <c3> ^chain-next <c4>
          ^chain-attr { <c5> <> props$const })
    (<c2> ^io <i4>)
    (<i4> ^input-link <i5>)
    -->
    (<p4> ^<t2> <i5>)
}

sp {chunk*apply*props*sub*chain*iterate*transferred*OpNoChange*t1147-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^intermediate <i3> -^id1 <i4> ^sub1 _U87 ^prop-type add
          ^sub1-link <s3> ^attr2 <a1>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next <c3> ^chain-next <c4>
          ^chain-attr { <c5> <> props$const }
          ^chain-attr { <c6> <> props$const })
    (<i1> ^<c6> <c7>)
    -->
    (<p3> ^intermediate true)
}

sp {chunk*apply*props*sub*chain*iterate*create*OpNoChange*t1148-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^intermediate <i3> -^id1 <i4> ^sub1 _U87 ^attr2 in3 ^prop-type add
          ^sub1-link <s3> ^intermediate <i5> ^id2 <i6> ^attr1 <a1>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-next <c3>
          ^chain-attr { <c4> <> props$const })
    (<i6> ^in3 <i7>)
    (<i1> ^action <a2>)
    (<a2> -^<a1> <a3>)
    -->
    (<a2> ^<a1> <i7>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t1149-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^intermediate <i3> -^id1 <i4> ^sub1 _U87 ^attr2 in3 ^attr1 out2
          ^prop-type add ^sub1-link <s3> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-next <c3>
          ^chain-attr { <c4> <> props$const })
    (<i6> ^in3 <i7>)
    (<i1> ^action <a1>)
    (<a1> -^out2 <o3>)
    -->
    (<p3> ^<t2> <a1>)
}

sp {chunk*apply*props*sub*return*result*OpNoChange*t3121-1
    :chunk
    (state <s1> ^literalize 0 ^operator <o1> ^superstate <s2>)
    (<o1> ^name props-do ^proposal <p1> ^prop <p3>)
    (<s2> ^props-buffer <p2> ^rootstate <r1>)
    (<p2> ^object <o2>)
    (<o2> ^id1new <i1> ^id1 <i2>)
    (<p3> -^id1 <i3> ^sub1 _U87 ^attr2 in3 ^attr1 out2 ^prop-type add
          ^sub1-link <s3> ^intermediate <i4> ^intermediate <i5> ^id2 <i6>)
    (<s3> ^chain-attr AC ^curr-id <c1> ^chain-next <c2> ^target-attr <t1>
          ^target-arg <t2> ^depth { <d1> <= 2 })
    (<c1> ^AC <i2>)
    (<c2> ^chain-next done ^chain-attr action ^chain-attr <c3>
          ^chain-next <c5>)
    (<i2> -^<c3> <c4>)
    (<i6> ^in3 <i7>)
    (<i1> ^action <a1>)
    (<a1> -^out2 <o3>)
    -->
    (<p3> ^<t2> <a1>)
}
