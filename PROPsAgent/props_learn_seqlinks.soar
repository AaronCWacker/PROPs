#####    Author: Bryan Stearns, 2018
# SOURCE THIS TO LEARN LINKS FROM INSTRUCTIONS TO SUBSEQUENT INSTRUCTED INSTRUCTIONS.
# This allows the agent to pick up use of the declarative fetch sequence at the appropriate point after free recall of correct instructions via spreading.
# (However, this is buggy, and can learn overgeneral links. If a task sequence reuses an operator/instructions, it might point to the wrong spot in the sequence.)
# (This would result in iterating through a large portion of the sequence until reaching the correct location, causing more work instead of saving it.)

### SAVE A LINK FROM INSTRUCTIONS TO THE POSITION IN THE MANUAL SEQUENCE ###
# Technically a props-result-success apply rule, for props_instruction_eval.soar, but the processing is more related to the static struct.
sp {apply*props*success*next-rule*save-seq-link
    "Store a link to the manual sequence position on first retrieval. Assumes first retrieval is correct."
    (state <s> ^operator.name props-result-success
               ^props-flag has-failed-instructions # Don't save if the sequence hasn't been properly updated this round (bad save data)
               ^smem.command <scmd>
               ^props-static <ps>
               ^props-instructions <ins>)
    (<ps> ^prev <item>
          ^current-task <task>
          ^next <> nil)
    (<item> ^name <name>)
    -{(<ins> ^in-sequence <sl>)
      (<sl> ^seq-name <task>)}
-->
    (<ins> ^in-sequence <seq>)
    (<seq> ^seq-name <task>
           ^seq-link <item>)
    (<scmd> ^store <ins>
            ^store <seq>)
    (write (crlf) |   * SAVING SEQ-LINK: | <task> |, | <name> | * |) 
}
# IF CORRECT INSTRUCTIONS WERE FOUND USING FREE RECALL, UPDATE THE SEQUENCE POINTER IF POSSIBLE
sp {apply*props*success*next-rule*update
    "If a sequence pointer is known with these instructions, use that instead of incrementing."
    (state <s> ^operator.name props-result-success
              -^props-flag has-failed-instructions
               ^props-instructions <ins>
               ^smem.command <scmd>
               ^props-static <ps>)
    (<ins> ^in-sequence <in1>)
    (<in1> ^seq-name <task>
          ^seq-link <curr>)
    -{(<ins> ^in-sequence {<in2> <> <in1>})
      (<in2> ^seq-name <task>)}
    (<ps> ^prev <previtem>
          ^manual-next-rule <name>
          ^current-task <task>
          ^next <top>)
    (<curr> ^next <newprev>
            ^name {<newname> <> <name>})
    (<newprev> ^next <next>)
-->
    (<ps> ^manual-next-rule <name> -
        ^manual-next-rule <newname>
        ^next <top> -
        ^next <newprev>
        ^prev <previtem> -
        ^prev <newprev>)
    (<scmd> ^store <ps>)
    (write |   * UPDATING | <task> | MANUAL POS TO | <newname> | *| (crlf)) 
}
