#####
# THIS FILE TRANSLATES THE PROPS INSTRUCTIONS
# FROM 'props_ins09.prop' INTO SMEM INSTRUCTIONS USABLE
# BY A PROPS SOAR AGENT.
#####

# BEGIN INSTRUCTIONS

smem --add {
(<S5> ^name apply*remove*thing)
(<Z5> ^name apply*remove*thing)
(<Z5> ^lti-name |_Z5|)
(<Z5> ^prop-type |instruction|)
(<Z5> ^const <Q5>)
(<Z5> ^cond-count 2)
(<Z5> ^act-count 1)
(<Z5> ^spread-source <S5>)
(<Q5> ^1 ets)
(<Q5> ^2 remove-thing)
(<Z5> ^condition |_P1|)
(<Z5> ^prop-link <P1>)
(<Z5> ^cond-spread-source <CueZ5P1>)
(<CueZ5P1> ^props-instruction-set <S5>)
(<CueZ5P1> ^name |_P1|)
(<S5> ^condition <ScondZ5P1>)
(<ScondZ5P1> ^prop-instructions <Z5>)
(<ScondZ5P1> ^name |_P1|)
(<Z5> ^condition |_P7|)
(<Z5> ^prop-link <P7>)
(<Z5> ^cond-spread-source <CueZ5P7>)
(<CueZ5P7> ^props-instruction-set <S5>)
(<CueZ5P7> ^name |_P7|)
(<S5> ^condition <ScondZ5P7>)
(<ScondZ5P7> ^prop-instructions <Z5>)
(<ScondZ5P7> ^name |_P7|)
(<Z5> ^flag |o-supported|)
(<Z5> ^action |_P12|)
(<Z5> ^prop-link <P12>)
(<P12> ^lti-name |_P12|)
(<P12> ^prop-type remove)
(<P12> ^id1 props$rootstate)
(<P12> ^attr1 thing)

(<S4> ^name propose*remove*thing)
(<Z4> ^name propose*remove*thing)
(<Z4> ^lti-name |_Z4|)
(<Z4> ^prop-type |instruction|)
(<Z4> ^const <Q4>)
(<Z4> ^cond-count 2)
(<Z4> ^act-count 1)
(<Z4> ^spread-source <S4>)
(<Q4> ^1 ets)
(<Q4> ^2 remove-thing)
(<Z4> ^condition |_P1|)
(<Z4> ^prop-link <P1>)
(<Z4> ^cond-spread-source <CueZ4P1>)
(<CueZ4P1> ^props-instruction-set <S4>)
(<CueZ4P1> ^name |_P1|)
(<S4> ^condition <ScondZ4P1>)
(<ScondZ4P1> ^prop-instructions <Z4>)
(<ScondZ4P1> ^name |_P1|)
(<Z4> ^condition |_P10|)
(<Z4> ^prop-link <P10>)
(<Z4> ^cond-spread-source <CueZ4P10>)
(<CueZ4P10> ^props-instruction-set <S4>)
(<CueZ4P10> ^name |_P10|)
(<S4> ^condition <ScondZ4P10>)
(<ScondZ4P10> ^prop-instructions <Z4>)
(<ScondZ4P10> ^name |_P10|)
(<P10> ^lti-name |_P10|)
(<P10> ^prop-type existence)
(<P10> ^id1 props$rootstate)
(<P10> ^attr1 thing)
(<Z4> ^action |_P11|)
(<Z4> ^prop-link <P11>)
(<P11> ^lti-name |_P11|)
(<P11> ^prop-type better)
(<P11> ^attr1 2)
(<P11> ^sub1 |_U10|)
(<P11> ^sub1-link <U10>)
(<U10> ^lti-name |_U10|)
(<U10> ^curr-id props$rootstate)
(<U10> ^target-arg id1)
(<U10> ^depth 1)
(<U10> ^chain-attr props$const)
(<U10> ^chain-next |done|)

(<S3> ^name apply*long)
(<Z3> ^name apply*long)
(<Z3> ^lti-name |_Z3|)
(<Z3> ^prop-type |instruction|)
(<Z3> ^const <Q3>)
(<Z3> ^cond-count 2)
(<Z3> ^act-count 1)
(<Z3> ^spread-source <S3>)
(<Q3> ^1 ets)
(<Q3> ^2 add-long)
(<Z3> ^condition |_P1|)
(<Z3> ^prop-link <P1>)
(<Z3> ^cond-spread-source <CueZ3P1>)
(<CueZ3P1> ^props-instruction-set <S3>)
(<CueZ3P1> ^name |_P1|)
(<S3> ^condition <ScondZ3P1>)
(<ScondZ3P1> ^prop-instructions <Z3>)
(<ScondZ3P1> ^name |_P1|)
(<Z3> ^condition |_P7|)
(<Z3> ^prop-link <P7>)
(<Z3> ^cond-spread-source <CueZ3P7>)
(<CueZ3P7> ^props-instruction-set <S3>)
(<CueZ3P7> ^name |_P7|)
(<S3> ^condition <ScondZ3P7>)
(<ScondZ3P7> ^prop-instructions <Z3>)
(<ScondZ3P7> ^name |_P7|)
(<Z3> ^flag |o-supported|)
(<Z3> ^action |_P9|)
(<Z3> ^prop-link <P9>)
(<P9> ^lti-name |_P9|)
(<P9> ^prop-type add)
(<P9> ^id1 props$rootstate)
(<P9> ^attr1 thing)
(<P9> ^attr2 D)
(<P9> ^sub2 |_U7|)
(<P9> ^sub2-link <U7>)
(<U7> ^lti-name |_U7|)
(<U7> ^curr-id props$rootstate)
(<U7> ^target-arg id2)
(<U7> ^depth 3)
(<U7> ^chain-attr A)
(<U7> ^chain-next <U8>)
(<U8> ^chain-attr B)
(<U8> ^chain-next <U9>)
(<U9> ^chain-attr C)
(<U9> ^chain-next |done|)

(<S2> ^name apply*short)
(<Z2> ^name apply*short)
(<Z2> ^lti-name |_Z2|)
(<Z2> ^prop-type |instruction|)
(<Z2> ^const <Q2>)
(<Z2> ^cond-count 2)
(<Z2> ^act-count 1)
(<Z2> ^spread-source <S2>)
(<Q2> ^1 ets)
(<Q2> ^2 add-short)
(<Z2> ^condition |_P1|)
(<Z2> ^prop-link <P1>)
(<Z2> ^cond-spread-source <CueZ2P1>)
(<CueZ2P1> ^props-instruction-set <S2>)
(<CueZ2P1> ^name |_P1|)
(<S2> ^condition <ScondZ2P1>)
(<ScondZ2P1> ^prop-instructions <Z2>)
(<ScondZ2P1> ^name |_P1|)
(<Z2> ^condition |_P7|)
(<Z2> ^prop-link <P7>)
(<Z2> ^cond-spread-source <CueZ2P7>)
(<CueZ2P7> ^props-instruction-set <S2>)
(<CueZ2P7> ^name |_P7|)
(<S2> ^condition <ScondZ2P7>)
(<ScondZ2P7> ^prop-instructions <Z2>)
(<ScondZ2P7> ^name |_P7|)
(<P7> ^lti-name |_P7|)
(<P7> ^prop-type equality)
(<P7> ^attr1 name)
(<P7> ^id2 props$const)
(<P7> ^attr2 2)
(<P7> ^sub1 |_U5|)
(<P7> ^sub1-link <U5>)
(<U5> ^lti-name |_U5|)
(<U5> ^curr-id props$rootstate)
(<U5> ^target-arg id1)
(<U5> ^depth 1)
(<U5> ^chain-attr operator)
(<U5> ^chain-next |done|)
(<Z2> ^flag |o-supported|)
(<Z2> ^action |_P8|)
(<Z2> ^prop-link <P8>)
(<P8> ^lti-name |_P8|)
(<P8> ^prop-type add)
(<P8> ^id1 props$rootstate)
(<P8> ^attr1 thing)
(<P8> ^attr2 B)
(<P8> ^sub2 |_U6|)
(<P8> ^sub2-link <U6>)
(<U6> ^lti-name |_U6|)
(<U6> ^curr-id props$rootstate)
(<U6> ^target-arg id2)
(<U6> ^depth 1)
(<U6> ^chain-attr A)
(<U6> ^chain-next |done|)

(<S1> ^name propose*add*thing)
(<Z1> ^name propose*add*thing)
(<Z1> ^lti-name |_Z1|)
(<Z1> ^prop-type |instruction|)
(<Z1> ^const <Q1>)
(<Z1> ^cond-count 2)
(<Z1> ^act-count 4)
(<Z1> ^spread-source <S1>)
(<Q1> ^1 ets)
(<Q1> ^2 add-short)
(<Q1> ^3 add-long)
(<Z1> ^condition |_P1|)
(<Z1> ^prop-link <P1>)
(<Z1> ^cond-spread-source <CueZ1P1>)
(<CueZ1P1> ^props-instruction-set <S1>)
(<CueZ1P1> ^name |_P1|)
(<S1> ^condition <ScondZ1P1>)
(<ScondZ1P1> ^prop-instructions <Z1>)
(<ScondZ1P1> ^name |_P1|)
(<P1> ^lti-name |_P1|)
(<P1> ^prop-type equality)
(<P1> ^id1 props$rootstate)
(<P1> ^attr1 name)
(<P1> ^id2 props$const)
(<P1> ^attr2 1)
(<Z1> ^condition |_P2|)
(<Z1> ^prop-link <P2>)
(<Z1> ^cond-spread-source <CueZ1P2>)
(<CueZ1P2> ^props-instruction-set <S1>)
(<CueZ1P2> ^name |_P2|)
(<S1> ^condition <ScondZ1P2>)
(<ScondZ1P2> ^prop-instructions <Z1>)
(<ScondZ1P2> ^name |_P2|)
(<P2> ^lti-name |_P2|)
(<P2> ^prop-type negation)
(<P2> ^id1 props$rootstate)
(<P2> ^attr1 thing)
(<Z1> ^action |_P3|)
(<Z1> ^prop-link <P3>)
(<P3> ^lti-name |_P3|)
(<P3> ^prop-type acceptable)
(<P3> ^attr1 2)
(<P3> ^sub1 |_U1|)
(<P3> ^sub1-link <U1>)
(<U1> ^lti-name |_U1|)
(<U1> ^curr-id props$rootstate)
(<U1> ^target-arg id1)
(<U1> ^depth 1)
(<U1> ^chain-attr props$const)
(<U1> ^chain-next |done|)
(<Z1> ^action |_P4|)
(<Z1> ^prop-link <P4>)
(<P4> ^lti-name |_P4|)
(<P4> ^prop-type add)
(<P4> ^attr1 2)
(<P4> ^sub1 |_U2|)
(<P4> ^sub1-link <U2>)
(<U2> ^lti-name |_U2|)
(<U2> ^curr-id props$rootstate)
(<U2> ^target-arg id1)
(<U2> ^depth 1)
(<U2> ^chain-attr props$const)
(<U2> ^chain-next |done|)
(<Z1> ^action |_P5|)
(<Z1> ^prop-link <P5>)
(<P5> ^lti-name |_P5|)
(<P5> ^prop-type acceptable)
(<P5> ^attr1 3)
(<P5> ^sub1 |_U3|)
(<P5> ^sub1-link <U3>)
(<U3> ^lti-name |_U3|)
(<U3> ^curr-id props$rootstate)
(<U3> ^target-arg id1)
(<U3> ^depth 1)
(<U3> ^chain-attr props$const)
(<U3> ^chain-next |done|)
(<Z1> ^action |_P6|)
(<Z1> ^prop-link <P6>)
(<P6> ^lti-name |_P6|)
(<P6> ^prop-type add)
(<P6> ^attr1 3)
(<P6> ^sub1 |_U4|)
(<P6> ^sub1-link <U4>)
(<U4> ^lti-name |_U4|)
(<U4> ^curr-id props$rootstate)
(<U4> ^target-arg id1)
(<U4> ^depth 1)
(<U4> ^chain-attr props$const)
(<U4> ^chain-next |done|)

}
